{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\golun\\\\TimeTracker\\\\client\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Card, CardContent, Typography, MenuItem, TextField, CircularProgress, Alert, Switch, FormControlLabel, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, IconButton, Collapse, Menu } from '@mui/material';\nimport { BarChart, Bar, PieChart, Pie, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, HeatMap } from 'recharts';\nimport { startOfWeek, startOfMonth, startOfQuarter, startOfYear, format } from 'date-fns';\nimport axios from 'axios';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport { Responsive, WidthProvider } from 'react-grid-layout';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8'];\nconst timeRanges = [{\n  value: 'week',\n  label: 'This Week'\n}, {\n  value: 'month',\n  label: 'This Month'\n}, {\n  value: 'quarter',\n  label: 'This Quarter'\n}, {\n  value: 'year',\n  label: 'This Year'\n}, {\n  value: 'all',\n  label: 'All Time'\n}];\nconst ResponsiveGridLayout = WidthProvider(Responsive);\n_c = ResponsiveGridLayout;\nconst WIDGET_SIZES = {\n  SMALL: {\n    w: 5,\n    h: 6\n  },\n  WIDE: {\n    w: 11,\n    h: 6\n  }\n};\nconst WIDGET_POSITIONS = {\n  projectHours: {\n    x: 0,\n    y: 0\n  },\n  clientType: {\n    x: 6,\n    y: 0\n  },\n  hoursByClient: {\n    x: 0,\n    y: 6\n  }\n};\nconst GRID_COLUMNS = 12;\nconst GRID_ROWS = 12;\nfunction Dashboard() {\n  _s();\n  const [timeRange, setTimeRange] = useState('month');\n  const [projectData, setProjectData] = useState([]);\n  const [userData, setUserData] = useState([]);\n  const [clientTypeData, setClientTypeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showPercent, setShowPercent] = useState(false);\n  const [expandedProjects, setExpandedProjects] = useState([]);\n  const [showProjectPercent, setShowProjectPercent] = useState(false);\n  const [viewByUser, setViewByUser] = useState(false);\n  const [widgetSizes, setWidgetSizes] = useState({\n    projectHours: WIDGET_SIZES.SMALL,\n    clientType: WIDGET_SIZES.SMALL,\n    hoursByClient: WIDGET_SIZES.WIDE\n  });\n  const [menuAnchorEl, setMenuAnchorEl] = useState(null);\n  const [activeWidget, setActiveWidget] = useState(null);\n  const [widgetPositions, setWidgetPositions] = useState(WIDGET_POSITIONS);\n  const handleMenuClick = (event, widgetId) => {\n    setMenuAnchorEl(event.currentTarget);\n    setActiveWidget(widgetId);\n  };\n  const handleMenuClose = () => {\n    setMenuAnchorEl(null);\n    setActiveWidget(null);\n  };\n  const handleSizeChange = size => {\n    setWidgetSizes(prev => ({\n      ...prev,\n      [activeWidget]: size\n    }));\n    handleMenuClose();\n  };\n  const canMove = (widgetId, direction) => {\n    const currentPos = widgetPositions[widgetId];\n    const newPos = {\n      ...currentPos\n    };\n    switch (direction) {\n      case 'left':\n        newPos.x = Math.max(0, currentPos.x - 6);\n        break;\n      case 'right':\n        newPos.x = Math.min(GRID_COLUMNS - widgetSizes[widgetId].w, currentPos.x + 6);\n        break;\n      case 'up':\n        newPos.y = Math.max(0, currentPos.y - 6);\n        break;\n      case 'down':\n        newPos.y = Math.min(GRID_ROWS - widgetSizes[widgetId].h, currentPos.y + 6);\n        break;\n      default:\n        return false;\n    }\n\n    // Check if the new position is different from current\n    return newPos.x !== currentPos.x || newPos.y !== currentPos.y;\n  };\n  const handleMove = direction => {\n    if (!activeWidget) return;\n    const currentPos = widgetPositions[activeWidget];\n    const newPos = {\n      ...currentPos\n    };\n    switch (direction) {\n      case 'left':\n        newPos.x = Math.max(0, currentPos.x - 6);\n        break;\n      case 'right':\n        newPos.x = Math.min(GRID_COLUMNS - widgetSizes[activeWidget].w, currentPos.x + 6);\n        break;\n      case 'up':\n        newPos.y = Math.max(0, currentPos.y - 6);\n        break;\n      case 'down':\n        newPos.y = Math.min(GRID_ROWS - widgetSizes[activeWidget].h, currentPos.y + 6);\n        break;\n      default:\n        return;\n    }\n\n    // Find if there's a widget at the new position\n    const widgetAtNewPos = Object.entries(widgetPositions).find(([id, pos]) => id !== activeWidget && pos.x === newPos.x && pos.y === newPos.y);\n    if (widgetAtNewPos) {\n      // Swap positions\n      const [otherWidgetId] = widgetAtNewPos;\n      setWidgetPositions(prev => ({\n        ...prev,\n        [activeWidget]: newPos,\n        [otherWidgetId]: currentPos\n      }));\n    } else {\n      // Just move the widget\n      setWidgetPositions(prev => ({\n        ...prev,\n        [activeWidget]: newPos\n      }));\n    }\n    handleMenuClose();\n  };\n  const getLayouts = () => {\n    return {\n      lg: [{\n        i: 'projectHours',\n        ...widgetPositions.projectHours,\n        ...widgetSizes.projectHours,\n        static: true\n      }, {\n        i: 'clientType',\n        ...widgetPositions.clientType,\n        ...widgetSizes.clientType,\n        static: true\n      }, {\n        i: 'hoursByClient',\n        ...widgetPositions.hoursByClient,\n        ...widgetSizes.hoursByClient,\n        static: true\n      }]\n    };\n  };\n  const WidgetMenu = () => /*#__PURE__*/_jsxDEV(Menu, {\n    anchorEl: menuAnchorEl,\n    open: Boolean(menuAnchorEl),\n    onClose: handleMenuClose,\n    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n      onClick: () => handleSizeChange(WIDGET_SIZES.SMALL),\n      children: \"Small (Half Width)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      onClick: () => handleSizeChange(WIDGET_SIZES.WIDE),\n      children: \"Wide (Full Width)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      onClick: () => handleMove('left'),\n      disabled: !canMove(activeWidget, 'left'),\n      children: \"Move Left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      onClick: () => handleMove('right'),\n      disabled: !canMove(activeWidget, 'right'),\n      children: \"Move Right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      onClick: () => handleMove('up'),\n      disabled: !canMove(activeWidget, 'up'),\n      children: \"Move Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      onClick: () => handleMove('down'),\n      disabled: !canMove(activeWidget, 'down'),\n      children: \"Move Down\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n  const getDateRange = () => {\n    const now = new Date();\n    let startDate;\n    switch (timeRange) {\n      case 'week':\n        startDate = startOfWeek(now, {\n          weekStartsOn: 1\n        });\n        break;\n      case 'month':\n        startDate = startOfMonth(now);\n        break;\n      case 'quarter':\n        startDate = startOfQuarter(now);\n        break;\n      case 'year':\n        startDate = startOfYear(now);\n        break;\n      default:\n        startDate = null;\n    }\n    return {\n      startDate: startDate ? format(startDate, 'yyyy-MM-dd') + 'T00:00:00.000Z' : null,\n      endDate: format(now, 'yyyy-MM-dd') + 'T23:59:59.999Z'\n    };\n  };\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const {\n        startDate,\n        endDate\n      } = getDateRange();\n      const dateParams = startDate ? `?startDate=${startDate}&endDate=${endDate}` : '';\n      console.log('Fetching analytics data with params:', {\n        startDate,\n        endDate\n      });\n      const [projectRes, userRes, clientTypeRes] = await Promise.all([axios.get(`/api/analytics/time-by-project${dateParams}`), axios.get(`/api/analytics/time-by-user${dateParams}`), axios.get(`/api/analytics/time-by-client-type${dateParams}`)]);\n      console.log('Project data:', projectRes.data);\n      console.log('User data:', userRes.data);\n      console.log('Client type data:', clientTypeRes.data);\n      setProjectData(projectRes.data);\n      setUserData(userRes.data);\n      setClientTypeData(clientTypeRes.data);\n    } catch (err) {\n      console.error('Error fetching analytics:', err);\n      setError('Failed to fetch analytics data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, [timeRange]);\n  const formatHours = hours => {\n    return Math.round(hours * 100) / 100;\n  };\n\n  // Prepare users and projects arrays first so they are available for all calculations\n  const users = Array.from(new Set(userData.map(d => d.user_name)));\n  const projects = Array.from(new Set(userData.map(d => d.project_name)));\n\n  // Helper: count weekdays between two dates (inclusive)\n  function countWeekdays(start, end) {\n    let count = 0;\n    let current = new Date(start);\n    while (current <= end) {\n      const day = current.getDay();\n      if (day !== 0 && day !== 6) count++;\n      current.setDate(current.getDate() + 1);\n    }\n    return count;\n  }\n\n  // Calculate period start/end\n  const now = new Date();\n  let periodStart, periodEnd;\n  switch (timeRange) {\n    case 'week':\n      periodStart = startOfWeek(now);\n      periodEnd = now;\n      break;\n    case 'month':\n      periodStart = startOfMonth(now);\n      periodEnd = now;\n      break;\n    case 'quarter':\n      periodStart = startOfQuarter(now);\n      periodEnd = now;\n      break;\n    case 'year':\n      periodStart = startOfYear(now);\n      periodEnd = now;\n      break;\n    case 'all':\n    default:\n      // Use earliest and latest date in userData\n      const allDates = userData.map(d => new Date(d.start_time)).filter(Boolean);\n      periodStart = allDates.length ? new Date(Math.min(...allDates)) : now;\n      periodEnd = allDates.length ? new Date(Math.max(...allDates)) : now;\n      break;\n  }\n  const weekdays = countWeekdays(periodStart, periodEnd);\n  const userCapacity = users.map(() => weekdays * 8);\n  // Calculate total hours logged per user in the period\n  const userLogged = users.map(user => userData.filter(d => d.user_name === user).reduce((sum, d) => sum + d.total_hours, 0));\n  const userAvailable = userCapacity.map((cap, i) => Math.max(0, cap - userLogged[i]));\n\n  // Calculate total system hours across all projects\n  const totalSystemHours = projectData.reduce((sum, project) => sum + project.total_hours, 0);\n\n  // Build a matrix: rows = projects, cols = users\n  const heatMapData = [userAvailable,\n  // Capacity row\n  userLogged,\n  // Total load row\n  ...projects.map(project => users.map(user => {\n    const found = userData.find(d => d.user_name === user && d.project_name === project);\n    return found ? found.total_hours : 0;\n  }))];\n  const allProjectsWithCapacity = ['Capacity', 'Total load', ...projects];\n\n  // Set column width for heatmap (wider for wrapped names)\n  const colWidth = 100;\n  const cellWidth = 95;\n  const cellHeight = 35;\n  const xOffset = 100;\n  const yOffset = 60;\n  const heatmapRows = allProjectsWithCapacity.length;\n  const heatmapHeight = heatmapRows * cellHeight + yOffset + 40; // 40 for header padding\n\n  const handleExpandClick = projectName => {\n    setExpandedProjects(prev => prev.includes(projectName) ? prev.filter(name => name !== projectName) : [...prev, projectName]);\n  };\n\n  // Precompute table rows to avoid returning arrays or IIFEs in JSX\n  let projectRows = [];\n  let userRows = [];\n  if (viewByUser) {\n    const usersList = Array.from(new Set(userData.map(d => d.user_name)));\n    usersList.forEach(user => {\n      const isExpanded = expandedProjects.includes(user);\n      const userProjects = userData.filter(d => d.user_name === user && d.total_hours > 0).map(d => ({\n        project: d.project_name,\n        hours: d.total_hours\n      }));\n      const userTotalHours = userProjects.reduce((sum, p) => sum + p.hours, 0);\n      const percent = totalSystemHours > 0 ? userTotalHours / totalSystemHours * 100 : 0;\n      userRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          sx: {\n            fontWeight: 500\n          },\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            onClick: () => handleExpandClick(user),\n            children: isExpanded ? /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 13\n          }, this), user]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: showProjectPercent ? `${Math.round(percent)}%` : `${formatHours(userTotalHours)}h`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: '100%',\n              height: 16,\n              bgcolor: '#e3eafc',\n              borderRadius: 2,\n              position: 'relative'\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: `${percent}%`,\n                height: '100%',\n                bgcolor: '#1976d2',\n                borderRadius: 2,\n                transition: 'width 0.3s'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this)]\n      }, user, true, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 9\n      }, this));\n      if (isExpanded && userProjects.length > 0) {\n        userProjects.forEach(p => {\n          const projectPercent = p.hours / userTotalHours * 100;\n          userRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                pl: 6\n              },\n              children: p.project\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: showProjectPercent ? `${Math.round(projectPercent)}%` : `${formatHours(p.hours)}h`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: '100%',\n                  height: 12,\n                  bgcolor: '#e3eafc',\n                  borderRadius: 2,\n                  position: 'relative'\n                },\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    width: `${projectPercent}%`,\n                    height: '100%',\n                    bgcolor: '#1976d2',\n                    borderRadius: 2,\n                    transition: 'width 0.3s'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 15\n            }, this)]\n          }, user + '-' + p.project, true, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 13\n          }, this));\n        });\n      }\n      if (isExpanded && userProjects.length === 0) {\n        userRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n          children: /*#__PURE__*/_jsxDEV(TableCell, {\n            colSpan: 3,\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"text.secondary\",\n              children: \"No project data for this user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 13\n          }, this)\n        }, user + '-no-projects', false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 11\n        }, this));\n      }\n    });\n  } else {\n    projectData.forEach(project => {\n      const isExpanded = expandedProjects.includes(project.project_name);\n      const usersForProject = userData.filter(d => d.project_name === project.project_name && d.total_hours > 0).map(d => ({\n        user: d.user_name,\n        hours: d.total_hours\n      }));\n      const percent = totalSystemHours > 0 ? project.total_hours / totalSystemHours * 100 : 0;\n      projectRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          sx: {\n            fontWeight: 500\n          },\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            onClick: () => handleExpandClick(project.project_name),\n            children: isExpanded ? /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 13\n          }, this), project.project_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: showProjectPercent ? `${Math.round(percent)}%` : `${formatHours(project.total_hours)}h`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: '100%',\n              height: 16,\n              bgcolor: '#e3eafc',\n              borderRadius: 2,\n              position: 'relative'\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: `${percent}%`,\n                height: '100%',\n                bgcolor: '#1976d2',\n                borderRadius: 2,\n                transition: 'width 0.3s'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this)]\n      }, project.project_name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 9\n      }, this));\n      if (isExpanded && usersForProject.length > 0) {\n        usersForProject.forEach(u => {\n          const userPercent = u.hours / project.total_hours * 100;\n          projectRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                pl: 6\n              },\n              children: u.user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: showProjectPercent ? `${Math.round(userPercent)}%` : `${formatHours(u.hours)}h`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: '100%',\n                  height: 12,\n                  bgcolor: '#e3eafc',\n                  borderRadius: 2,\n                  position: 'relative'\n                },\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    width: `${userPercent}%`,\n                    height: '100%',\n                    bgcolor: '#1976d2',\n                    borderRadius: 2,\n                    transition: 'width 0.3s'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 525,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 15\n            }, this)]\n          }, project.project_name + '-' + u.user, true, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 13\n          }, this));\n        });\n      }\n      if (isExpanded && usersForProject.length === 0) {\n        projectRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n          children: /*#__PURE__*/_jsxDEV(TableCell, {\n            colSpan: 3,\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"text.secondary\",\n              children: \"No user data for this project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 13\n          }, this)\n        }, project.project_name + '-no-users', false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 11\n        }, this));\n      }\n    });\n  }\n\n  // Always flatten the rows to avoid nested arrays\n  userRows = userRows.flat(Infinity);\n  projectRows = projectRows.flat(Infinity);\n\n  // Debug: log the full structure of the rows before rendering\n  try {\n    console.log('userRows (full):', JSON.stringify(userRows));\n  } catch (e) {\n    console.log('userRows (full):', userRows);\n  }\n  try {\n    console.log('projectRows (full):', JSON.stringify(projectRows));\n  } catch (e) {\n    console.log('projectRows (full):', projectRows);\n  }\n  let tableRows;\n  if (viewByUser) {\n    tableRows = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: userRows\n    }, void 0, false);\n  } else if (projectRows.length > 0) {\n    tableRows = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: projectRows\n    }, void 0, false);\n  } else {\n    tableRows = /*#__PURE__*/_jsxDEV(TableRow, {\n      children: /*#__PURE__*/_jsxDEV(TableCell, {\n        colSpan: 3,\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"text.secondary\",\n          children: \"No project data available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 7\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"60vh\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        select: true,\n        value: timeRange,\n        onChange: e => setTimeRange(e.target.value),\n        sx: {\n          minWidth: 200\n        },\n        children: timeRanges.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: option.value,\n          children: option.label\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveGridLayout, {\n      className: \"layout\",\n      layouts: getLayouts(),\n      breakpoints: {\n        lg: 1200,\n        md: 996,\n        sm: 768,\n        xs: 480,\n        xxs: 0\n      },\n      cols: {\n        lg: 12,\n        md: 10,\n        sm: 6,\n        xs: 4,\n        xxs: 2\n      },\n      rowHeight: 50,\n      margin: [16, 16],\n      containerPadding: [16, 16],\n      isDraggable: false,\n      isResizable: false,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Hours by Project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 628,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: e => handleMenuClick(e, 'projectHours'),\n                children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 632,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 631,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 627,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  gap: 2,\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  control: /*#__PURE__*/_jsxDEV(Switch, {\n                    checked: viewByUser,\n                    onChange: e => setViewByUser(e.target.checked),\n                    color: \"primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 639,\n                    columnNumber: 23\n                  }, this),\n                  label: viewByUser ? \"View by User\" : \"View by Project\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 637,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  control: /*#__PURE__*/_jsxDEV(Switch, {\n                    checked: showProjectPercent,\n                    onChange: e => setShowProjectPercent(e.target.checked),\n                    color: \"primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 649,\n                    columnNumber: 23\n                  }, this),\n                  label: showProjectPercent ? 'Show: % of System Total' : 'Show: Hours'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 647,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 636,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n                component: Paper,\n                sx: {\n                  boxShadow: 'none'\n                },\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  size: \"small\",\n                  children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                    children: /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        sx: {\n                          fontWeight: 600\n                        },\n                        children: \"Project\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 662,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        sx: {\n                          fontWeight: 600\n                        },\n                        children: \"Total Hours\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 663,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        sx: {\n                          fontWeight: 600\n                        },\n                        children: \"Load\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 664,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 661,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 660,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                    children: tableRows\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 667,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 659,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 658,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 635,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 11\n        }, this)\n      }, \"projectHours\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Internal vs External Hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 680,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: e => handleMenuClick(e, 'clientType'),\n                children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 684,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 683,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 679,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  height: 300\n                },\n                children: clientTypeData.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                  children: /*#__PURE__*/_jsxDEV(PieChart, {\n                    children: [/*#__PURE__*/_jsxDEV(Pie, {\n                      data: clientTypeData,\n                      dataKey: \"total_hours\",\n                      nameKey: \"client_type\",\n                      cx: \"50%\",\n                      cy: \"50%\",\n                      outerRadius: 100,\n                      label: ({\n                        client_type,\n                        total_hours\n                      }) => `${client_type}: ${formatHours(total_hours)}h`,\n                      children: clientTypeData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                        fill: COLORS[index % COLORS.length]\n                      }, entry.client_type, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 704,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 692,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                      formatter: value => formatHours(value) + ' hours'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 707,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 708,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 691,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 690,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(Box, {\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  height: \"100%\",\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    color: \"text.secondary\",\n                    children: \"No client type data available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 713,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 712,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 688,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 687,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 678,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 11\n        }, this)\n      }, \"clientType\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Hours by Client\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 725,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: e => handleMenuClick(e, 'hoursByClient'),\n                children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 729,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 728,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 724,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  height: 300\n                },\n                children: projectData && projectData.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                  children: /*#__PURE__*/_jsxDEV(BarChart, {\n                    data: (() => {\n                      const clientData = projectData.reduce((acc, project) => {\n                        if (!project || typeof project !== 'object') return acc;\n                        const clientName = project.client_name || 'Unassigned';\n                        const existingClient = acc.find(c => c.name === clientName);\n                        if (existingClient) {\n                          existingClient.hours += project.total_hours;\n                        } else {\n                          acc.push({\n                            name: clientName,\n                            hours: project.total_hours\n                          });\n                        }\n                        return acc;\n                      }, []);\n                      return clientData.filter(c => typeof c.name === 'string' && typeof c.hours === 'number');\n                    })(),\n                    margin: {\n                      top: 20,\n                      right: 30,\n                      left: 20,\n                      bottom: 5\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                      strokeDasharray: \"3 3\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 753,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                      dataKey: \"name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 754,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 755,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                      formatter: value => formatHours(value) + ' hours'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 756,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 757,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                      dataKey: \"hours\",\n                      fill: \"#8884d8\",\n                      name: \"Hours\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 758,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 736,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 735,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(Box, {\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  height: \"100%\",\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    color: \"text.secondary\",\n                    children: \"No client data available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 763,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 762,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 733,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 732,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 723,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 11\n        }, this)\n      }, \"hoursByClient\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 721,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WidgetMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 772,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 592,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"29ztuhF5kFYBjS1mfRY1Yy1Q4UQ=\");\n_c2 = Dashboard;\nexport default Dashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"ResponsiveGridLayout\");\n$RefreshReg$(_c2, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Box","Card","CardContent","Typography","MenuItem","TextField","CircularProgress","Alert","Switch","FormControlLabel","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","IconButton","Collapse","Menu","BarChart","Bar","PieChart","Pie","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","HeatMap","startOfWeek","startOfMonth","startOfQuarter","startOfYear","format","axios","AddIcon","RemoveIcon","Responsive","WidthProvider","MoreVertIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","COLORS","timeRanges","value","label","ResponsiveGridLayout","_c","WIDGET_SIZES","SMALL","w","h","WIDE","WIDGET_POSITIONS","projectHours","x","y","clientType","hoursByClient","GRID_COLUMNS","GRID_ROWS","Dashboard","_s","timeRange","setTimeRange","projectData","setProjectData","userData","setUserData","clientTypeData","setClientTypeData","loading","setLoading","error","setError","showPercent","setShowPercent","expandedProjects","setExpandedProjects","showProjectPercent","setShowProjectPercent","viewByUser","setViewByUser","widgetSizes","setWidgetSizes","menuAnchorEl","setMenuAnchorEl","activeWidget","setActiveWidget","widgetPositions","setWidgetPositions","handleMenuClick","event","widgetId","currentTarget","handleMenuClose","handleSizeChange","size","prev","canMove","direction","currentPos","newPos","Math","max","min","handleMove","widgetAtNewPos","Object","entries","find","id","pos","otherWidgetId","getLayouts","lg","i","static","WidgetMenu","anchorEl","open","Boolean","onClose","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","disabled","getDateRange","now","Date","startDate","weekStartsOn","endDate","fetchData","dateParams","console","log","projectRes","userRes","clientTypeRes","Promise","all","get","data","err","formatHours","hours","round","users","Array","from","Set","map","d","user_name","projects","project_name","countWeekdays","start","end","count","current","day","getDay","setDate","getDate","periodStart","periodEnd","allDates","start_time","filter","length","weekdays","userCapacity","userLogged","user","reduce","sum","total_hours","userAvailable","cap","totalSystemHours","project","heatMapData","found","allProjectsWithCapacity","colWidth","cellWidth","cellHeight","xOffset","yOffset","heatmapRows","heatmapHeight","handleExpandClick","projectName","includes","name","projectRows","userRows","usersList","forEach","isExpanded","userProjects","userTotalHours","p","percent","push","sx","fontWeight","width","height","bgcolor","borderRadius","position","transition","projectPercent","pl","colSpan","align","color","usersForProject","u","userPercent","flat","Infinity","JSON","stringify","e","tableRows","display","justifyContent","alignItems","minHeight","mb","variant","select","onChange","target","minWidth","option","severity","className","layouts","breakpoints","md","sm","xs","xxs","cols","rowHeight","margin","containerPadding","isDraggable","isResizable","gutterBottom","gap","control","checked","component","boxShadow","dataKey","nameKey","cx","cy","outerRadius","client_type","entry","index","fill","formatter","clientData","acc","clientName","client_name","existingClient","c","top","right","left","bottom","strokeDasharray","_c2","$RefreshReg$"],"sources":["C:/Users/golun/TimeTracker/client/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  MenuItem,\n  TextField,\n  CircularProgress,\n  Alert,\n  Switch,\n  FormControlLabel,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  IconButton,\n  Collapse,\n  Menu,\n} from '@mui/material';\nimport {\n  BarChart,\n  Bar,\n  PieChart,\n  Pie,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  HeatMap,\n} from 'recharts';\nimport { startOfWeek, startOfMonth, startOfQuarter, startOfYear, format } from 'date-fns';\nimport axios from 'axios';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport { Responsive, WidthProvider } from 'react-grid-layout';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8'];\n\nconst timeRanges = [\n  { value: 'week', label: 'This Week' },\n  { value: 'month', label: 'This Month' },\n  { value: 'quarter', label: 'This Quarter' },\n  { value: 'year', label: 'This Year' },\n  { value: 'all', label: 'All Time' },\n];\n\nconst ResponsiveGridLayout = WidthProvider(Responsive);\n\nconst WIDGET_SIZES = {\n  SMALL: { w: 5, h: 6 },\n  WIDE: { w: 11, h: 6 },\n};\n\nconst WIDGET_POSITIONS = {\n  projectHours: { x: 0, y: 0 },\n  clientType: { x: 6, y: 0 },\n  hoursByClient: { x: 0, y: 6 },\n};\n\nconst GRID_COLUMNS = 12;\nconst GRID_ROWS = 12;\n\nfunction Dashboard() {\n  const [timeRange, setTimeRange] = useState('month');\n  const [projectData, setProjectData] = useState([]);\n  const [userData, setUserData] = useState([]);\n  const [clientTypeData, setClientTypeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showPercent, setShowPercent] = useState(false);\n  const [expandedProjects, setExpandedProjects] = useState([]);\n  const [showProjectPercent, setShowProjectPercent] = useState(false);\n  const [viewByUser, setViewByUser] = useState(false);\n  const [widgetSizes, setWidgetSizes] = useState({\n    projectHours: WIDGET_SIZES.SMALL,\n    clientType: WIDGET_SIZES.SMALL,\n    hoursByClient: WIDGET_SIZES.WIDE,\n  });\n\n  const [menuAnchorEl, setMenuAnchorEl] = useState(null);\n  const [activeWidget, setActiveWidget] = useState(null);\n  const [widgetPositions, setWidgetPositions] = useState(WIDGET_POSITIONS);\n\n  const handleMenuClick = (event, widgetId) => {\n    setMenuAnchorEl(event.currentTarget);\n    setActiveWidget(widgetId);\n  };\n\n  const handleMenuClose = () => {\n    setMenuAnchorEl(null);\n    setActiveWidget(null);\n  };\n\n  const handleSizeChange = (size) => {\n    setWidgetSizes(prev => ({\n      ...prev,\n      [activeWidget]: size,\n    }));\n    handleMenuClose();\n  };\n\n  const canMove = (widgetId, direction) => {\n    const currentPos = widgetPositions[widgetId];\n    const newPos = { ...currentPos };\n\n    switch (direction) {\n      case 'left':\n        newPos.x = Math.max(0, currentPos.x - 6);\n        break;\n      case 'right':\n        newPos.x = Math.min(GRID_COLUMNS - (widgetSizes[widgetId].w), currentPos.x + 6);\n        break;\n      case 'up':\n        newPos.y = Math.max(0, currentPos.y - 6);\n        break;\n      case 'down':\n        newPos.y = Math.min(GRID_ROWS - (widgetSizes[widgetId].h), currentPos.y + 6);\n        break;\n      default:\n        return false;\n    }\n\n    // Check if the new position is different from current\n    return newPos.x !== currentPos.x || newPos.y !== currentPos.y;\n  };\n\n  const handleMove = (direction) => {\n    if (!activeWidget) return;\n\n    const currentPos = widgetPositions[activeWidget];\n    const newPos = { ...currentPos };\n\n    switch (direction) {\n      case 'left':\n        newPos.x = Math.max(0, currentPos.x - 6);\n        break;\n      case 'right':\n        newPos.x = Math.min(GRID_COLUMNS - (widgetSizes[activeWidget].w), currentPos.x + 6);\n        break;\n      case 'up':\n        newPos.y = Math.max(0, currentPos.y - 6);\n        break;\n      case 'down':\n        newPos.y = Math.min(GRID_ROWS - (widgetSizes[activeWidget].h), currentPos.y + 6);\n        break;\n      default:\n        return;\n    }\n\n    // Find if there's a widget at the new position\n    const widgetAtNewPos = Object.entries(widgetPositions).find(\n      ([id, pos]) => id !== activeWidget && pos.x === newPos.x && pos.y === newPos.y\n    );\n\n    if (widgetAtNewPos) {\n      // Swap positions\n      const [otherWidgetId] = widgetAtNewPos;\n      setWidgetPositions(prev => ({\n        ...prev,\n        [activeWidget]: newPos,\n        [otherWidgetId]: currentPos,\n      }));\n    } else {\n      // Just move the widget\n      setWidgetPositions(prev => ({\n        ...prev,\n        [activeWidget]: newPos,\n      }));\n    }\n\n    handleMenuClose();\n  };\n\n  const getLayouts = () => {\n    return {\n      lg: [\n        { \n          i: 'projectHours', \n          ...widgetPositions.projectHours,\n          ...widgetSizes.projectHours,\n          static: true \n        },\n        { \n          i: 'clientType', \n          ...widgetPositions.clientType,\n          ...widgetSizes.clientType,\n          static: true \n        },\n        { \n          i: 'hoursByClient', \n          ...widgetPositions.hoursByClient,\n          ...widgetSizes.hoursByClient,\n          static: true \n        },\n      ],\n    };\n  };\n\n  const WidgetMenu = () => (\n    <Menu\n      anchorEl={menuAnchorEl}\n      open={Boolean(menuAnchorEl)}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={() => handleSizeChange(WIDGET_SIZES.SMALL)}>\n        Small (Half Width)\n      </MenuItem>\n      <MenuItem onClick={() => handleSizeChange(WIDGET_SIZES.WIDE)}>\n        Wide (Full Width)\n      </MenuItem>\n      <MenuItem \n        onClick={() => handleMove('left')}\n        disabled={!canMove(activeWidget, 'left')}\n      >\n        Move Left\n      </MenuItem>\n      <MenuItem \n        onClick={() => handleMove('right')}\n        disabled={!canMove(activeWidget, 'right')}\n      >\n        Move Right\n      </MenuItem>\n      <MenuItem \n        onClick={() => handleMove('up')}\n        disabled={!canMove(activeWidget, 'up')}\n      >\n        Move Up\n      </MenuItem>\n      <MenuItem \n        onClick={() => handleMove('down')}\n        disabled={!canMove(activeWidget, 'down')}\n      >\n        Move Down\n      </MenuItem>\n    </Menu>\n  );\n\n  const getDateRange = () => {\n    const now = new Date();\n    let startDate;\n\n    switch (timeRange) {\n      case 'week':\n        startDate = startOfWeek(now, { weekStartsOn: 1 });\n        break;\n      case 'month':\n        startDate = startOfMonth(now);\n        break;\n      case 'quarter':\n        startDate = startOfQuarter(now);\n        break;\n      case 'year':\n        startDate = startOfYear(now);\n        break;\n      default:\n        startDate = null;\n    }\n\n    return {\n      startDate: startDate ? format(startDate, 'yyyy-MM-dd') + 'T00:00:00.000Z' : null,\n      endDate: format(now, 'yyyy-MM-dd') + 'T23:59:59.999Z',\n    };\n  };\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const { startDate, endDate } = getDateRange();\n      const dateParams = startDate ? `?startDate=${startDate}&endDate=${endDate}` : '';\n\n      console.log('Fetching analytics data with params:', { startDate, endDate });\n\n      const [projectRes, userRes, clientTypeRes] = await Promise.all([\n        axios.get(`/api/analytics/time-by-project${dateParams}`),\n        axios.get(`/api/analytics/time-by-user${dateParams}`),\n        axios.get(`/api/analytics/time-by-client-type${dateParams}`),\n      ]);\n\n      console.log('Project data:', projectRes.data);\n      console.log('User data:', userRes.data);\n      console.log('Client type data:', clientTypeRes.data);\n\n      setProjectData(projectRes.data);\n      setUserData(userRes.data);\n      setClientTypeData(clientTypeRes.data);\n    } catch (err) {\n      console.error('Error fetching analytics:', err);\n      setError('Failed to fetch analytics data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [timeRange]);\n\n  const formatHours = (hours) => {\n    return Math.round(hours * 100) / 100;\n  };\n\n  // Prepare users and projects arrays first so they are available for all calculations\n  const users = Array.from(new Set(userData.map(d => d.user_name)));\n  const projects = Array.from(new Set(userData.map(d => d.project_name)));\n\n  // Helper: count weekdays between two dates (inclusive)\n  function countWeekdays(start, end) {\n    let count = 0;\n    let current = new Date(start);\n    while (current <= end) {\n      const day = current.getDay();\n      if (day !== 0 && day !== 6) count++;\n      current.setDate(current.getDate() + 1);\n    }\n    return count;\n  }\n\n  // Calculate period start/end\n  const now = new Date();\n  let periodStart, periodEnd;\n  switch (timeRange) {\n    case 'week':\n      periodStart = startOfWeek(now);\n      periodEnd = now;\n      break;\n    case 'month':\n      periodStart = startOfMonth(now);\n      periodEnd = now;\n      break;\n    case 'quarter':\n      periodStart = startOfQuarter(now);\n      periodEnd = now;\n      break;\n    case 'year':\n      periodStart = startOfYear(now);\n      periodEnd = now;\n      break;\n    case 'all':\n    default:\n      // Use earliest and latest date in userData\n      const allDates = userData.map(d => new Date(d.start_time)).filter(Boolean);\n      periodStart = allDates.length ? new Date(Math.min(...allDates)) : now;\n      periodEnd = allDates.length ? new Date(Math.max(...allDates)) : now;\n      break;\n  }\n  const weekdays = countWeekdays(periodStart, periodEnd);\n  const userCapacity = users.map(() => weekdays * 8);\n  // Calculate total hours logged per user in the period\n  const userLogged = users.map(user =>\n    userData.filter(d => d.user_name === user).reduce((sum, d) => sum + d.total_hours, 0)\n  );\n  const userAvailable = userCapacity.map((cap, i) => Math.max(0, cap - userLogged[i]));\n\n  // Calculate total system hours across all projects\n  const totalSystemHours = projectData.reduce((sum, project) => sum + project.total_hours, 0);\n\n  // Build a matrix: rows = projects, cols = users\n  const heatMapData = [\n    userAvailable, // Capacity row\n    userLogged,   // Total load row\n    ...projects.map(project =>\n      users.map(user => {\n        const found = userData.find(d => d.user_name === user && d.project_name === project);\n        return found ? found.total_hours : 0;\n      })\n    )\n  ];\n  const allProjectsWithCapacity = ['Capacity', 'Total load', ...projects];\n\n  // Set column width for heatmap (wider for wrapped names)\n  const colWidth = 100;\n  const cellWidth = 95;\n  const cellHeight = 35;\n  const xOffset = 100;\n  const yOffset = 60;\n  const heatmapRows = allProjectsWithCapacity.length;\n  const heatmapHeight = heatmapRows * cellHeight + yOffset + 40; // 40 for header padding\n\n  const handleExpandClick = (projectName) => {\n    setExpandedProjects((prev) =>\n      prev.includes(projectName)\n        ? prev.filter((name) => name !== projectName)\n        : [...prev, projectName]\n    );\n  };\n\n  // Precompute table rows to avoid returning arrays or IIFEs in JSX\n  let projectRows = [];\n  let userRows = [];\n\n  if (viewByUser) {\n    const usersList = Array.from(new Set(userData.map(d => d.user_name)));\n    usersList.forEach(user => {\n      const isExpanded = expandedProjects.includes(user);\n      const userProjects = userData\n        .filter(d => d.user_name === user && d.total_hours > 0)\n        .map(d => ({ project: d.project_name, hours: d.total_hours }));\n      const userTotalHours = userProjects.reduce((sum, p) => sum + p.hours, 0);\n      const percent = totalSystemHours > 0 ? (userTotalHours / totalSystemHours) * 100 : 0;\n      userRows.push(\n        <TableRow key={user}>\n          <TableCell sx={{ fontWeight: 500 }}>\n            <IconButton size=\"small\" onClick={() => handleExpandClick(user)}>\n              {isExpanded ? <RemoveIcon /> : <AddIcon />}\n            </IconButton>\n            {user}\n          </TableCell>\n          <TableCell>\n            {showProjectPercent\n              ? `${Math.round(percent)}%`\n              : `${formatHours(userTotalHours)}h`}\n          </TableCell>\n          <TableCell>\n            <Box sx={{ width: '100%', height: 16, bgcolor: '#e3eafc', borderRadius: 2, position: 'relative' }}>\n              <Box\n                sx={{\n                  width: `${percent}%`,\n                  height: '100%',\n                  bgcolor: '#1976d2',\n                  borderRadius: 2,\n                  transition: 'width 0.3s',\n                }}\n              />\n            </Box>\n          </TableCell>\n        </TableRow>\n      );\n      if (isExpanded && userProjects.length > 0) {\n        userProjects.forEach(p => {\n          const projectPercent = (p.hours / userTotalHours) * 100;\n          userRows.push(\n            <TableRow key={user + '-' + p.project}>\n              <TableCell sx={{ pl: 6 }}>{p.project}</TableCell>\n              <TableCell>\n                {showProjectPercent\n                  ? `${Math.round(projectPercent)}%`\n                  : `${formatHours(p.hours)}h`}\n              </TableCell>\n              <TableCell>\n                <Box sx={{ width: '100%', height: 12, bgcolor: '#e3eafc', borderRadius: 2, position: 'relative' }}>\n                  <Box\n                    sx={{\n                      width: `${projectPercent}%`,\n                      height: '100%',\n                      bgcolor: '#1976d2',\n                      borderRadius: 2,\n                      transition: 'width 0.3s',\n                    }}\n                  />\n                </Box>\n              </TableCell>\n            </TableRow>\n          );\n        });\n      }\n      if (isExpanded && userProjects.length === 0) {\n        userRows.push(\n          <TableRow key={user + '-no-projects'}>\n            <TableCell colSpan={3} align=\"center\">\n              <Typography color=\"text.secondary\">No project data for this user</Typography>\n            </TableCell>\n          </TableRow>\n        );\n      }\n    });\n  } else {\n    projectData.forEach(project => {\n      const isExpanded = expandedProjects.includes(project.project_name);\n      const usersForProject = userData\n        .filter(d => d.project_name === project.project_name && d.total_hours > 0)\n        .map(d => ({ user: d.user_name, hours: d.total_hours }));\n      const percent = totalSystemHours > 0 ? (project.total_hours / totalSystemHours) * 100 : 0;\n      projectRows.push(\n        <TableRow key={project.project_name}>\n          <TableCell sx={{ fontWeight: 500 }}>\n            <IconButton size=\"small\" onClick={() => handleExpandClick(project.project_name)}>\n              {isExpanded ? <RemoveIcon /> : <AddIcon />}\n            </IconButton>\n            {project.project_name}\n          </TableCell>\n          <TableCell>\n            {showProjectPercent\n              ? `${Math.round(percent)}%`\n              : `${formatHours(project.total_hours)}h`}\n          </TableCell>\n          <TableCell>\n            <Box sx={{ width: '100%', height: 16, bgcolor: '#e3eafc', borderRadius: 2, position: 'relative' }}>\n              <Box\n                sx={{\n                  width: `${percent}%`,\n                  height: '100%',\n                  bgcolor: '#1976d2',\n                  borderRadius: 2,\n                  transition: 'width 0.3s',\n                }}\n              />\n            </Box>\n          </TableCell>\n        </TableRow>\n      );\n      if (isExpanded && usersForProject.length > 0) {\n        usersForProject.forEach(u => {\n          const userPercent = (u.hours / project.total_hours) * 100;\n          projectRows.push(\n            <TableRow key={project.project_name + '-' + u.user}>\n              <TableCell sx={{ pl: 6 }}>{u.user}</TableCell>\n              <TableCell>\n                {showProjectPercent\n                  ? `${Math.round(userPercent)}%`\n                  : `${formatHours(u.hours)}h`}\n              </TableCell>\n              <TableCell>\n                <Box sx={{ width: '100%', height: 12, bgcolor: '#e3eafc', borderRadius: 2, position: 'relative' }}>\n                  <Box\n                    sx={{\n                      width: `${userPercent}%`,\n                      height: '100%',\n                      bgcolor: '#1976d2',\n                      borderRadius: 2,\n                      transition: 'width 0.3s',\n                    }}\n                  />\n                </Box>\n              </TableCell>\n            </TableRow>\n          );\n        });\n      }\n      if (isExpanded && usersForProject.length === 0) {\n        projectRows.push(\n          <TableRow key={project.project_name + '-no-users'}>\n            <TableCell colSpan={3} align=\"center\">\n              <Typography color=\"text.secondary\">No user data for this project</Typography>\n            </TableCell>\n          </TableRow>\n        );\n      }\n    });\n  }\n\n  // Always flatten the rows to avoid nested arrays\n  userRows = userRows.flat(Infinity);\n  projectRows = projectRows.flat(Infinity);\n\n  // Debug: log the full structure of the rows before rendering\n  try {\n    console.log('userRows (full):', JSON.stringify(userRows));\n  } catch (e) {\n    console.log('userRows (full):', userRows);\n  }\n  try {\n    console.log('projectRows (full):', JSON.stringify(projectRows));\n  } catch (e) {\n    console.log('projectRows (full):', projectRows);\n  }\n\n  let tableRows;\n  if (viewByUser) {\n    tableRows = <>{userRows}</>;\n  } else if (projectRows.length > 0) {\n    tableRows = <>{projectRows}</>;\n  } else {\n    tableRows = (\n      <TableRow>\n        <TableCell colSpan={3} align=\"center\">\n          <Typography color=\"text.secondary\">No project data available</Typography>\n        </TableCell>\n      </TableRow>\n    );\n  }\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"60vh\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  return (\n    <Box>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 3 }}>\n        <Typography variant=\"h4\">Dashboard</Typography>\n        <TextField\n          select\n          value={timeRange}\n          onChange={(e) => setTimeRange(e.target.value)}\n          sx={{ minWidth: 200 }}\n        >\n          {timeRanges.map((option) => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n      </Box>\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\n          {error}\n        </Alert>\n      )}\n      <ResponsiveGridLayout\n        className=\"layout\"\n        layouts={getLayouts()}\n        breakpoints={{ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 }}\n        cols={{ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }}\n        rowHeight={50}\n        margin={[16, 16]}\n        containerPadding={[16, 16]}\n        isDraggable={false}\n        isResizable={false}\n      >\n        <div key=\"projectHours\">\n          <Card>\n            <CardContent>\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                <Typography variant=\"h6\" gutterBottom>\n                  Hours by Project\n                </Typography>\n                <IconButton onClick={(e) => handleMenuClick(e, 'projectHours')}>\n                  <MoreVertIcon />\n                </IconButton>\n              </Box>\n              <Box>\n                <Box sx={{ display: 'flex', gap: 2, mb: 2 }}>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={viewByUser}\n                        onChange={e => setViewByUser(e.target.checked)}\n                        color=\"primary\"\n                      />\n                    }\n                    label={viewByUser ? \"View by User\" : \"View by Project\"}\n                  />\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={showProjectPercent}\n                        onChange={e => setShowProjectPercent(e.target.checked)}\n                        color=\"primary\"\n                      />\n                    }\n                    label={showProjectPercent ? 'Show: % of System Total' : 'Show: Hours'}\n                  />\n                </Box>\n                <TableContainer component={Paper} sx={{ boxShadow: 'none' }}>\n                  <Table size=\"small\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell sx={{ fontWeight: 600 }}>Project</TableCell>\n                        <TableCell sx={{ fontWeight: 600 }}>Total Hours</TableCell>\n                        <TableCell sx={{ fontWeight: 600 }}>Load</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {tableRows}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Box>\n            </CardContent>\n          </Card>\n        </div>\n        <div key=\"clientType\">\n          <Card>\n            <CardContent>\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                <Typography variant=\"h6\" gutterBottom>\n                  Internal vs External Hours\n                </Typography>\n                <IconButton onClick={(e) => handleMenuClick(e, 'clientType')}>\n                  <MoreVertIcon />\n                </IconButton>\n              </Box>\n              <Box>\n                <Box sx={{ height: 300 }}>\n                  {clientTypeData.length > 0 ? (\n                    <ResponsiveContainer>\n                      <PieChart>\n                        <Pie\n                          data={clientTypeData}\n                          dataKey=\"total_hours\"\n                          nameKey=\"client_type\"\n                          cx=\"50%\"\n                          cy=\"50%\"\n                          outerRadius={100}\n                          label={({ client_type, total_hours }) => \n                            `${client_type}: ${formatHours(total_hours)}h`\n                          }\n                        >\n                          {clientTypeData.map((entry, index) => (\n                            <Cell key={entry.client_type} fill={COLORS[index % COLORS.length]} />\n                          ))}\n                        </Pie>\n                        <Tooltip formatter={(value) => formatHours(value) + ' hours'} />\n                        <Legend />\n                      </PieChart>\n                    </ResponsiveContainer>\n                  ) : (\n                    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100%\">\n                      <Typography color=\"text.secondary\">No client type data available</Typography>\n                    </Box>\n                  )}\n                </Box>\n              </Box>\n            </CardContent>\n          </Card>\n        </div>\n        <div key=\"hoursByClient\">\n          <Card>\n            <CardContent>\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                <Typography variant=\"h6\" gutterBottom>\n                  Hours by Client\n                </Typography>\n                <IconButton onClick={(e) => handleMenuClick(e, 'hoursByClient')}>\n                  <MoreVertIcon />\n                </IconButton>\n              </Box>\n              <Box>\n                <Box sx={{ height: 300 }}>\n                  {projectData && projectData.length > 0 ? (\n                    <ResponsiveContainer>\n                      <BarChart\n                        data={(() => {\n                          const clientData = projectData.reduce((acc, project) => {\n                            if (!project || typeof project !== 'object') return acc;\n                            const clientName = project.client_name || 'Unassigned';\n                            const existingClient = acc.find(c => c.name === clientName);\n                            if (existingClient) {\n                              existingClient.hours += project.total_hours;\n                            } else {\n                              acc.push({ name: clientName, hours: project.total_hours });\n                            }\n                            return acc;\n                          }, []);\n                          return clientData.filter(c => typeof c.name === 'string' && typeof c.hours === 'number');\n                        })()}\n                        margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n                      >\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"name\" />\n                        <YAxis />\n                        <Tooltip formatter={(value) => formatHours(value) + ' hours'} />\n                        <Legend />\n                        <Bar dataKey=\"hours\" fill=\"#8884d8\" name=\"Hours\" />\n                      </BarChart>\n                    </ResponsiveContainer>\n                  ) : (\n                    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100%\">\n                      <Typography color=\"text.secondary\">No client data available</Typography>\n                    </Box>\n                  )}\n                </Box>\n              </Box>\n            </CardContent>\n          </Card>\n        </div>\n      </ResponsiveGridLayout>\n      <WidgetMenu />\n    </Box>\n  );\n}\n\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}