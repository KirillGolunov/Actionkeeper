{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\golun\\\\TimeTracker\\\\client\\\\src\\\\pages\\\\TimeEntries.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Button, Typography, TextField, Dialog, DialogTitle, DialogContent, DialogActions, MenuItem, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Alert, IconButton } from '@mui/material';\nimport { format } from 'date-fns';\nimport axios from 'axios';\nimport { Add, Delete, Remove, Edit as EditIcon } from '@mui/icons-material';\nimport TimeEntryForm from '../components/TimeEntryForm';\nimport SingleProjectWeekEditor from '../components/SingleProjectWeekEditor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst daysOfWeek = [{\n  key: 'mon',\n  label: 'Mon'\n}, {\n  key: 'tue',\n  label: 'Tue'\n}, {\n  key: 'wed',\n  label: 'Wed'\n}, {\n  key: 'thu',\n  label: 'Thu'\n}, {\n  key: 'fri',\n  label: 'Fri'\n}, {\n  key: 'sat',\n  label: 'Sat'\n}, {\n  key: 'sun',\n  label: 'Sun'\n}];\nconst requiredHoursPerDay = {\n  mon: 8,\n  tue: 8,\n  wed: 8,\n  thu: 8,\n  fri: 8,\n  sat: 0,\n  sun: 0\n};\nfunction getMonday(d) {\n  d = new Date(d);\n  var day = d.getDay(),\n    diff = d.getDate() - day + (day === 0 ? -6 : 1); // adjust when day is sunday\n  return new Date(d.setDate(diff));\n}\nfunction HourInput({\n  value,\n  onChange\n}) {\n  const handleDecrement = () => {\n    const newValue = Math.max(0, (parseFloat(value) || 0) - 1);\n    onChange(newValue === 0 ? '' : newValue);\n  };\n  const handleIncrement = () => {\n    const newValue = Math.min(24, (parseFloat(value) || 0) + 1);\n    onChange(newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      alignItems: 'center',\n      border: '1px solid #e0e0e0',\n      borderRadius: 2,\n      px: 0.5,\n      py: 0.2,\n      minWidth: 48,\n      justifyContent: 'center',\n      background: '#fff'\n    },\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      size: \"small\",\n      onClick: handleDecrement,\n      sx: {\n        p: 0.25\n      },\n      children: /*#__PURE__*/_jsxDEV(Remove, {\n        fontSize: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        mx: 0.5,\n        minWidth: 16,\n        textAlign: 'center',\n        fontWeight: 500,\n        fontSize: 14\n      },\n      children: value || 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      size: \"small\",\n      onClick: handleIncrement,\n      sx: {\n        p: 0.25\n      },\n      children: /*#__PURE__*/_jsxDEV(Add, {\n        fontSize: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_c = HourInput;\nfunction TimeEntries() {\n  _s();\n  const [timeEntries, setTimeEntries] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [error, setError] = useState(null);\n  const [newEntry, setNewEntry] = useState({\n    project_id: '',\n    user_id: '',\n    start_time: '',\n    end_time: '',\n    description: ''\n  });\n  const [weeklyEntries, setWeeklyEntries] = useState([{\n    project_id: '',\n    user_id: '',\n    hours: {\n      mon: '',\n      tue: '',\n      wed: '',\n      thu: '',\n      fri: '',\n      sat: '',\n      sun: ''\n    }\n  }]);\n  const [weekStart, setWeekStart] = useState(getMonday(new Date()));\n  const [selectedUser, setSelectedUser] = useState('');\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [editWeekEntry, setEditWeekEntry] = useState(null);\n  const [editLoading, setEditLoading] = useState(false);\n  const [editError, setEditError] = useState('');\n  useEffect(() => {\n    fetchTimeEntries();\n    fetchProjects();\n    fetchUsers();\n  }, []);\n  useEffect(() => {\n    if (users.length > 0 && !selectedUser) {\n      setSelectedUser(users[0].id);\n      setWeeklyEntries(weeklyEntries.map(entry => ({\n        ...entry,\n        user_id: users[0].id\n      })));\n    }\n    // eslint-disable-next-line\n  }, [users]);\n  const fetchTimeEntries = async () => {\n    try {\n      const response = await axios.get('/api/time-entries');\n      console.log('Fetched time entries:', response.data);\n      setTimeEntries(response.data);\n    } catch (error) {\n      console.error('Error fetching time entries:', error);\n      setError('Failed to fetch time entries. Please try again.');\n    }\n  };\n  const fetchProjects = async () => {\n    try {\n      const response = await axios.get('/api/projects');\n      console.log('Fetched projects:', response.data);\n      setProjects(response.data);\n    } catch (error) {\n      console.error('Error fetching projects:', error);\n      setError('Failed to fetch projects. Please try again.');\n    }\n  };\n  const fetchUsers = async () => {\n    try {\n      const response = await axios.get('/api/users');\n      console.log('Fetched users:', response.data);\n      setUsers(response.data);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n      setError('Failed to fetch users. Please try again.');\n    }\n  };\n  const handleOpen = () => {\n    setError(null);\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setError(null);\n    setOpen(false);\n  };\n  const handleSubmit = async () => {\n    try {\n      if (!newEntry.project_id) {\n        setError('Please select a project');\n        return;\n      }\n      if (!newEntry.user_id) {\n        setError('Please select a user');\n        return;\n      }\n      if (!newEntry.start_time) {\n        setError('Start time is required');\n        return;\n      }\n      if (!newEntry.end_time) {\n        setError('End time is required');\n        return;\n      }\n      console.log('Submitting new time entry:', newEntry);\n      const response = await axios.post('/api/time-entries', newEntry);\n      console.log('Time entry created:', response.data);\n      fetchTimeEntries();\n      handleClose();\n      setNewEntry({\n        project_id: '',\n        user_id: '',\n        start_time: '',\n        end_time: '',\n        description: ''\n      });\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error creating time entry:', error);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Failed to create time entry. Please try again.');\n    }\n  };\n  const calculateDuration = (startTime, endTime) => {\n    const start = new Date(startTime);\n    const end = new Date(endTime);\n    const diffInMilliseconds = end - start;\n    const hours = Math.floor(diffInMilliseconds / (1000 * 60 * 60));\n    const minutes = Math.floor(diffInMilliseconds % (1000 * 60 * 60) / (1000 * 60));\n    return `${hours}h ${minutes}m`;\n  };\n  const addProjectRow = () => {\n    setWeeklyEntries([...weeklyEntries, {\n      project_id: '',\n      user_id: selectedUser,\n      hours: {\n        mon: '',\n        tue: '',\n        wed: '',\n        thu: '',\n        fri: '',\n        sat: '',\n        sun: ''\n      }\n    }]);\n  };\n  const removeProjectRow = idx => {\n    setWeeklyEntries(weeklyEntries.filter((_, i) => i !== idx));\n  };\n  const handleWeeklyChange = (idx, field, value) => {\n    const updated = [...weeklyEntries];\n    updated[idx][field] = value;\n    setWeeklyEntries(updated);\n  };\n  const handleHourChange = (idx, day, value) => {\n    const updated = [...weeklyEntries];\n    if (typeof value === 'string') {\n      updated[idx].hours[day] = value.replace(/[^0-9.]/g, '');\n    } else {\n      updated[idx].hours[day] = value;\n    }\n    setWeeklyEntries(updated);\n  };\n  const dayTotals = daysOfWeek.map(day => weeklyEntries.reduce((sum, entry) => sum + (parseFloat(entry.hours[day.key]) || 0), 0));\n  const projectTotals = weeklyEntries.map(entry => daysOfWeek.reduce((sum, day) => sum + (parseFloat(entry.hours[day.key]) || 0), 0));\n  const requiredHoursTotal = Object.values(requiredHoursPerDay).reduce((a, b) => a + b, 0);\n  const handleWeeklySubmit = async () => {\n    setError(null);\n    let hasError = false;\n    for (const entry of weeklyEntries) {\n      if (!entry.project_id || !entry.user_id) {\n        setError('Please select a project and user for each row.');\n        hasError = true;\n        break;\n      }\n    }\n    if (hasError) return;\n    const submissionTime = new Date().toISOString();\n    const promises = [];\n    weeklyEntries.forEach(entry => {\n      daysOfWeek.forEach((day, i) => {\n        const hours = parseFloat(entry.hours[day.key]);\n        if (hours && hours > 0) {\n          const date = new Date(weekStart);\n          date.setDate(date.getDate() + i);\n          const start_time = new Date(date);\n          start_time.setHours(9, 0, 0, 0);\n          const end_time = new Date(start_time);\n          end_time.setHours(start_time.getHours() + hours);\n          promises.push(axios.post('/api/time-entries', {\n            project_id: entry.project_id,\n            user_id: entry.user_id,\n            start_time: start_time.toISOString(),\n            end_time: end_time.toISOString(),\n            description: '',\n            submission_time: submissionTime\n          }));\n        }\n      });\n    });\n    try {\n      await Promise.all(promises);\n      fetchTimeEntries();\n      setWeeklyEntries([{\n        project_id: '',\n        user_id: selectedUser,\n        hours: {\n          mon: '',\n          tue: '',\n          wed: '',\n          thu: '',\n          fri: '',\n          sat: '',\n          sun: ''\n        }\n      }]);\n    } catch (error) {\n      setError('Failed to submit time entries.');\n    }\n  };\n\n  // Group timeEntries by project_name and submission_time, filtered by selected user\n  const filteredEntries = timeEntries.filter(e => !selectedUser || e.user_id === selectedUser);\n  const groupedEntries = Object.values(filteredEntries.reduce((acc, entry) => {\n    const key = `${entry.project_name}|${entry.submission_time}`;\n    if (!acc[key]) {\n      acc[key] = {\n        project_name: entry.project_name,\n        submission_time: entry.submission_time,\n        total_hours: 0\n      };\n    }\n    acc[key].total_hours += (new Date(entry.end_time) - new Date(entry.start_time)) / (1000 * 60 * 60);\n    return acc;\n  }, {})).sort((a, b) => new Date(b.submission_time) - new Date(a.submission_time));\n\n  // In the log table, assign numbers so the most recent entry gets the largest number\n  groupedEntries.forEach((entry, idx, arr) => entry.displayNumber = arr.length - idx);\n  const handleEditOpen = entry => {\n    var _weekEntries$, _weekEntries$2, _weekEntries$3;\n    // Find all entries for this project and submission_time\n    const weekEntries = timeEntries.filter(e => e.project_name === entry.project_name && e.submission_time === entry.submission_time);\n    // Build hours object for the week\n    const hours = {};\n    daysOfWeek.forEach(day => {\n      const dayEntry = weekEntries.find(e => {\n        const date = new Date(e.start_time);\n        // Convert Sunday (0) to 7 to match our daysOfWeek array\n        const dayOfWeek = date.getDay() === 0 ? 7 : date.getDay();\n        return dayOfWeek === daysOfWeek.findIndex(d => d.key === day.key) + 1;\n      });\n      hours[day.key] = dayEntry ? ((new Date(dayEntry.end_time) - new Date(dayEntry.start_time)) / (1000 * 60 * 60)).toString() : '';\n    });\n    setEditWeekEntry({\n      id: (_weekEntries$ = weekEntries[0]) === null || _weekEntries$ === void 0 ? void 0 : _weekEntries$.id,\n      project_id: ((_weekEntries$2 = weekEntries[0]) === null || _weekEntries$2 === void 0 ? void 0 : _weekEntries$2.project_id) || '',\n      hours,\n      submission_time: entry.submission_time,\n      user_id: ((_weekEntries$3 = weekEntries[0]) === null || _weekEntries$3 === void 0 ? void 0 : _weekEntries$3.user_id) || ''\n    });\n    setEditDialogOpen(true);\n    setEditError('');\n  };\n  const handleEditClose = () => {\n    setEditDialogOpen(false);\n    setEditWeekEntry(null);\n    setEditError('');\n  };\n  const handleEditSave = async () => {\n    setEditLoading(true);\n    setEditError('');\n    try {\n      const results = await Promise.all(daysOfWeek.map(async (day, i) => {\n        const hours = parseFloat(editWeekEntry.hours[day.key]);\n        const date = new Date(editWeekEntry.submission_time);\n        date.setDate(date.getDate() - date.getDay() + (i + 1));\n        const dayEntry = timeEntries.find(e => {\n          var _groupedEntries$find;\n          const entryDate = new Date(e.start_time);\n          return e.submission_time === editWeekEntry.submission_time && e.project_name === ((_groupedEntries$find = groupedEntries.find(g => g.submission_time === editWeekEntry.submission_time && g.project_name === e.project_name)) === null || _groupedEntries$find === void 0 ? void 0 : _groupedEntries$find.project_name) && entryDate.toDateString() === date.toDateString();\n        });\n        try {\n          if (hours && hours > 0) {\n            if (dayEntry) {\n              const start_time = new Date(date);\n              start_time.setHours(9, 0, 0, 0);\n              const end_time = new Date(start_time);\n              end_time.setHours(start_time.getHours() + hours);\n              await axios.patch(`/api/time-entries/${dayEntry.id}`, {\n                project_id: editWeekEntry.project_id,\n                start_time: start_time.toISOString(),\n                end_time: end_time.toISOString()\n              });\n              return null;\n            } else {\n              const start_time = new Date(date);\n              start_time.setHours(9, 0, 0, 0);\n              const end_time = new Date(start_time);\n              end_time.setHours(start_time.getHours() + hours);\n              await axios.post('/api/time-entries', {\n                project_id: editWeekEntry.project_id,\n                user_id: editWeekEntry.user_id,\n                start_time: start_time.toISOString(),\n                end_time: end_time.toISOString(),\n                description: '',\n                submission_time: editWeekEntry.submission_time\n              });\n              return null;\n            }\n          } else if (dayEntry) {\n            await axios.delete(`/api/time-entries/${dayEntry.id}`);\n            return null;\n          }\n          return null;\n        } catch (err) {\n          return day.label;\n        }\n      }));\n      const failedDays = results.filter(Boolean);\n      if (failedDays.length === daysOfWeek.length) {\n        setEditError('Failed to update entry.');\n      } else if (failedDays.length > 0) {\n        setEditError('Some days failed to update: ' + failedDays.join(', '));\n      } else {\n        setEditDialogOpen(false);\n        fetchTimeEntries();\n      }\n    } finally {\n      setEditLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        mb: 2,\n        gap: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Time Entries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        select: true,\n        size: \"small\",\n        label: \"User\",\n        value: selectedUser,\n        onChange: e => {\n          setSelectedUser(e.target.value);\n          setWeeklyEntries(weeklyEntries.map(entry => ({\n            ...entry,\n            user_id: e.target.value\n          })));\n        },\n        sx: {\n          minWidth: 180,\n          ml: 2\n        },\n        children: users.map(user => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: user.id,\n          children: user.name\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      sx: {\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: [/*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 15\n            }, this), daysOfWeek.map(day => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              sx: {\n                backgroundColor: day.key === 'sat' || day.key === 'sun' ? '#f5f5f5' : undefined,\n                fontWeight: 'bold'\n              },\n              children: day.label\n            }, day.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                width: 1,\n                minWidth: 1,\n                px: 0.25,\n                py: 0\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                width: '100%'\n              },\n              children: \"Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 15\n            }, this), daysOfWeek.map((day, i) => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              sx: {\n                backgroundColor: day.key === 'sat' || day.key === 'sun' ? '#f5f5f5' : undefined,\n                minWidth: 56,\n                px: 0.5,\n                py: 0.5,\n                fontWeight: 'normal',\n                fontSize: 13\n              },\n              children: format(new Date(weekStart.getTime() + i * 86400000), 'dd.MM')\n            }, day.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: [weeklyEntries.map((entry, idx) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                width: '100%'\n              },\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                select: true,\n                size: \"small\",\n                value: entry.project_id,\n                onChange: e => handleWeeklyChange(idx, 'project_id', e.target.value),\n                fullWidth: true,\n                children: projects.map(project => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: project.id,\n                  children: project.name\n                }, project.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 470,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 17\n            }, this), daysOfWeek.map(day => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              sx: {\n                backgroundColor: day.key === 'sat' || day.key === 'sun' ? '#f5f5f5' : undefined,\n                minWidth: 56,\n                px: 0.5,\n                py: 0.5\n              },\n              children: /*#__PURE__*/_jsxDEV(HourInput, {\n                value: entry.hours[day.key],\n                onChange: val => handleHourChange(idx, day.key, val)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 21\n              }, this)\n            }, day.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              sx: {\n                fontWeight: 'bold'\n              },\n              children: projectTotals[idx]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                width: 1,\n                minWidth: 1,\n                px: 0.25,\n                py: 0\n              },\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => removeProjectRow(idx),\n                disabled: weeklyEntries.length === 1,\n                sx: {\n                  p: 0.25\n                },\n                children: /*#__PURE__*/_jsxDEV(Delete, {\n                  fontSize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 485,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 17\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(TableRow, {\n            children: /*#__PURE__*/_jsxDEV(TableCell, {\n              colSpan: daysOfWeek.length + 3,\n              sx: {\n                border: 'none',\n                p: 1\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"text\",\n                color: \"primary\",\n                size: \"small\",\n                startIcon: /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 496,\n                  columnNumber: 30\n                }, this),\n                onClick: addProjectRow,\n                sx: {\n                  mt: 1,\n                  fontWeight: 'normal',\n                  fontSize: 16,\n                  textTransform: 'none',\n                  pl: 0,\n                  minHeight: 'unset',\n                  minWidth: 'unset',\n                  p: 0\n                },\n                children: \"Add Project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                fontWeight: 'bold'\n              },\n              children: \"Required Hours\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 15\n            }, this), daysOfWeek.map(day => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              sx: {\n                color: 'gray',\n                backgroundColor: day.key === 'sat' || day.key === 'sun' ? '#f5f5f5' : undefined\n              },\n              children: requiredHoursPerDay[day.key]\n            }, day.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              sx: {\n                color: 'gray',\n                fontWeight: 'bold'\n              },\n              children: requiredHoursTotal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                width: 1,\n                minWidth: 1,\n                px: 0.25,\n                py: 0\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                fontWeight: 'bold'\n              },\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 15\n            }, this), dayTotals.map((total, i) => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              sx: {\n                color: total < requiredHoursPerDay[daysOfWeek[i].key] ? 'red' : 'inherit',\n                backgroundColor: daysOfWeek[i].key === 'sat' || daysOfWeek[i].key === 'sun' ? '#f5f5f5' : undefined\n              },\n              children: total\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              sx: {\n                fontWeight: 'bold',\n                color: dayTotals.reduce((a, b) => a + b, 0) < requiredHoursTotal ? 'red' : 'inherit'\n              },\n              children: dayTotals.reduce((a, b) => a + b, 0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                width: 1,\n                minWidth: 1,\n                px: 0.25,\n                py: 0\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        gap: 2,\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleWeeklySubmit,\n        children: \"Submit Week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Time Log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Total Hours\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Submission Date/Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: groupedEntries.map(entry => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: entry.displayNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: entry.project_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: entry.total_hours.toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: entry.submission_time ? format(new Date(entry.submission_time), 'PPpp') : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                variant: \"outlined\",\n                onClick: () => handleEditOpen(entry),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 17\n            }, this)]\n          }, entry.project_name + entry.submission_time, true, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Add Time Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TimeEntryForm, {\n        entry: newEntry,\n        projects: projects,\n        users: users,\n        error: error,\n        onChange: setNewEntry,\n        onSubmit: handleSubmit,\n        onCancel: handleClose,\n        submitLabel: \"Add Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: editDialogOpen,\n      onClose: handleEditClose,\n      maxWidth: \"lg\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Edit Time Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SingleProjectWeekEditor, {\n        entry: editWeekEntry || {\n          project_id: '',\n          hours: {}\n        },\n        projects: projects,\n        daysOfWeek: daysOfWeek,\n        weekStart: getMonday(new Date((editWeekEntry === null || editWeekEntry === void 0 ? void 0 : editWeekEntry.submission_time) || new Date())),\n        onChange: setEditWeekEntry,\n        onSave: handleEditSave,\n        onCancel: handleEditClose,\n        error: editError,\n        loading: editLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 415,\n    columnNumber: 5\n  }, this);\n}\n_s(TimeEntries, \"1STnLrhfNsuP2r3AlihjTSPC7Ss=\");\n_c2 = TimeEntries;\nexport default TimeEntries;\nvar _c, _c2;\n$RefreshReg$(_c, \"HourInput\");\n$RefreshReg$(_c2, \"TimeEntries\");","map":{"version":3,"names":["React","useState","useEffect","Box","Button","Typography","TextField","Dialog","DialogTitle","DialogContent","DialogActions","MenuItem","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Alert","IconButton","format","axios","Add","Delete","Remove","Edit","EditIcon","TimeEntryForm","SingleProjectWeekEditor","jsxDEV","_jsxDEV","daysOfWeek","key","label","requiredHoursPerDay","mon","tue","wed","thu","fri","sat","sun","getMonday","d","Date","day","getDay","diff","getDate","setDate","HourInput","value","onChange","handleDecrement","newValue","Math","max","parseFloat","handleIncrement","min","sx","display","alignItems","border","borderRadius","px","py","minWidth","justifyContent","background","children","size","onClick","p","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","mx","textAlign","fontWeight","_c","TimeEntries","_s","timeEntries","setTimeEntries","projects","setProjects","users","setUsers","open","setOpen","error","setError","newEntry","setNewEntry","project_id","user_id","start_time","end_time","description","weeklyEntries","setWeeklyEntries","hours","weekStart","setWeekStart","selectedUser","setSelectedUser","editDialogOpen","setEditDialogOpen","editWeekEntry","setEditWeekEntry","editLoading","setEditLoading","editError","setEditError","fetchTimeEntries","fetchProjects","fetchUsers","length","id","map","entry","response","get","console","log","data","handleOpen","handleClose","handleSubmit","post","_error$response","_error$response$data","calculateDuration","startTime","endTime","start","end","diffInMilliseconds","floor","minutes","addProjectRow","removeProjectRow","idx","filter","_","i","handleWeeklyChange","field","updated","handleHourChange","replace","dayTotals","reduce","sum","projectTotals","requiredHoursTotal","Object","values","a","b","handleWeeklySubmit","hasError","submissionTime","toISOString","promises","forEach","date","setHours","getHours","push","submission_time","Promise","all","filteredEntries","e","groupedEntries","acc","project_name","total_hours","sort","arr","displayNumber","handleEditOpen","_weekEntries$","_weekEntries$2","_weekEntries$3","weekEntries","dayEntry","find","dayOfWeek","findIndex","toString","handleEditClose","handleEditSave","results","_groupedEntries$find","entryDate","g","toDateString","patch","delete","err","failedDays","Boolean","join","mb","gap","variant","select","target","ml","user","name","component","align","backgroundColor","undefined","width","getTime","fullWidth","project","val","disabled","colSpan","color","startIcon","mt","textTransform","pl","minHeight","total","severity","toFixed","onClose","onSubmit","onCancel","submitLabel","maxWidth","onSave","loading","_c2","$RefreshReg$"],"sources":["C:/Users/golun/TimeTracker/client/src/pages/TimeEntries.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Button,\n  Typography,\n  TextField,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  MenuItem,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Alert,\n  IconButton\n} from '@mui/material';\nimport { format } from 'date-fns';\nimport axios from 'axios';\nimport { Add, Delete, Remove, Edit as EditIcon } from '@mui/icons-material';\nimport TimeEntryForm from '../components/TimeEntryForm';\nimport SingleProjectWeekEditor from '../components/SingleProjectWeekEditor';\n\nconst daysOfWeek = [\n  { key: 'mon', label: 'Mon' },\n  { key: 'tue', label: 'Tue' },\n  { key: 'wed', label: 'Wed' },\n  { key: 'thu', label: 'Thu' },\n  { key: 'fri', label: 'Fri' },\n  { key: 'sat', label: 'Sat' },\n  { key: 'sun', label: 'Sun' },\n];\nconst requiredHoursPerDay = {\n  mon: 8,\n  tue: 8,\n  wed: 8,\n  thu: 8,\n  fri: 8,\n  sat: 0,\n  sun: 0,\n};\n\nfunction getMonday(d) {\n  d = new Date(d);\n  var day = d.getDay(),\n    diff = d.getDate() - day + (day === 0 ? -6 : 1); // adjust when day is sunday\n  return new Date(d.setDate(diff));\n}\n\nfunction HourInput({ value, onChange }) {\n  const handleDecrement = () => {\n    const newValue = Math.max(0, (parseFloat(value) || 0) - 1);\n    onChange(newValue === 0 ? '' : newValue);\n  };\n  const handleIncrement = () => {\n    const newValue = Math.min(24, (parseFloat(value) || 0) + 1);\n    onChange(newValue);\n  };\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'center', border: '1px solid #e0e0e0', borderRadius: 2, px: 0.5, py: 0.2, minWidth: 48, justifyContent: 'center', background: '#fff' }}>\n      <IconButton size=\"small\" onClick={handleDecrement} sx={{ p: 0.25 }}>\n        <Remove fontSize=\"small\" />\n      </IconButton>\n      <Typography sx={{ mx: 0.5, minWidth: 16, textAlign: 'center', fontWeight: 500, fontSize: 14 }}>\n        {value || 0}\n      </Typography>\n      <IconButton size=\"small\" onClick={handleIncrement} sx={{ p: 0.25 }}>\n        <Add fontSize=\"small\" />\n      </IconButton>\n    </Box>\n  );\n}\n\nfunction TimeEntries() {\n  const [timeEntries, setTimeEntries] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [error, setError] = useState(null);\n  const [newEntry, setNewEntry] = useState({\n    project_id: '',\n    user_id: '',\n    start_time: '',\n    end_time: '',\n    description: '',\n  });\n  const [weeklyEntries, setWeeklyEntries] = useState([\n    {\n      project_id: '',\n      user_id: '',\n      hours: { mon: '', tue: '', wed: '', thu: '', fri: '', sat: '', sun: '' },\n    },\n  ]);\n  const [weekStart, setWeekStart] = useState(getMonday(new Date()));\n  const [selectedUser, setSelectedUser] = useState('');\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [editWeekEntry, setEditWeekEntry] = useState(null);\n  const [editLoading, setEditLoading] = useState(false);\n  const [editError, setEditError] = useState('');\n\n  useEffect(() => {\n    fetchTimeEntries();\n    fetchProjects();\n    fetchUsers();\n  }, []);\n\n  useEffect(() => {\n    if (users.length > 0 && !selectedUser) {\n      setSelectedUser(users[0].id);\n      setWeeklyEntries(weeklyEntries.map(entry => ({ ...entry, user_id: users[0].id })));\n    }\n    // eslint-disable-next-line\n  }, [users]);\n\n  const fetchTimeEntries = async () => {\n    try {\n      const response = await axios.get('/api/time-entries');\n      console.log('Fetched time entries:', response.data);\n      setTimeEntries(response.data);\n    } catch (error) {\n      console.error('Error fetching time entries:', error);\n      setError('Failed to fetch time entries. Please try again.');\n    }\n  };\n\n  const fetchProjects = async () => {\n    try {\n      const response = await axios.get('/api/projects');\n      console.log('Fetched projects:', response.data);\n      setProjects(response.data);\n    } catch (error) {\n      console.error('Error fetching projects:', error);\n      setError('Failed to fetch projects. Please try again.');\n    }\n  };\n\n  const fetchUsers = async () => {\n    try {\n      const response = await axios.get('/api/users');\n      console.log('Fetched users:', response.data);\n      setUsers(response.data);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n      setError('Failed to fetch users. Please try again.');\n    }\n  };\n\n  const handleOpen = () => {\n    setError(null);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setError(null);\n    setOpen(false);\n  };\n\n  const handleSubmit = async () => {\n    try {\n      if (!newEntry.project_id) {\n        setError('Please select a project');\n        return;\n      }\n\n      if (!newEntry.user_id) {\n        setError('Please select a user');\n        return;\n      }\n\n      if (!newEntry.start_time) {\n        setError('Start time is required');\n        return;\n      }\n\n      if (!newEntry.end_time) {\n        setError('End time is required');\n        return;\n      }\n\n      console.log('Submitting new time entry:', newEntry);\n      const response = await axios.post('/api/time-entries', newEntry);\n      console.log('Time entry created:', response.data);\n      \n      fetchTimeEntries();\n      handleClose();\n      setNewEntry({\n        project_id: '',\n        user_id: '',\n        start_time: '',\n        end_time: '',\n        description: '',\n      });\n    } catch (error) {\n      console.error('Error creating time entry:', error);\n      setError(error.response?.data?.error || 'Failed to create time entry. Please try again.');\n    }\n  };\n\n  const calculateDuration = (startTime, endTime) => {\n    const start = new Date(startTime);\n    const end = new Date(endTime);\n    const diffInMilliseconds = end - start;\n    const hours = Math.floor(diffInMilliseconds / (1000 * 60 * 60));\n    const minutes = Math.floor((diffInMilliseconds % (1000 * 60 * 60)) / (1000 * 60));\n    return `${hours}h ${minutes}m`;\n  };\n\n  const addProjectRow = () => {\n    setWeeklyEntries([\n      ...weeklyEntries,\n      { project_id: '', user_id: selectedUser, hours: { mon: '', tue: '', wed: '', thu: '', fri: '', sat: '', sun: '' } },\n    ]);\n  };\n\n  const removeProjectRow = (idx) => {\n    setWeeklyEntries(weeklyEntries.filter((_, i) => i !== idx));\n  };\n\n  const handleWeeklyChange = (idx, field, value) => {\n    const updated = [...weeklyEntries];\n    updated[idx][field] = value;\n    setWeeklyEntries(updated);\n  };\n\n  const handleHourChange = (idx, day, value) => {\n    const updated = [...weeklyEntries];\n    if (typeof value === 'string') {\n      updated[idx].hours[day] = value.replace(/[^0-9.]/g, '');\n    } else {\n      updated[idx].hours[day] = value;\n    }\n    setWeeklyEntries(updated);\n  };\n\n  const dayTotals = daysOfWeek.map(day =>\n    weeklyEntries.reduce((sum, entry) => sum + (parseFloat(entry.hours[day.key]) || 0), 0)\n  );\n  const projectTotals = weeklyEntries.map(entry =>\n    daysOfWeek.reduce((sum, day) => sum + (parseFloat(entry.hours[day.key]) || 0), 0)\n  );\n  const requiredHoursTotal = Object.values(requiredHoursPerDay).reduce((a, b) => a + b, 0);\n\n  const handleWeeklySubmit = async () => {\n    setError(null);\n    let hasError = false;\n    for (const entry of weeklyEntries) {\n      if (!entry.project_id || !entry.user_id) {\n        setError('Please select a project and user for each row.');\n        hasError = true;\n        break;\n      }\n    }\n    if (hasError) return;\n    const submissionTime = new Date().toISOString();\n    const promises = [];\n    weeklyEntries.forEach((entry) => {\n      daysOfWeek.forEach((day, i) => {\n        const hours = parseFloat(entry.hours[day.key]);\n        if (hours && hours > 0) {\n          const date = new Date(weekStart);\n          date.setDate(date.getDate() + i);\n          const start_time = new Date(date);\n          start_time.setHours(9, 0, 0, 0);\n          const end_time = new Date(start_time);\n          end_time.setHours(start_time.getHours() + hours);\n          promises.push(\n            axios.post('/api/time-entries', {\n              project_id: entry.project_id,\n              user_id: entry.user_id,\n              start_time: start_time.toISOString(),\n              end_time: end_time.toISOString(),\n              description: '',\n              submission_time: submissionTime,\n            })\n          );\n        }\n      });\n    });\n    try {\n      await Promise.all(promises);\n      fetchTimeEntries();\n      setWeeklyEntries([\n        { project_id: '', user_id: selectedUser, hours: { mon: '', tue: '', wed: '', thu: '', fri: '', sat: '', sun: '' } },\n      ]);\n    } catch (error) {\n      setError('Failed to submit time entries.');\n    }\n  };\n\n  // Group timeEntries by project_name and submission_time, filtered by selected user\n  const filteredEntries = timeEntries.filter(e => !selectedUser || e.user_id === selectedUser);\n  const groupedEntries = Object.values(\n    filteredEntries.reduce((acc, entry) => {\n      const key = `${entry.project_name}|${entry.submission_time}`;\n      if (!acc[key]) {\n        acc[key] = {\n          project_name: entry.project_name,\n          submission_time: entry.submission_time,\n          total_hours: 0,\n        };\n      }\n      acc[key].total_hours += (new Date(entry.end_time) - new Date(entry.start_time)) / (1000 * 60 * 60);\n      return acc;\n    }, {})\n  ).sort((a, b) => new Date(b.submission_time) - new Date(a.submission_time));\n\n  // In the log table, assign numbers so the most recent entry gets the largest number\n  groupedEntries.forEach((entry, idx, arr) => entry.displayNumber = arr.length - idx);\n\n  const handleEditOpen = (entry) => {\n    // Find all entries for this project and submission_time\n    const weekEntries = timeEntries.filter(e => e.project_name === entry.project_name && e.submission_time === entry.submission_time);\n    // Build hours object for the week\n    const hours = {};\n    daysOfWeek.forEach(day => {\n      const dayEntry = weekEntries.find(e => {\n        const date = new Date(e.start_time);\n        // Convert Sunday (0) to 7 to match our daysOfWeek array\n        const dayOfWeek = date.getDay() === 0 ? 7 : date.getDay();\n        return dayOfWeek === daysOfWeek.findIndex(d => d.key === day.key) + 1;\n      });\n      hours[day.key] = dayEntry ? ((new Date(dayEntry.end_time) - new Date(dayEntry.start_time)) / (1000 * 60 * 60)).toString() : '';\n    });\n    setEditWeekEntry({\n      id: weekEntries[0]?.id,\n      project_id: weekEntries[0]?.project_id || '',\n      hours,\n      submission_time: entry.submission_time,\n      user_id: weekEntries[0]?.user_id || '',\n    });\n    setEditDialogOpen(true);\n    setEditError('');\n  };\n\n  const handleEditClose = () => {\n    setEditDialogOpen(false);\n    setEditWeekEntry(null);\n    setEditError('');\n  };\n\n  const handleEditSave = async () => {\n    setEditLoading(true);\n    setEditError('');\n    try {\n      const results = await Promise.all(\n        daysOfWeek.map(async (day, i) => {\n          const hours = parseFloat(editWeekEntry.hours[day.key]);\n          const date = new Date(editWeekEntry.submission_time);\n          date.setDate(date.getDate() - date.getDay() + (i + 1));\n          const dayEntry = timeEntries.find(e => {\n            const entryDate = new Date(e.start_time);\n            return (\n              e.submission_time === editWeekEntry.submission_time &&\n              e.project_name === groupedEntries.find(g => g.submission_time === editWeekEntry.submission_time && g.project_name === e.project_name)?.project_name &&\n              entryDate.toDateString() === date.toDateString()\n            );\n          });\n          try {\n            if (hours && hours > 0) {\n              if (dayEntry) {\n                const start_time = new Date(date);\n                start_time.setHours(9, 0, 0, 0);\n                const end_time = new Date(start_time);\n                end_time.setHours(start_time.getHours() + hours);\n                await axios.patch(`/api/time-entries/${dayEntry.id}`, {\n                  project_id: editWeekEntry.project_id,\n                  start_time: start_time.toISOString(),\n                  end_time: end_time.toISOString(),\n                });\n                return null;\n              } else {\n                const start_time = new Date(date);\n                start_time.setHours(9, 0, 0, 0);\n                const end_time = new Date(start_time);\n                end_time.setHours(start_time.getHours() + hours);\n                await axios.post('/api/time-entries', {\n                  project_id: editWeekEntry.project_id,\n                  user_id: editWeekEntry.user_id,\n                  start_time: start_time.toISOString(),\n                  end_time: end_time.toISOString(),\n                  description: '',\n                  submission_time: editWeekEntry.submission_time,\n                });\n                return null;\n              }\n            } else if (dayEntry) {\n              await axios.delete(`/api/time-entries/${dayEntry.id}`);\n              return null;\n            }\n            return null;\n          } catch (err) {\n            return day.label;\n          }\n        })\n      );\n      const failedDays = results.filter(Boolean);\n      if (failedDays.length === daysOfWeek.length) {\n        setEditError('Failed to update entry.');\n      } else if (failedDays.length > 0) {\n        setEditError('Some days failed to update: ' + failedDays.join(', '));\n      } else {\n        setEditDialogOpen(false);\n        fetchTimeEntries();\n      }\n    } finally {\n      setEditLoading(false);\n    }\n  };\n\n  return (\n    <Box>\n      <Box sx={{ display: 'flex', alignItems: 'center', mb: 2, gap: 2 }}>\n        <Typography variant=\"h4\">Time Entries</Typography>\n        <TextField\n          select\n          size=\"small\"\n          label=\"User\"\n          value={selectedUser}\n          onChange={e => {\n            setSelectedUser(e.target.value);\n            setWeeklyEntries(weeklyEntries.map(entry => ({ ...entry, user_id: e.target.value })));\n          }}\n          sx={{ minWidth: 180, ml: 2 }}\n        >\n          {users.map(user => (\n            <MenuItem key={user.id} value={user.id}>{user.name}</MenuItem>\n          ))}\n        </TextField>\n      </Box>\n      <TableContainer component={Paper} sx={{ mb: 3 }}>\n        <Table size=\"small\">\n          <TableHead>\n            {/* Weekday names row */}\n            <TableRow>\n              <TableCell></TableCell>\n              {daysOfWeek.map((day) => (\n                <TableCell key={day.key} align=\"center\" sx={{ backgroundColor: (day.key === 'sat' || day.key === 'sun') ? '#f5f5f5' : undefined, fontWeight: 'bold' }}>\n                  {day.label}\n                </TableCell>\n              ))}\n              <TableCell sx={{ width: 1, minWidth: 1, px: 0.25, py: 0 }}></TableCell>\n            </TableRow>\n            {/* Date row */}\n            <TableRow>\n              <TableCell sx={{ width: '100%' }}>Project</TableCell>\n              {daysOfWeek.map((day, i) => (\n                <TableCell key={day.key} align=\"center\" sx={{ backgroundColor: (day.key === 'sat' || day.key === 'sun') ? '#f5f5f5' : undefined, minWidth: 56, px: 0.5, py: 0.5, fontWeight: 'normal', fontSize: 13 }}>\n                  {format(new Date(weekStart.getTime() + i * 86400000), 'dd.MM')}\n                </TableCell>\n              ))}\n              <TableCell align=\"center\">Total</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {weeklyEntries.map((entry, idx) => (\n              <TableRow key={idx}>\n                <TableCell sx={{ width: '100%' }}>\n                  <TextField\n                    select\n                    size=\"small\"\n                    value={entry.project_id}\n                    onChange={e => handleWeeklyChange(idx, 'project_id', e.target.value)}\n                    fullWidth\n                  >\n                    {projects.map(project => (\n                      <MenuItem key={project.id} value={project.id}>{project.name}</MenuItem>\n                    ))}\n                  </TextField>\n                </TableCell>\n                {daysOfWeek.map(day => (\n                  <TableCell key={day.key} align=\"center\" sx={{ backgroundColor: (day.key === 'sat' || day.key === 'sun') ? '#f5f5f5' : undefined, minWidth: 56, px: 0.5, py: 0.5 }}>\n                    <HourInput\n                      value={entry.hours[day.key]}\n                      onChange={val => handleHourChange(idx, day.key, val)}\n                    />\n                  </TableCell>\n                ))}\n                <TableCell align=\"center\" sx={{ fontWeight: 'bold' }}>{projectTotals[idx]}</TableCell>\n                <TableCell sx={{ width: 1, minWidth: 1, px: 0.25, py: 0 }}>\n                  <IconButton onClick={() => removeProjectRow(idx)} disabled={weeklyEntries.length === 1} sx={{ p: 0.25 }}>\n                    <Delete fontSize=\"small\" />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n            <TableRow>\n              <TableCell colSpan={daysOfWeek.length + 3} sx={{ border: 'none', p: 1 }}>\n                <Button\n                  variant=\"text\"\n                  color=\"primary\"\n                  size=\"small\"\n                  startIcon={<Add />}\n                  onClick={addProjectRow}\n                  sx={{ mt: 1, fontWeight: 'normal', fontSize: 16, textTransform: 'none', pl: 0, minHeight: 'unset', minWidth: 'unset', p: 0 }}\n                >\n                  Add Project\n                </Button>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell sx={{ fontWeight: 'bold' }}>Required Hours</TableCell>\n              {daysOfWeek.map(day => (\n                <TableCell key={day.key} align=\"center\" sx={{ color: 'gray', backgroundColor: (day.key === 'sat' || day.key === 'sun') ? '#f5f5f5' : undefined }}>{requiredHoursPerDay[day.key]}</TableCell>\n              ))}\n              <TableCell align=\"center\" sx={{ color: 'gray', fontWeight: 'bold' }}>{requiredHoursTotal}</TableCell>\n              <TableCell sx={{ width: 1, minWidth: 1, px: 0.25, py: 0 }} />\n            </TableRow>\n            <TableRow>\n              <TableCell sx={{ fontWeight: 'bold' }}>Total</TableCell>\n              {dayTotals.map((total, i) => (\n                <TableCell key={i} align=\"center\" sx={{ color: total < requiredHoursPerDay[daysOfWeek[i].key] ? 'red' : 'inherit', backgroundColor: (daysOfWeek[i].key === 'sat' || daysOfWeek[i].key === 'sun') ? '#f5f5f5' : undefined }}>{total}</TableCell>\n              ))}\n              <TableCell align=\"center\" sx={{ fontWeight: 'bold', color: dayTotals.reduce((a, b) => a + b, 0) < requiredHoursTotal ? 'red' : 'inherit' }}>{dayTotals.reduce((a, b) => a + b, 0)}</TableCell>\n              <TableCell sx={{ width: 1, minWidth: 1, px: 0.25, py: 0 }} />\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Box sx={{ display: 'flex', gap: 2, mb: 3 }}>\n        <Button variant=\"contained\" color=\"primary\" onClick={handleWeeklySubmit}>Submit Week</Button>\n      </Box>\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 2 }}>{error}</Alert>\n      )}\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 3 }}>\n        <Typography variant=\"h4\">Time Log</Typography>\n      </Box>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>#</TableCell>\n              <TableCell>Project</TableCell>\n              <TableCell>Total Hours</TableCell>\n              <TableCell>Submission Date/Time</TableCell>\n              <TableCell align=\"right\">Edit</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {groupedEntries.map((entry) => (\n              <TableRow key={entry.project_name + entry.submission_time}>\n                <TableCell>{entry.displayNumber}</TableCell>\n                <TableCell>{entry.project_name}</TableCell>\n                <TableCell>{entry.total_hours.toFixed(2)}</TableCell>\n                <TableCell>{entry.submission_time ? format(new Date(entry.submission_time), 'PPpp') : ''}</TableCell>\n                <TableCell align=\"right\">\n                  <Button size=\"small\" variant=\"outlined\" onClick={() => handleEditOpen(entry)}>\n                    Edit\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>Add Time Entry</DialogTitle>\n        <TimeEntryForm\n          entry={newEntry}\n          projects={projects}\n          users={users}\n          error={error}\n          onChange={setNewEntry}\n          onSubmit={handleSubmit}\n          onCancel={handleClose}\n          submitLabel=\"Add Entry\"\n        />\n      </Dialog>\n\n      <Dialog open={editDialogOpen} onClose={handleEditClose} maxWidth=\"lg\" fullWidth>\n        <DialogTitle>Edit Time Entry</DialogTitle>\n        <SingleProjectWeekEditor\n          entry={editWeekEntry || { project_id: '', hours: {} }}\n          projects={projects}\n          daysOfWeek={daysOfWeek}\n          weekStart={getMonday(new Date(editWeekEntry?.submission_time || new Date()))}\n          onChange={setEditWeekEntry}\n          onSave={handleEditSave}\n          onCancel={handleEditClose}\n          error={editError}\n          loading={editLoading}\n        />\n      </Dialog>\n    </Box>\n  );\n}\n\nexport default TimeEntries; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}