{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\golun\\\\TimeTracker\\\\client\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Card, CardContent, Typography, MenuItem, TextField, CircularProgress, Alert, Switch, FormControlLabel, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, IconButton, Collapse } from '@mui/material';\nimport { BarChart, Bar, PieChart, Pie, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, HeatMap } from 'recharts';\nimport { startOfWeek, startOfMonth, startOfQuarter, startOfYear, format } from 'date-fns';\nimport axios from 'axios';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport { Responsive, WidthProvider } from 'react-grid-layout';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8'];\nconst timeRanges = [{\n  value: 'week',\n  label: 'This Week'\n}, {\n  value: 'month',\n  label: 'This Month'\n}, {\n  value: 'quarter',\n  label: 'This Quarter'\n}, {\n  value: 'year',\n  label: 'This Year'\n}, {\n  value: 'all',\n  label: 'All Time'\n}];\nconst ResponsiveGridLayout = WidthProvider(Responsive);\n_c = ResponsiveGridLayout;\nfunction Dashboard() {\n  _s();\n  const [timeRange, setTimeRange] = useState('month');\n  const [projectData, setProjectData] = useState([]);\n  const [userData, setUserData] = useState([]);\n  const [clientTypeData, setClientTypeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showPercent, setShowPercent] = useState(false);\n  const [expandedProjects, setExpandedProjects] = useState([]);\n  const [showProjectPercent, setShowProjectPercent] = useState(false);\n  const [viewByUser, setViewByUser] = useState(false);\n  const getDateRange = () => {\n    const now = new Date();\n    let startDate;\n    switch (timeRange) {\n      case 'week':\n        startDate = startOfWeek(now, {\n          weekStartsOn: 1\n        });\n        break;\n      case 'month':\n        startDate = startOfMonth(now);\n        break;\n      case 'quarter':\n        startDate = startOfQuarter(now);\n        break;\n      case 'year':\n        startDate = startOfYear(now);\n        break;\n      default:\n        startDate = null;\n    }\n    return {\n      startDate: startDate ? format(startDate, 'yyyy-MM-dd') + 'T00:00:00.000Z' : null,\n      endDate: format(now, 'yyyy-MM-dd') + 'T23:59:59.999Z'\n    };\n  };\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const {\n        startDate,\n        endDate\n      } = getDateRange();\n      const dateParams = startDate ? `?startDate=${startDate}&endDate=${endDate}` : '';\n      console.log('Fetching analytics data with params:', {\n        startDate,\n        endDate\n      });\n      const [projectRes, userRes, clientTypeRes] = await Promise.all([axios.get(`/api/analytics/time-by-project${dateParams}`), axios.get(`/api/analytics/time-by-user${dateParams}`), axios.get(`/api/analytics/time-by-client-type${dateParams}`)]);\n      console.log('Project data:', projectRes.data);\n      console.log('User data:', userRes.data);\n      console.log('Client type data:', clientTypeRes.data);\n      setProjectData(projectRes.data);\n      setUserData(userRes.data);\n      setClientTypeData(clientTypeRes.data);\n    } catch (err) {\n      console.error('Error fetching analytics:', err);\n      setError('Failed to fetch analytics data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, [timeRange]);\n  const formatHours = hours => {\n    return Math.round(hours * 100) / 100;\n  };\n\n  // Prepare users and projects arrays first so they are available for all calculations\n  const users = Array.from(new Set(userData.map(d => d.user_name)));\n  const projects = Array.from(new Set(userData.map(d => d.project_name)));\n\n  // Helper: count weekdays between two dates (inclusive)\n  function countWeekdays(start, end) {\n    let count = 0;\n    let current = new Date(start);\n    while (current <= end) {\n      const day = current.getDay();\n      if (day !== 0 && day !== 6) count++;\n      current.setDate(current.getDate() + 1);\n    }\n    return count;\n  }\n\n  // Calculate period start/end\n  const now = new Date();\n  let periodStart, periodEnd;\n  switch (timeRange) {\n    case 'week':\n      periodStart = startOfWeek(now);\n      periodEnd = now;\n      break;\n    case 'month':\n      periodStart = startOfMonth(now);\n      periodEnd = now;\n      break;\n    case 'quarter':\n      periodStart = startOfQuarter(now);\n      periodEnd = now;\n      break;\n    case 'year':\n      periodStart = startOfYear(now);\n      periodEnd = now;\n      break;\n    case 'all':\n    default:\n      // Use earliest and latest date in userData\n      const allDates = userData.map(d => new Date(d.start_time)).filter(Boolean);\n      periodStart = allDates.length ? new Date(Math.min(...allDates)) : now;\n      periodEnd = allDates.length ? new Date(Math.max(...allDates)) : now;\n      break;\n  }\n  const weekdays = countWeekdays(periodStart, periodEnd);\n  const userCapacity = users.map(() => weekdays * 8);\n  // Calculate total hours logged per user in the period\n  const userLogged = users.map(user => userData.filter(d => d.user_name === user).reduce((sum, d) => sum + d.total_hours, 0));\n  const userAvailable = userCapacity.map((cap, i) => Math.max(0, cap - userLogged[i]));\n\n  // Calculate total system hours across all projects\n  const totalSystemHours = projectData.reduce((sum, project) => sum + project.total_hours, 0);\n\n  // Build a matrix: rows = projects, cols = users\n  const heatMapData = [userAvailable,\n  // Capacity row\n  userLogged,\n  // Total load row\n  ...projects.map(project => users.map(user => {\n    const found = userData.find(d => d.user_name === user && d.project_name === project);\n    return found ? found.total_hours : 0;\n  }))];\n  const allProjectsWithCapacity = ['Capacity', 'Total load', ...projects];\n\n  // Set column width for heatmap (wider for wrapped names)\n  const colWidth = 100;\n  const cellWidth = 95;\n  const cellHeight = 35;\n  const xOffset = 100;\n  const yOffset = 60;\n  const heatmapRows = allProjectsWithCapacity.length;\n  const heatmapHeight = heatmapRows * cellHeight + yOffset + 40; // 40 for header padding\n\n  const handleExpandClick = projectName => {\n    setExpandedProjects(prev => prev.includes(projectName) ? prev.filter(name => name !== projectName) : [...prev, projectName]);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"60vh\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        select: true,\n        value: timeRange,\n        onChange: e => setTimeRange(e.target.value),\n        sx: {\n          minWidth: 200\n        },\n        children: timeRanges.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: option.value,\n          children: option.label\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveGridLayout, {\n      className: \"layout\",\n      layouts: {\n        lg: [{\n          i: 'projectHours',\n          x: 0,\n          y: 0,\n          w: 6,\n          h: 6\n        }, {\n          i: 'clientType',\n          x: 6,\n          y: 0,\n          w: 6,\n          h: 6\n        }, {\n          i: 'hoursByClient',\n          x: 0,\n          y: 6,\n          w: 12,\n          h: 6\n        }]\n      },\n      breakpoints: {\n        lg: 1200,\n        md: 996,\n        sm: 768,\n        xs: 480,\n        xxs: 0\n      },\n      cols: {\n        lg: 12,\n        md: 10,\n        sm: 6,\n        xs: 4,\n        xxs: 2\n      },\n      rowHeight: 50,\n      draggableHandle: \".MuiCardContent-root\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Hours by Project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  gap: 2,\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  control: /*#__PURE__*/_jsxDEV(Switch, {\n                    checked: viewByUser,\n                    onChange: e => setViewByUser(e.target.checked),\n                    color: \"primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 23\n                  }, this),\n                  label: viewByUser ? \"View by User\" : \"View by Project\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  control: /*#__PURE__*/_jsxDEV(Switch, {\n                    checked: showProjectPercent,\n                    onChange: e => setShowProjectPercent(e.target.checked),\n                    color: \"primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 23\n                  }, this),\n                  label: showProjectPercent ? 'Show: % of System Total' : 'Show: Hours'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n                component: Paper,\n                sx: {\n                  boxShadow: 'none'\n                },\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  size: \"small\",\n                  children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                    children: /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        sx: {\n                          fontWeight: 600\n                        },\n                        children: \"Project\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 296,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        sx: {\n                          fontWeight: 600\n                        },\n                        children: \"Total Hours\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 297,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        sx: {\n                          fontWeight: 600\n                        },\n                        children: \"Load\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 298,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 295,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                    children: viewByUser ? (() => {\n                      const users = Array.from(new Set(userData.map(d => d.user_name)));\n                      return users.flatMap(user => {\n                        const isExpanded = expandedProjects.includes(user);\n                        const userProjects = userData.filter(d => d.user_name === user && d.total_hours > 0).map(d => ({\n                          project: d.project_name,\n                          hours: d.total_hours\n                        }));\n                        const userTotalHours = userProjects.reduce((sum, p) => sum + p.hours, 0);\n                        const percent = totalSystemHours > 0 ? userTotalHours / totalSystemHours * 100 : 0;\n                        const rows = [/*#__PURE__*/_jsxDEV(TableRow, {\n                          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                            sx: {\n                              fontWeight: 500\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                              size: \"small\",\n                              onClick: () => handleExpandClick(user),\n                              children: isExpanded ? /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 316,\n                                columnNumber: 51\n                              }, this) : /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 316,\n                                columnNumber: 68\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 315,\n                              columnNumber: 35\n                            }, this), user]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 314,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                            children: showProjectPercent ? `${Math.round(percent)}%` : `${formatHours(userTotalHours)}h`\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 320,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                            children: /*#__PURE__*/_jsxDEV(Box, {\n                              sx: {\n                                width: '100%',\n                                height: 16,\n                                bgcolor: '#e3eafc',\n                                borderRadius: 2,\n                                position: 'relative'\n                              },\n                              children: /*#__PURE__*/_jsxDEV(Box, {\n                                sx: {\n                                  width: `${percent}%`,\n                                  height: '100%',\n                                  bgcolor: '#1976d2',\n                                  borderRadius: 2,\n                                  transition: 'width 0.3s'\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 327,\n                                columnNumber: 37\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 326,\n                              columnNumber: 35\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 325,\n                            columnNumber: 33\n                          }, this)]\n                        }, user, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 313,\n                          columnNumber: 31\n                        }, this)];\n                        if (isExpanded && userProjects.length > 0) {\n                          rows.push(...userProjects.map(p => {\n                            const projectPercent = p.hours / userTotalHours * 100;\n                            return /*#__PURE__*/_jsxDEV(TableRow, {\n                              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                                sx: {\n                                  pl: 6\n                                },\n                                children: p.project\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 345,\n                                columnNumber: 37\n                              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                                children: showProjectPercent ? `${Math.round(projectPercent)}%` : `${formatHours(p.hours)}h`\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 346,\n                                columnNumber: 37\n                              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                                children: /*#__PURE__*/_jsxDEV(Box, {\n                                  sx: {\n                                    width: '100%',\n                                    height: 12,\n                                    bgcolor: '#e3eafc',\n                                    borderRadius: 2,\n                                    position: 'relative'\n                                  },\n                                  children: /*#__PURE__*/_jsxDEV(Box, {\n                                    sx: {\n                                      width: `${projectPercent}%`,\n                                      height: '100%',\n                                      bgcolor: '#1976d2',\n                                      borderRadius: 2,\n                                      transition: 'width 0.3s'\n                                    }\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 353,\n                                    columnNumber: 41\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 352,\n                                  columnNumber: 39\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 351,\n                                columnNumber: 37\n                              }, this)]\n                            }, user + '-' + p.project, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 344,\n                              columnNumber: 35\n                            }, this);\n                          }));\n                        }\n                        if (isExpanded && userProjects.length === 0) {\n                          rows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n                            children: /*#__PURE__*/_jsxDEV(TableCell, {\n                              colSpan: 3,\n                              align: \"center\",\n                              children: /*#__PURE__*/_jsxDEV(Typography, {\n                                color: \"text.secondary\",\n                                children: \"No project data for this user\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 372,\n                                columnNumber: 37\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 371,\n                              columnNumber: 35\n                            }, this)\n                          }, user + '-no-projects', false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 370,\n                            columnNumber: 33\n                          }, this));\n                        }\n                        return rows;\n                      });\n                    })() : projectData.length > 0 ? (() => {\n                      return projectData.flatMap(project => {\n                        const isExpanded = expandedProjects.includes(project.project_name);\n                        const usersForProject = userData.filter(d => d.project_name === project.project_name && d.total_hours > 0).map(d => ({\n                          user: d.user_name,\n                          hours: d.total_hours\n                        }));\n                        const percent = totalSystemHours > 0 ? project.total_hours / totalSystemHours * 100 : 0;\n                        const rows = [/*#__PURE__*/_jsxDEV(TableRow, {\n                          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                            sx: {\n                              fontWeight: 500\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                              size: \"small\",\n                              onClick: () => handleExpandClick(project.project_name),\n                              children: isExpanded ? /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 393,\n                                columnNumber: 53\n                              }, this) : /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 393,\n                                columnNumber: 70\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 392,\n                              columnNumber: 37\n                            }, this), project.project_name]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 391,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                            children: showProjectPercent ? `${Math.round(percent)}%` : `${formatHours(project.total_hours)}h`\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 397,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                            children: /*#__PURE__*/_jsxDEV(Box, {\n                              sx: {\n                                width: '100%',\n                                height: 16,\n                                bgcolor: '#e3eafc',\n                                borderRadius: 2,\n                                position: 'relative'\n                              },\n                              children: /*#__PURE__*/_jsxDEV(Box, {\n                                sx: {\n                                  width: `${percent}%`,\n                                  height: '100%',\n                                  bgcolor: '#1976d2',\n                                  borderRadius: 2,\n                                  transition: 'width 0.3s'\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 404,\n                                columnNumber: 39\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 403,\n                              columnNumber: 37\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 402,\n                            columnNumber: 35\n                          }, this)]\n                        }, project.project_name, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 390,\n                          columnNumber: 33\n                        }, this)];\n                        if (isExpanded && usersForProject.length > 0) {\n                          rows.push(...usersForProject.map(u => {\n                            const userPercent = u.hours / project.total_hours * 100;\n                            return /*#__PURE__*/_jsxDEV(TableRow, {\n                              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                                sx: {\n                                  pl: 6\n                                },\n                                children: u.user\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 422,\n                                columnNumber: 39\n                              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                                children: showProjectPercent ? `${Math.round(userPercent)}%` : `${formatHours(u.hours)}h`\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 423,\n                                columnNumber: 39\n                              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                                children: /*#__PURE__*/_jsxDEV(Box, {\n                                  sx: {\n                                    width: '100%',\n                                    height: 12,\n                                    bgcolor: '#e3eafc',\n                                    borderRadius: 2,\n                                    position: 'relative'\n                                  },\n                                  children: /*#__PURE__*/_jsxDEV(Box, {\n                                    sx: {\n                                      width: `${userPercent}%`,\n                                      height: '100%',\n                                      bgcolor: '#1976d2',\n                                      borderRadius: 2,\n                                      transition: 'width 0.3s'\n                                    }\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 430,\n                                    columnNumber: 43\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 429,\n                                  columnNumber: 41\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 428,\n                                columnNumber: 39\n                              }, this)]\n                            }, project.project_name + '-' + u.user, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 421,\n                              columnNumber: 37\n                            }, this);\n                          }));\n                        }\n                        if (isExpanded && usersForProject.length === 0) {\n                          rows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n                            children: /*#__PURE__*/_jsxDEV(TableCell, {\n                              colSpan: 3,\n                              align: \"center\",\n                              children: /*#__PURE__*/_jsxDEV(Typography, {\n                                color: \"text.secondary\",\n                                children: \"No user data for this project\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 449,\n                                columnNumber: 39\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 448,\n                              columnNumber: 37\n                            }, this)\n                          }, project.project_name + '-no-users', false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 447,\n                            columnNumber: 35\n                          }, this));\n                        }\n                        return rows;\n                      });\n                    })() : /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: /*#__PURE__*/_jsxDEV(TableCell, {\n                        colSpan: 3,\n                        align: \"center\",\n                        children: /*#__PURE__*/_jsxDEV(Typography, {\n                          color: \"text.secondary\",\n                          children: \"No project data available\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 460,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 459,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 458,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 301,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)\n      }, \"projectHours\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Internal vs External Hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  height: 300\n                },\n                children: clientTypeData.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                  children: /*#__PURE__*/_jsxDEV(PieChart, {\n                    children: [/*#__PURE__*/_jsxDEV(Pie, {\n                      data: clientTypeData,\n                      dataKey: \"total_hours\",\n                      nameKey: \"client_type\",\n                      cx: \"50%\",\n                      cy: \"50%\",\n                      outerRadius: 100,\n                      label: ({\n                        client_type,\n                        total_hours\n                      }) => `${client_type}: ${formatHours(total_hours)}h`,\n                      children: clientTypeData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                        fill: COLORS[index % COLORS.length]\n                      }, entry.client_type, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 495,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 483,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                      formatter: value => formatHours(value) + ' hours'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 498,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 499,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 482,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 481,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(Box, {\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  height: \"100%\",\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    color: \"text.secondary\",\n                    children: \"No client type data available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 504,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 503,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 11\n        }, this)\n      }, \"clientType\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Hours by Client\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  height: 300\n                },\n                children: projectData && projectData.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                  children: /*#__PURE__*/_jsxDEV(BarChart, {\n                    data: (() => {\n                      const clientData = projectData.reduce((acc, project) => {\n                        const clientName = project.client_name || 'Unassigned';\n                        const existingClient = acc.find(c => c.name === clientName);\n                        if (existingClient) {\n                          existingClient.hours += project.total_hours;\n                        } else {\n                          acc.push({\n                            name: clientName,\n                            hours: project.total_hours\n                          });\n                        }\n                        return acc;\n                      }, []);\n                      return clientData;\n                    })(),\n                    margin: {\n                      top: 20,\n                      right: 30,\n                      left: 20,\n                      bottom: 5\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                      strokeDasharray: \"3 3\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 538,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                      dataKey: \"name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 539,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 540,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                      formatter: value => formatHours(value) + ' hours'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 541,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 542,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                      dataKey: \"hours\",\n                      fill: \"#8884d8\",\n                      name: \"Hours\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 543,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 522,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 521,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(Box, {\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  height: \"100%\",\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    color: \"text.secondary\",\n                    children: \"No client data available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 548,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 547,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 11\n        }, this)\n      }, \"hoursByClient\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"G1goW1lS/Fp/Ud/42176lDpiqXk=\");\n_c2 = Dashboard;\nexport default Dashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"ResponsiveGridLayout\");\n$RefreshReg$(_c2, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Box","Card","CardContent","Typography","MenuItem","TextField","CircularProgress","Alert","Switch","FormControlLabel","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","IconButton","Collapse","BarChart","Bar","PieChart","Pie","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","HeatMap","startOfWeek","startOfMonth","startOfQuarter","startOfYear","format","axios","AddIcon","RemoveIcon","Responsive","WidthProvider","jsxDEV","_jsxDEV","COLORS","timeRanges","value","label","ResponsiveGridLayout","_c","Dashboard","_s","timeRange","setTimeRange","projectData","setProjectData","userData","setUserData","clientTypeData","setClientTypeData","loading","setLoading","error","setError","showPercent","setShowPercent","expandedProjects","setExpandedProjects","showProjectPercent","setShowProjectPercent","viewByUser","setViewByUser","getDateRange","now","Date","startDate","weekStartsOn","endDate","fetchData","dateParams","console","log","projectRes","userRes","clientTypeRes","Promise","all","get","data","err","formatHours","hours","Math","round","users","Array","from","Set","map","d","user_name","projects","project_name","countWeekdays","start","end","count","current","day","getDay","setDate","getDate","periodStart","periodEnd","allDates","start_time","filter","Boolean","length","min","max","weekdays","userCapacity","userLogged","user","reduce","sum","total_hours","userAvailable","cap","i","totalSystemHours","project","heatMapData","found","find","allProjectsWithCapacity","colWidth","cellWidth","cellHeight","xOffset","yOffset","heatmapRows","heatmapHeight","handleExpandClick","projectName","prev","includes","name","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","mb","variant","select","onChange","e","target","minWidth","option","severity","className","layouts","lg","x","y","w","h","breakpoints","md","sm","xs","xxs","cols","rowHeight","draggableHandle","gutterBottom","gap","control","checked","color","component","boxShadow","size","fontWeight","flatMap","isExpanded","userProjects","userTotalHours","p","percent","rows","onClick","width","height","bgcolor","borderRadius","position","transition","push","projectPercent","pl","colSpan","align","usersForProject","u","userPercent","dataKey","nameKey","cx","cy","outerRadius","client_type","entry","index","fill","formatter","clientData","acc","clientName","client_name","existingClient","c","margin","top","right","left","bottom","strokeDasharray","_c2","$RefreshReg$"],"sources":["C:/Users/golun/TimeTracker/client/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  MenuItem,\n  TextField,\n  CircularProgress,\n  Alert,\n  Switch,\n  FormControlLabel,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  IconButton,\n  Collapse,\n} from '@mui/material';\nimport {\n  BarChart,\n  Bar,\n  PieChart,\n  Pie,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  HeatMap,\n} from 'recharts';\nimport { startOfWeek, startOfMonth, startOfQuarter, startOfYear, format } from 'date-fns';\nimport axios from 'axios';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport { Responsive, WidthProvider } from 'react-grid-layout';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8'];\n\nconst timeRanges = [\n  { value: 'week', label: 'This Week' },\n  { value: 'month', label: 'This Month' },\n  { value: 'quarter', label: 'This Quarter' },\n  { value: 'year', label: 'This Year' },\n  { value: 'all', label: 'All Time' },\n];\n\nconst ResponsiveGridLayout = WidthProvider(Responsive);\n\nfunction Dashboard() {\n  const [timeRange, setTimeRange] = useState('month');\n  const [projectData, setProjectData] = useState([]);\n  const [userData, setUserData] = useState([]);\n  const [clientTypeData, setClientTypeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showPercent, setShowPercent] = useState(false);\n  const [expandedProjects, setExpandedProjects] = useState([]);\n  const [showProjectPercent, setShowProjectPercent] = useState(false);\n  const [viewByUser, setViewByUser] = useState(false);\n\n  const getDateRange = () => {\n    const now = new Date();\n    let startDate;\n\n    switch (timeRange) {\n      case 'week':\n        startDate = startOfWeek(now, { weekStartsOn: 1 });\n        break;\n      case 'month':\n        startDate = startOfMonth(now);\n        break;\n      case 'quarter':\n        startDate = startOfQuarter(now);\n        break;\n      case 'year':\n        startDate = startOfYear(now);\n        break;\n      default:\n        startDate = null;\n    }\n\n    return {\n      startDate: startDate ? format(startDate, 'yyyy-MM-dd') + 'T00:00:00.000Z' : null,\n      endDate: format(now, 'yyyy-MM-dd') + 'T23:59:59.999Z',\n    };\n  };\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const { startDate, endDate } = getDateRange();\n      const dateParams = startDate ? `?startDate=${startDate}&endDate=${endDate}` : '';\n\n      console.log('Fetching analytics data with params:', { startDate, endDate });\n\n      const [projectRes, userRes, clientTypeRes] = await Promise.all([\n        axios.get(`/api/analytics/time-by-project${dateParams}`),\n        axios.get(`/api/analytics/time-by-user${dateParams}`),\n        axios.get(`/api/analytics/time-by-client-type${dateParams}`),\n      ]);\n\n      console.log('Project data:', projectRes.data);\n      console.log('User data:', userRes.data);\n      console.log('Client type data:', clientTypeRes.data);\n\n      setProjectData(projectRes.data);\n      setUserData(userRes.data);\n      setClientTypeData(clientTypeRes.data);\n    } catch (err) {\n      console.error('Error fetching analytics:', err);\n      setError('Failed to fetch analytics data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [timeRange]);\n\n  const formatHours = (hours) => {\n    return Math.round(hours * 100) / 100;\n  };\n\n  // Prepare users and projects arrays first so they are available for all calculations\n  const users = Array.from(new Set(userData.map(d => d.user_name)));\n  const projects = Array.from(new Set(userData.map(d => d.project_name)));\n\n  // Helper: count weekdays between two dates (inclusive)\n  function countWeekdays(start, end) {\n    let count = 0;\n    let current = new Date(start);\n    while (current <= end) {\n      const day = current.getDay();\n      if (day !== 0 && day !== 6) count++;\n      current.setDate(current.getDate() + 1);\n    }\n    return count;\n  }\n\n  // Calculate period start/end\n  const now = new Date();\n  let periodStart, periodEnd;\n  switch (timeRange) {\n    case 'week':\n      periodStart = startOfWeek(now);\n      periodEnd = now;\n      break;\n    case 'month':\n      periodStart = startOfMonth(now);\n      periodEnd = now;\n      break;\n    case 'quarter':\n      periodStart = startOfQuarter(now);\n      periodEnd = now;\n      break;\n    case 'year':\n      periodStart = startOfYear(now);\n      periodEnd = now;\n      break;\n    case 'all':\n    default:\n      // Use earliest and latest date in userData\n      const allDates = userData.map(d => new Date(d.start_time)).filter(Boolean);\n      periodStart = allDates.length ? new Date(Math.min(...allDates)) : now;\n      periodEnd = allDates.length ? new Date(Math.max(...allDates)) : now;\n      break;\n  }\n  const weekdays = countWeekdays(periodStart, periodEnd);\n  const userCapacity = users.map(() => weekdays * 8);\n  // Calculate total hours logged per user in the period\n  const userLogged = users.map(user =>\n    userData.filter(d => d.user_name === user).reduce((sum, d) => sum + d.total_hours, 0)\n  );\n  const userAvailable = userCapacity.map((cap, i) => Math.max(0, cap - userLogged[i]));\n\n  // Calculate total system hours across all projects\n  const totalSystemHours = projectData.reduce((sum, project) => sum + project.total_hours, 0);\n\n  // Build a matrix: rows = projects, cols = users\n  const heatMapData = [\n    userAvailable, // Capacity row\n    userLogged,   // Total load row\n    ...projects.map(project =>\n      users.map(user => {\n        const found = userData.find(d => d.user_name === user && d.project_name === project);\n        return found ? found.total_hours : 0;\n      })\n    )\n  ];\n  const allProjectsWithCapacity = ['Capacity', 'Total load', ...projects];\n\n  // Set column width for heatmap (wider for wrapped names)\n  const colWidth = 100;\n  const cellWidth = 95;\n  const cellHeight = 35;\n  const xOffset = 100;\n  const yOffset = 60;\n  const heatmapRows = allProjectsWithCapacity.length;\n  const heatmapHeight = heatmapRows * cellHeight + yOffset + 40; // 40 for header padding\n\n  const handleExpandClick = (projectName) => {\n    setExpandedProjects((prev) =>\n      prev.includes(projectName)\n        ? prev.filter((name) => name !== projectName)\n        : [...prev, projectName]\n    );\n  };\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"60vh\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  return (\n    <Box>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 3 }}>\n        <Typography variant=\"h4\">Dashboard</Typography>\n        <TextField\n          select\n          value={timeRange}\n          onChange={(e) => setTimeRange(e.target.value)}\n          sx={{ minWidth: 200 }}\n        >\n          {timeRanges.map((option) => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n      </Box>\n\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\n          {error}\n        </Alert>\n      )}\n\n      <ResponsiveGridLayout\n        className=\"layout\"\n        layouts={{ lg: [\n          { i: 'projectHours', x: 0, y: 0, w: 6, h: 6 },\n          { i: 'clientType', x: 6, y: 0, w: 6, h: 6 },\n          { i: 'hoursByClient', x: 0, y: 6, w: 12, h: 6 },\n        ] }}\n        breakpoints={{ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 }}\n        cols={{ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }}\n        rowHeight={50}\n        draggableHandle=\".MuiCardContent-root\"\n      >\n        <div key=\"projectHours\">\n          <Card>\n            <CardContent>\n              <Box>\n                <Typography variant=\"h6\" gutterBottom>\n                  Hours by Project\n                </Typography>\n                <Box sx={{ display: 'flex', gap: 2, mb: 2 }}>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={viewByUser}\n                        onChange={e => setViewByUser(e.target.checked)}\n                        color=\"primary\"\n                      />\n                    }\n                    label={viewByUser ? \"View by User\" : \"View by Project\"}\n                  />\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={showProjectPercent}\n                        onChange={e => setShowProjectPercent(e.target.checked)}\n                        color=\"primary\"\n                      />\n                    }\n                    label={showProjectPercent ? 'Show: % of System Total' : 'Show: Hours'}\n                  />\n                </Box>\n                <TableContainer component={Paper} sx={{ boxShadow: 'none' }}>\n                  <Table size=\"small\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell sx={{ fontWeight: 600 }}>Project</TableCell>\n                        <TableCell sx={{ fontWeight: 600 }}>Total Hours</TableCell>\n                        <TableCell sx={{ fontWeight: 600 }}>Load</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {viewByUser ? (\n                        (() => {\n                          const users = Array.from(new Set(userData.map(d => d.user_name)));\n                          return users.flatMap((user) => {\n                            const isExpanded = expandedProjects.includes(user);\n                            const userProjects = userData\n                              .filter(d => d.user_name === user && d.total_hours > 0)\n                              .map(d => ({ project: d.project_name, hours: d.total_hours }));\n                            const userTotalHours = userProjects.reduce((sum, p) => sum + p.hours, 0);\n                            const percent = totalSystemHours > 0 ? (userTotalHours / totalSystemHours) * 100 : 0;\n                            const rows = [\n                              <TableRow key={user}>\n                                <TableCell sx={{ fontWeight: 500 }}>\n                                  <IconButton size=\"small\" onClick={() => handleExpandClick(user)}>\n                                    {isExpanded ? <RemoveIcon /> : <AddIcon />}\n                                  </IconButton>\n                                  {user}\n                                </TableCell>\n                                <TableCell>\n                                  {showProjectPercent\n                                    ? `${Math.round(percent)}%`\n                                    : `${formatHours(userTotalHours)}h`}\n                                </TableCell>\n                                <TableCell>\n                                  <Box sx={{ width: '100%', height: 16, bgcolor: '#e3eafc', borderRadius: 2, position: 'relative' }}>\n                                    <Box\n                                      sx={{\n                                        width: `${percent}%`,\n                                        height: '100%',\n                                        bgcolor: '#1976d2',\n                                        borderRadius: 2,\n                                        transition: 'width 0.3s',\n                                      }}\n                                    />\n                                  </Box>\n                                </TableCell>\n                              </TableRow>\n                            ];\n                            if (isExpanded && userProjects.length > 0) {\n                              rows.push(...userProjects.map((p) => {\n                                const projectPercent = (p.hours / userTotalHours) * 100;\n                                return (\n                                  <TableRow key={user + '-' + p.project}>\n                                    <TableCell sx={{ pl: 6 }}>{p.project}</TableCell>\n                                    <TableCell>\n                                      {showProjectPercent\n                                        ? `${Math.round(projectPercent)}%`\n                                        : `${formatHours(p.hours)}h`}\n                                    </TableCell>\n                                    <TableCell>\n                                      <Box sx={{ width: '100%', height: 12, bgcolor: '#e3eafc', borderRadius: 2, position: 'relative' }}>\n                                        <Box\n                                          sx={{\n                                            width: `${projectPercent}%`,\n                                            height: '100%',\n                                            bgcolor: '#1976d2',\n                                            borderRadius: 2,\n                                            transition: 'width 0.3s',\n                                          }}\n                                        />\n                                      </Box>\n                                    </TableCell>\n                                  </TableRow>\n                                );\n                              }));\n                            }\n                            if (isExpanded && userProjects.length === 0) {\n                              rows.push(\n                                <TableRow key={user + '-no-projects'}>\n                                  <TableCell colSpan={3} align=\"center\">\n                                    <Typography color=\"text.secondary\">No project data for this user</Typography>\n                                  </TableCell>\n                                </TableRow>\n                              );\n                            }\n                            return rows;\n                          });\n                        })()\n                      ) : (\n                        projectData.length > 0 ? (\n                          (() => {\n                            return projectData.flatMap((project) => {\n                              const isExpanded = expandedProjects.includes(project.project_name);\n                              const usersForProject = userData\n                                .filter(d => d.project_name === project.project_name && d.total_hours > 0)\n                                .map(d => ({ user: d.user_name, hours: d.total_hours }));\n                              const percent = totalSystemHours > 0 ? (project.total_hours / totalSystemHours) * 100 : 0;\n                              const rows = [\n                                <TableRow key={project.project_name}>\n                                  <TableCell sx={{ fontWeight: 500 }}>\n                                    <IconButton size=\"small\" onClick={() => handleExpandClick(project.project_name)}>\n                                      {isExpanded ? <RemoveIcon /> : <AddIcon />}\n                                    </IconButton>\n                                    {project.project_name}\n                                  </TableCell>\n                                  <TableCell>\n                                    {showProjectPercent\n                                      ? `${Math.round(percent)}%`\n                                      : `${formatHours(project.total_hours)}h`}\n                                  </TableCell>\n                                  <TableCell>\n                                    <Box sx={{ width: '100%', height: 16, bgcolor: '#e3eafc', borderRadius: 2, position: 'relative' }}>\n                                      <Box\n                                        sx={{\n                                          width: `${percent}%`,\n                                          height: '100%',\n                                          bgcolor: '#1976d2',\n                                          borderRadius: 2,\n                                          transition: 'width 0.3s',\n                                        }}\n                                      />\n                                    </Box>\n                                  </TableCell>\n                                </TableRow>\n                              ];\n                              if (isExpanded && usersForProject.length > 0) {\n                                rows.push(...usersForProject.map((u) => {\n                                  const userPercent = (u.hours / project.total_hours) * 100;\n                                  return (\n                                    <TableRow key={project.project_name + '-' + u.user}>\n                                      <TableCell sx={{ pl: 6 }}>{u.user}</TableCell>\n                                      <TableCell>\n                                        {showProjectPercent\n                                          ? `${Math.round(userPercent)}%`\n                                          : `${formatHours(u.hours)}h`}\n                                      </TableCell>\n                                      <TableCell>\n                                        <Box sx={{ width: '100%', height: 12, bgcolor: '#e3eafc', borderRadius: 2, position: 'relative' }}>\n                                          <Box\n                                            sx={{\n                                              width: `${userPercent}%`,\n                                              height: '100%',\n                                              bgcolor: '#1976d2',\n                                              borderRadius: 2,\n                                              transition: 'width 0.3s',\n                                            }}\n                                          />\n                                        </Box>\n                                      </TableCell>\n                                    </TableRow>\n                                  );\n                                }));\n                              }\n                              if (isExpanded && usersForProject.length === 0) {\n                                rows.push(\n                                  <TableRow key={project.project_name + '-no-users'}>\n                                    <TableCell colSpan={3} align=\"center\">\n                                      <Typography color=\"text.secondary\">No user data for this project</Typography>\n                                    </TableCell>\n                                  </TableRow>\n                                );\n                              }\n                              return rows;\n                            });\n                          })()\n                        ) : (\n                          <TableRow>\n                            <TableCell colSpan={3} align=\"center\">\n                              <Typography color=\"text.secondary\">No project data available</Typography>\n                            </TableCell>\n                          </TableRow>\n                        )\n                      )}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Box>\n            </CardContent>\n          </Card>\n        </div>\n        <div key=\"clientType\">\n          <Card>\n            <CardContent>\n              <Box>\n                <Typography variant=\"h6\" gutterBottom>\n                  Internal vs External Hours\n                </Typography>\n                <Box sx={{ height: 300 }}>\n                  {clientTypeData.length > 0 ? (\n                    <ResponsiveContainer>\n                      <PieChart>\n                        <Pie\n                          data={clientTypeData}\n                          dataKey=\"total_hours\"\n                          nameKey=\"client_type\"\n                          cx=\"50%\"\n                          cy=\"50%\"\n                          outerRadius={100}\n                          label={({ client_type, total_hours }) => \n                            `${client_type}: ${formatHours(total_hours)}h`\n                          }\n                        >\n                          {clientTypeData.map((entry, index) => (\n                            <Cell key={entry.client_type} fill={COLORS[index % COLORS.length]} />\n                          ))}\n                        </Pie>\n                        <Tooltip formatter={(value) => formatHours(value) + ' hours'} />\n                        <Legend />\n                      </PieChart>\n                    </ResponsiveContainer>\n                  ) : (\n                    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100%\">\n                      <Typography color=\"text.secondary\">No client type data available</Typography>\n                    </Box>\n                  )}\n                </Box>\n              </Box>\n            </CardContent>\n          </Card>\n        </div>\n        <div key=\"hoursByClient\">\n          <Card>\n            <CardContent>\n              <Box>\n                <Typography variant=\"h6\" gutterBottom>\n                  Hours by Client\n                </Typography>\n                <Box sx={{ height: 300 }}>\n                  {projectData && projectData.length > 0 ? (\n                    <ResponsiveContainer>\n                      <BarChart\n                        data={(() => {\n                          const clientData = projectData.reduce((acc, project) => {\n                            const clientName = project.client_name || 'Unassigned';\n                            const existingClient = acc.find(c => c.name === clientName);\n                            if (existingClient) {\n                              existingClient.hours += project.total_hours;\n                            } else {\n                              acc.push({ name: clientName, hours: project.total_hours });\n                            }\n                            return acc;\n                          }, []);\n                          return clientData;\n                        })()}\n                        margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n                      >\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"name\" />\n                        <YAxis />\n                        <Tooltip formatter={(value) => formatHours(value) + ' hours'} />\n                        <Legend />\n                        <Bar dataKey=\"hours\" fill=\"#8884d8\" name=\"Hours\" />\n                      </BarChart>\n                    </ResponsiveContainer>\n                  ) : (\n                    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100%\">\n                      <Typography color=\"text.secondary\">No client data available</Typography>\n                    </Box>\n                  )}\n                </Box>\n              </Box>\n            </CardContent>\n          </Card>\n        </div>\n      </ResponsiveGridLayout>\n    </Box>\n  );\n}\n\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}