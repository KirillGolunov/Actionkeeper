{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\golun\\\\TimeTracker\\\\client\\\\src\\\\pages\\\\Dashboards_new.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Card, CardContent, Typography, MenuItem, TextField, IconButton, Switch, FormControlLabel, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Menu } from '@mui/material';\nimport { PieChart, Pie, Cell, Tooltip, Legend, BarChart, Bar, XAxis, YAxis, CartesianGrid, ResponsiveContainer } from 'recharts';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport axios from 'axios';\nimport { startOfWeek, startOfMonth, startOfQuarter, startOfYear, format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8'];\nconst timeRanges = [{\n  value: 'week',\n  label: 'This Week'\n}, {\n  value: 'month',\n  label: 'This Month'\n}, {\n  value: 'quarter',\n  label: 'This Quarter'\n}, {\n  value: 'year',\n  label: 'This Year'\n}, {\n  value: 'all',\n  label: 'All Time'\n}];\nfunction DashboardsNew() {\n  _s();\n  const [timeRange, setTimeRange] = useState('month');\n  const [projectData, setProjectData] = useState([]);\n  const [userData, setUserData] = useState([]);\n  const [clientTypeData, setClientTypeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [expandedProjects, setExpandedProjects] = useState([]);\n  const [showProjectPercent, setShowProjectPercent] = useState(false);\n  const [viewByUser, setViewByUser] = useState(false);\n  const [menuAnchorEl, setMenuAnchorEl] = useState(null);\n  const [activeWidget, setActiveWidget] = useState(null);\n  const getDateRange = () => {\n    const now = new Date();\n    let startDate;\n    switch (timeRange) {\n      case 'week':\n        startDate = startOfWeek(now, {\n          weekStartsOn: 1\n        });\n        break;\n      case 'month':\n        startDate = startOfMonth(now);\n        break;\n      case 'quarter':\n        startDate = startOfQuarter(now);\n        break;\n      case 'year':\n        startDate = startOfYear(now);\n        break;\n      default:\n        startDate = null;\n    }\n    return {\n      startDate: startDate ? format(startDate, 'yyyy-MM-dd') + 'T00:00:00.000Z' : null,\n      endDate: format(now, 'yyyy-MM-dd') + 'T23:59:59.999Z'\n    };\n  };\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const {\n        startDate,\n        endDate\n      } = getDateRange();\n      const dateParams = startDate ? `?startDate=${startDate}&endDate=${endDate}` : '';\n      const [projectRes, userRes, clientTypeRes] = await Promise.all([axios.get(`/api/analytics/time-by-project${dateParams}`), axios.get(`/api/analytics/time-by-user${dateParams}`), axios.get(`/api/analytics/time-by-client-type${dateParams}`)]);\n      setProjectData(projectRes.data);\n      setUserData(userRes.data);\n      setClientTypeData(clientTypeRes.data);\n    } catch (err) {\n      setError('Failed to fetch analytics data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line\n  }, [timeRange]);\n  const formatHours = hours => Math.round(hours * 100) / 100;\n\n  // Pie Chart: Internal vs External Hours\n  const pieWidget = /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Internal vs External Hours\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: e => {\n            setMenuAnchorEl(e.currentTarget);\n            setActiveWidget('clientType');\n          },\n          children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          height: 300\n        },\n        children: clientTypeData.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: \"100%\",\n          children: /*#__PURE__*/_jsxDEV(PieChart, {\n            children: [/*#__PURE__*/_jsxDEV(Pie, {\n              data: clientTypeData,\n              dataKey: \"total_hours\",\n              nameKey: \"client_type\",\n              cx: \"50%\",\n              cy: \"50%\",\n              outerRadius: 100,\n              label: ({\n                client_type,\n                total_hours\n              }) => `${client_type}: ${formatHours(total_hours)}h`,\n              children: clientTypeData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                fill: COLORS[index % COLORS.length]\n              }, entry.client_type, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              formatter: value => formatHours(value) + ' hours'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"100%\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"text.secondary\",\n            children: \"No client type data available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n\n  // Bar Chart: Hours by Client\n  const barWidget = /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Hours by Client\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: e => {\n            setMenuAnchorEl(e.currentTarget);\n            setActiveWidget('hoursByClient');\n          },\n          children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          height: 300\n        },\n        children: projectData && projectData.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: \"100%\",\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: (() => {\n              const clientHours = {};\n              projectData.forEach(project => {\n                const client = project.client_name && project.client_name.trim() || 'Unassigned';\n                clientHours[client] = (clientHours[client] || 0) + project.total_hours;\n              });\n              return Object.entries(clientHours).map(([name, hours]) => ({\n                name,\n                hours: formatHours(hours)\n              }));\n            })(),\n            margin: {\n              top: 20,\n              right: 30,\n              left: 20,\n              bottom: 5\n            },\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              formatter: value => value + ' hours'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"hours\",\n              fill: \"#8884d8\",\n              name: \"Hours\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"100%\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"text.secondary\",\n            children: \"No client data available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n\n  // Table: Hours by Project/User\n  // Prepare users and projects arrays\n  const users = Array.from(new Set(userData.map(d => d.user_name)));\n  const projects = Array.from(new Set(userData.map(d => d.project_name)));\n  const totalSystemHours = projectData.reduce((sum, project) => sum + project.total_hours, 0);\n\n  // Table rows\n  let projectRows = [];\n  let userRows = [];\n  const handleExpandClick = name => {\n    setExpandedProjects(prev => prev.includes(name) ? prev.filter(n => n !== name) : [...prev, name]);\n  };\n  if (viewByUser) {\n    users.forEach(user => {\n      const isExpanded = expandedProjects.includes(user);\n      const userProjects = userData.filter(d => d.user_name === user && d.total_hours > 0).map(d => ({\n        project: d.project_name,\n        hours: d.total_hours\n      }));\n      const userTotalHours = userProjects.reduce((sum, p) => sum + p.hours, 0);\n      const percent = totalSystemHours > 0 ? userTotalHours / totalSystemHours * 100 : 0;\n      userRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          sx: {\n            fontWeight: 500\n          },\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            onClick: () => handleExpandClick(user),\n            children: isExpanded ? /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), user]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: showProjectPercent ? `${Math.round(percent)}%` : `${formatHours(userTotalHours)}h`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: '100%',\n              height: 16,\n              bgcolor: '#e3eafc',\n              borderRadius: 2,\n              position: 'relative'\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: `${percent}%`,\n                height: '100%',\n                bgcolor: '#1976d2',\n                borderRadius: 2,\n                transition: 'width 0.3s'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, user, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this));\n      if (isExpanded && userProjects.length > 0) {\n        userProjects.forEach(p => {\n          const projectPercent = p.hours / userTotalHours * 100;\n          userRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              bgcolor: '#f5f5f5'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                pl: 6\n              },\n              children: p.project\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: showProjectPercent ? `${Math.round(projectPercent)}%` : `${formatHours(p.hours)}h`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: '100%',\n                  height: 12,\n                  bgcolor: '#e3eafc',\n                  borderRadius: 2,\n                  position: 'relative'\n                },\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    width: `${projectPercent}%`,\n                    height: '100%',\n                    bgcolor: '#4caf50',\n                    borderRadius: 2,\n                    transition: 'width 0.3s'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)]\n          }, user + '-' + p.project, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this));\n        });\n      }\n      if (isExpanded && userProjects.length === 0) {\n        userRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            bgcolor: '#f5f5f5'\n          },\n          children: /*#__PURE__*/_jsxDEV(TableCell, {\n            colSpan: 3,\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"text.secondary\",\n              children: \"No project data for this user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)\n        }, user + '-no-projects', false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this));\n      }\n    });\n  } else {\n    projectData.forEach(project => {\n      const isExpanded = expandedProjects.includes(project.project_name);\n      const usersForProject = userData.filter(d => d.project_name === project.project_name && d.total_hours > 0).map(d => ({\n        user: d.user_name,\n        hours: d.total_hours\n      }));\n      const percent = totalSystemHours > 0 ? project.total_hours / totalSystemHours * 100 : 0;\n      projectRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          sx: {\n            fontWeight: 500\n          },\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            onClick: () => handleExpandClick(project.project_name),\n            children: isExpanded ? /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), project.project_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: showProjectPercent ? `${Math.round(percent)}%` : `${formatHours(project.total_hours)}h`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: '100%',\n              height: 16,\n              bgcolor: '#e3eafc',\n              borderRadius: 2,\n              position: 'relative'\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: `${percent}%`,\n                height: '100%',\n                bgcolor: '#1976d2',\n                borderRadius: 2,\n                transition: 'width 0.3s'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this)]\n      }, project.project_name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this));\n      if (isExpanded && usersForProject.length > 0) {\n        usersForProject.forEach(u => {\n          const userPercent = u.hours / project.total_hours * 100;\n          projectRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              bgcolor: '#f5f5f5'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                pl: 6\n              },\n              children: u.user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: showProjectPercent ? `${Math.round(userPercent)}%` : `${formatHours(u.hours)}h`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: '100%',\n                  height: 12,\n                  bgcolor: '#e3eafc',\n                  borderRadius: 2,\n                  position: 'relative'\n                },\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    width: `${userPercent}%`,\n                    height: '100%',\n                    bgcolor: '#4caf50',\n                    borderRadius: 2,\n                    transition: 'width 0.3s'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 15\n            }, this)]\n          }, project.project_name + '-' + u.user, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this));\n        });\n      }\n      if (isExpanded && usersForProject.length === 0) {\n        projectRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            bgcolor: '#f5f5f5'\n          },\n          children: /*#__PURE__*/_jsxDEV(TableCell, {\n            colSpan: 3,\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"text.secondary\",\n              children: \"No user data for this project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this)\n        }, project.project_name + '-no-users', false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this));\n      }\n    });\n  }\n  const tableRows = viewByUser ? userRows : projectRows;\n\n  // Layout: two widgets side by side, one wide below\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Dashboard (New)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        select: true,\n        value: timeRange,\n        onChange: e => setTimeRange(e.target.value),\n        sx: {\n          minWidth: 200\n        },\n        children: timeRanges.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: option.value,\n          children: option.label\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        gap: 2,\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flex: 1\n        },\n        children: pieWidget\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flex: 1\n        },\n        children: barWidget\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Hours by Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: e => {\n                setMenuAnchorEl(e.currentTarget);\n                setActiveWidget('projectHours');\n              },\n              children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              gap: 2,\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Switch, {\n                checked: viewByUser,\n                onChange: e => setViewByUser(e.target.checked),\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 19\n              }, this),\n              label: viewByUser ? \"View by User\" : \"View by Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Switch, {\n                checked: showProjectPercent,\n                onChange: e => setShowProjectPercent(e.target.checked),\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 19\n              }, this),\n              label: showProjectPercent ? 'Show: % of System Total' : 'Show: Hours'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n            component: Paper,\n            sx: {\n              boxShadow: 'none'\n            },\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              size: \"small\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      fontWeight: 600\n                    },\n                    children: viewByUser ? 'User' : 'Project'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 424,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      fontWeight: 600\n                    },\n                    children: \"Total Hours\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 425,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      fontWeight: 600\n                    },\n                    children: \"Load\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 426,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 423,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: tableRows.length > 0 ? tableRows : /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: /*#__PURE__*/_jsxDEV(TableCell, {\n                    colSpan: 3,\n                    align: \"center\",\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      color: \"text.secondary\",\n                      children: \"No project data available\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 433,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 432,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      anchorEl: menuAnchorEl,\n      open: Boolean(menuAnchorEl),\n      onClose: () => {\n        setMenuAnchorEl(null);\n        setActiveWidget(null);\n      },\n      children: /*#__PURE__*/_jsxDEV(MenuItem, {\n        disabled: true,\n        children: \"Widget settings coming soon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 362,\n    columnNumber: 5\n  }, this);\n}\n_s(DashboardsNew, \"6CF5fPG31Gln0Chue70z7s/LtR4=\");\n_c = DashboardsNew;\nexport default DashboardsNew;\nvar _c;\n$RefreshReg$(_c, \"DashboardsNew\");","map":{"version":3,"names":["React","useState","useEffect","Box","Card","CardContent","Typography","MenuItem","TextField","IconButton","Switch","FormControlLabel","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Menu","PieChart","Pie","Cell","Tooltip","Legend","BarChart","Bar","XAxis","YAxis","CartesianGrid","ResponsiveContainer","MoreVertIcon","AddIcon","RemoveIcon","axios","startOfWeek","startOfMonth","startOfQuarter","startOfYear","format","jsxDEV","_jsxDEV","COLORS","timeRanges","value","label","DashboardsNew","_s","timeRange","setTimeRange","projectData","setProjectData","userData","setUserData","clientTypeData","setClientTypeData","loading","setLoading","error","setError","expandedProjects","setExpandedProjects","showProjectPercent","setShowProjectPercent","viewByUser","setViewByUser","menuAnchorEl","setMenuAnchorEl","activeWidget","setActiveWidget","getDateRange","now","Date","startDate","weekStartsOn","endDate","fetchData","dateParams","projectRes","userRes","clientTypeRes","Promise","all","get","data","err","formatHours","hours","Math","round","pieWidget","children","sx","display","justifyContent","alignItems","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onClick","e","currentTarget","height","length","width","dataKey","nameKey","cx","cy","outerRadius","client_type","total_hours","map","entry","index","fill","formatter","color","barWidget","clientHours","forEach","project","client","client_name","trim","Object","entries","name","margin","top","right","left","bottom","strokeDasharray","users","Array","from","Set","d","user_name","projects","project_name","totalSystemHours","reduce","sum","projectRows","userRows","handleExpandClick","prev","includes","filter","n","user","isExpanded","userProjects","userTotalHours","p","percent","push","fontWeight","size","bgcolor","borderRadius","position","transition","projectPercent","pl","colSpan","align","usersForProject","u","userPercent","tableRows","mb","select","onChange","target","minWidth","option","gap","flex","control","checked","component","boxShadow","anchorEl","open","Boolean","onClose","disabled","_c","$RefreshReg$"],"sources":["C:/Users/golun/TimeTracker/client/src/pages/Dashboards_new.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  MenuItem,\r\n  TextField,\r\n  IconButton,\r\n  Switch,\r\n  FormControlLabel,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Menu,\r\n} from '@mui/material';\r\nimport { PieChart, Pie, Cell, Tooltip, Legend, BarChart, Bar, XAxis, YAxis, CartesianGrid, ResponsiveContainer } from 'recharts';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport RemoveIcon from '@mui/icons-material/Remove';\r\nimport axios from 'axios';\r\nimport { startOfWeek, startOfMonth, startOfQuarter, startOfYear, format } from 'date-fns';\r\n\r\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8'];\r\n\r\nconst timeRanges = [\r\n  { value: 'week', label: 'This Week' },\r\n  { value: 'month', label: 'This Month' },\r\n  { value: 'quarter', label: 'This Quarter' },\r\n  { value: 'year', label: 'This Year' },\r\n  { value: 'all', label: 'All Time' },\r\n];\r\n\r\nfunction DashboardsNew() {\r\n  const [timeRange, setTimeRange] = useState('month');\r\n  const [projectData, setProjectData] = useState([]);\r\n  const [userData, setUserData] = useState([]);\r\n  const [clientTypeData, setClientTypeData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [expandedProjects, setExpandedProjects] = useState([]);\r\n  const [showProjectPercent, setShowProjectPercent] = useState(false);\r\n  const [viewByUser, setViewByUser] = useState(false);\r\n  const [menuAnchorEl, setMenuAnchorEl] = useState(null);\r\n  const [activeWidget, setActiveWidget] = useState(null);\r\n\r\n  const getDateRange = () => {\r\n    const now = new Date();\r\n    let startDate;\r\n    switch (timeRange) {\r\n      case 'week':\r\n        startDate = startOfWeek(now, { weekStartsOn: 1 });\r\n        break;\r\n      case 'month':\r\n        startDate = startOfMonth(now);\r\n        break;\r\n      case 'quarter':\r\n        startDate = startOfQuarter(now);\r\n        break;\r\n      case 'year':\r\n        startDate = startOfYear(now);\r\n        break;\r\n      default:\r\n        startDate = null;\r\n    }\r\n    return {\r\n      startDate: startDate ? format(startDate, 'yyyy-MM-dd') + 'T00:00:00.000Z' : null,\r\n      endDate: format(now, 'yyyy-MM-dd') + 'T23:59:59.999Z',\r\n    };\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const { startDate, endDate } = getDateRange();\r\n      const dateParams = startDate ? `?startDate=${startDate}&endDate=${endDate}` : '';\r\n      const [projectRes, userRes, clientTypeRes] = await Promise.all([\r\n        axios.get(`/api/analytics/time-by-project${dateParams}`),\r\n        axios.get(`/api/analytics/time-by-user${dateParams}`),\r\n        axios.get(`/api/analytics/time-by-client-type${dateParams}`),\r\n      ]);\r\n      setProjectData(projectRes.data);\r\n      setUserData(userRes.data);\r\n      setClientTypeData(clientTypeRes.data);\r\n    } catch (err) {\r\n      setError('Failed to fetch analytics data. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    // eslint-disable-next-line\r\n  }, [timeRange]);\r\n\r\n  const formatHours = (hours) => Math.round(hours * 100) / 100;\r\n\r\n  // Pie Chart: Internal vs External Hours\r\n  const pieWidget = (\r\n    <Card>\r\n      <CardContent>\r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Internal vs External Hours\r\n          </Typography>\r\n          <IconButton onClick={(e) => { setMenuAnchorEl(e.currentTarget); setActiveWidget('clientType'); }}>\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <Box sx={{ height: 300 }}>\r\n          {clientTypeData.length > 0 ? (\r\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n              <PieChart>\r\n                <Pie\r\n                  data={clientTypeData}\r\n                  dataKey=\"total_hours\"\r\n                  nameKey=\"client_type\"\r\n                  cx=\"50%\"\r\n                  cy=\"50%\"\r\n                  outerRadius={100}\r\n                  label={({ client_type, total_hours }) => `${client_type}: ${formatHours(total_hours)}h`}\r\n                >\r\n                  {clientTypeData.map((entry, index) => (\r\n                    <Cell key={entry.client_type} fill={COLORS[index % COLORS.length]} />\r\n                  ))}\r\n                </Pie>\r\n                <Tooltip formatter={(value) => formatHours(value) + ' hours'} />\r\n                <Legend />\r\n              </PieChart>\r\n            </ResponsiveContainer>\r\n          ) : (\r\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100%\">\r\n              <Typography color=\"text.secondary\">No client type data available</Typography>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n\r\n  // Bar Chart: Hours by Client\r\n  const barWidget = (\r\n    <Card>\r\n      <CardContent>\r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Hours by Client\r\n          </Typography>\r\n          <IconButton onClick={(e) => { setMenuAnchorEl(e.currentTarget); setActiveWidget('hoursByClient'); }}>\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <Box sx={{ height: 300 }}>\r\n          {projectData && projectData.length > 0 ? (\r\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n              <BarChart\r\n                data={(() => {\r\n                  const clientHours = {};\r\n                  projectData.forEach(project => {\r\n                    const client = (project.client_name && project.client_name.trim()) || 'Unassigned';\r\n                    clientHours[client] = (clientHours[client] || 0) + project.total_hours;\r\n                  });\r\n                  return Object.entries(clientHours).map(([name, hours]) => ({ name, hours: formatHours(hours) }));\r\n                })()}\r\n                margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\r\n              >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis />\r\n                <Tooltip formatter={value => value + ' hours'} />\r\n                <Legend />\r\n                <Bar dataKey=\"hours\" fill=\"#8884d8\" name=\"Hours\" />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          ) : (\r\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100%\">\r\n              <Typography color=\"text.secondary\">No client data available</Typography>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n\r\n  // Table: Hours by Project/User\r\n  // Prepare users and projects arrays\r\n  const users = Array.from(new Set(userData.map(d => d.user_name)));\r\n  const projects = Array.from(new Set(userData.map(d => d.project_name)));\r\n  const totalSystemHours = projectData.reduce((sum, project) => sum + project.total_hours, 0);\r\n\r\n  // Table rows\r\n  let projectRows = [];\r\n  let userRows = [];\r\n\r\n  const handleExpandClick = (name) => {\r\n    setExpandedProjects((prev) =>\r\n      prev.includes(name)\r\n        ? prev.filter((n) => n !== name)\r\n        : [...prev, name]\r\n    );\r\n  };\r\n\r\n  if (viewByUser) {\r\n    users.forEach(user => {\r\n      const isExpanded = expandedProjects.includes(user);\r\n      const userProjects = userData\r\n        .filter(d => d.user_name === user && d.total_hours > 0)\r\n        .map(d => ({ project: d.project_name, hours: d.total_hours }));\r\n      const userTotalHours = userProjects.reduce((sum, p) => sum + p.hours, 0);\r\n      const percent = totalSystemHours > 0 ? (userTotalHours / totalSystemHours) * 100 : 0;\r\n      userRows.push(\r\n        <TableRow key={user}>\r\n          <TableCell sx={{ fontWeight: 500 }}>\r\n            <IconButton size=\"small\" onClick={() => handleExpandClick(user)}>\r\n              {isExpanded ? <RemoveIcon /> : <AddIcon />}\r\n            </IconButton>\r\n            {user}\r\n          </TableCell>\r\n          <TableCell>\r\n            {showProjectPercent\r\n              ? `${Math.round(percent)}%`\r\n              : `${formatHours(userTotalHours)}h`}\r\n          </TableCell>\r\n          <TableCell>\r\n            <Box sx={{ width: '100%', height: 16, bgcolor: '#e3eafc', borderRadius: 2, position: 'relative' }}>\r\n              <Box\r\n                sx={{\r\n                  width: `${percent}%`,\r\n                  height: '100%',\r\n                  bgcolor: '#1976d2',\r\n                  borderRadius: 2,\r\n                  transition: 'width 0.3s',\r\n                }}\r\n              />\r\n            </Box>\r\n          </TableCell>\r\n        </TableRow>\r\n      );\r\n      if (isExpanded && userProjects.length > 0) {\r\n        userProjects.forEach(p => {\r\n          const projectPercent = (p.hours / userTotalHours) * 100;\r\n          userRows.push(\r\n            <TableRow key={user + '-' + p.project} sx={{ bgcolor: '#f5f5f5' }}>\r\n              <TableCell sx={{ pl: 6 }}>{p.project}</TableCell>\r\n              <TableCell>\r\n                {showProjectPercent\r\n                  ? `${Math.round(projectPercent)}%`\r\n                  : `${formatHours(p.hours)}h`}\r\n              </TableCell>\r\n              <TableCell>\r\n                <Box sx={{ width: '100%', height: 12, bgcolor: '#e3eafc', borderRadius: 2, position: 'relative' }}>\r\n                  <Box\r\n                    sx={{\r\n                      width: `${projectPercent}%`,\r\n                      height: '100%',\r\n                      bgcolor: '#4caf50',\r\n                      borderRadius: 2,\r\n                      transition: 'width 0.3s',\r\n                    }}\r\n                  />\r\n                </Box>\r\n              </TableCell>\r\n            </TableRow>\r\n          );\r\n        });\r\n      }\r\n      if (isExpanded && userProjects.length === 0) {\r\n        userRows.push(\r\n          <TableRow key={user + '-no-projects'} sx={{ bgcolor: '#f5f5f5' }}>\r\n            <TableCell colSpan={3} align=\"center\">\r\n              <Typography color=\"text.secondary\">No project data for this user</Typography>\r\n            </TableCell>\r\n          </TableRow>\r\n        );\r\n      }\r\n    });\r\n  } else {\r\n    projectData.forEach(project => {\r\n      const isExpanded = expandedProjects.includes(project.project_name);\r\n      const usersForProject = userData\r\n        .filter(d => d.project_name === project.project_name && d.total_hours > 0)\r\n        .map(d => ({ user: d.user_name, hours: d.total_hours }));\r\n      const percent = totalSystemHours > 0 ? (project.total_hours / totalSystemHours) * 100 : 0;\r\n      projectRows.push(\r\n        <TableRow key={project.project_name}>\r\n          <TableCell sx={{ fontWeight: 500 }}>\r\n            <IconButton size=\"small\" onClick={() => handleExpandClick(project.project_name)}>\r\n              {isExpanded ? <RemoveIcon /> : <AddIcon />}\r\n            </IconButton>\r\n            {project.project_name}\r\n          </TableCell>\r\n          <TableCell>\r\n            {showProjectPercent\r\n              ? `${Math.round(percent)}%`\r\n              : `${formatHours(project.total_hours)}h`}\r\n          </TableCell>\r\n          <TableCell>\r\n            <Box sx={{ width: '100%', height: 16, bgcolor: '#e3eafc', borderRadius: 2, position: 'relative' }}>\r\n              <Box\r\n                sx={{\r\n                  width: `${percent}%`,\r\n                  height: '100%',\r\n                  bgcolor: '#1976d2',\r\n                  borderRadius: 2,\r\n                  transition: 'width 0.3s',\r\n                }}\r\n              />\r\n            </Box>\r\n          </TableCell>\r\n        </TableRow>\r\n      );\r\n      if (isExpanded && usersForProject.length > 0) {\r\n        usersForProject.forEach(u => {\r\n          const userPercent = (u.hours / project.total_hours) * 100;\r\n          projectRows.push(\r\n            <TableRow key={project.project_name + '-' + u.user} sx={{ bgcolor: '#f5f5f5' }}>\r\n              <TableCell sx={{ pl: 6 }}>{u.user}</TableCell>\r\n              <TableCell>\r\n                {showProjectPercent\r\n                  ? `${Math.round(userPercent)}%`\r\n                  : `${formatHours(u.hours)}h`}\r\n              </TableCell>\r\n              <TableCell>\r\n                <Box sx={{ width: '100%', height: 12, bgcolor: '#e3eafc', borderRadius: 2, position: 'relative' }}>\r\n                  <Box\r\n                    sx={{\r\n                      width: `${userPercent}%`,\r\n                      height: '100%',\r\n                      bgcolor: '#4caf50',\r\n                      borderRadius: 2,\r\n                      transition: 'width 0.3s',\r\n                    }}\r\n                  />\r\n                </Box>\r\n              </TableCell>\r\n            </TableRow>\r\n          );\r\n        });\r\n      }\r\n      if (isExpanded && usersForProject.length === 0) {\r\n        projectRows.push(\r\n          <TableRow key={project.project_name + '-no-users'} sx={{ bgcolor: '#f5f5f5' }}>\r\n            <TableCell colSpan={3} align=\"center\">\r\n              <Typography color=\"text.secondary\">No user data for this project</Typography>\r\n            </TableCell>\r\n          </TableRow>\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  const tableRows = viewByUser ? userRows : projectRows;\r\n\r\n  // Layout: two widgets side by side, one wide below\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 3 }}>\r\n        <Typography variant=\"h4\">Dashboard (New)</Typography>\r\n        <TextField\r\n          select\r\n          value={timeRange}\r\n          onChange={(e) => setTimeRange(e.target.value)}\r\n          sx={{ minWidth: 200 }}\r\n        >\r\n          {timeRanges.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Box>\r\n      {error && (\r\n        <Box sx={{ mb: 2 }}>\r\n          <Typography color=\"error\">{error}</Typography>\r\n        </Box>\r\n      )}\r\n      <Box sx={{ display: 'flex', gap: 2, mb: 2 }}>\r\n        <Box sx={{ flex: 1 }}>{pieWidget}</Box>\r\n        <Box sx={{ flex: 1 }}>{barWidget}</Box>\r\n      </Box>\r\n      <Box>\r\n        <Card>\r\n          <CardContent>\r\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Hours by Project\r\n              </Typography>\r\n              <IconButton onClick={(e) => { setMenuAnchorEl(e.currentTarget); setActiveWidget('projectHours'); }}>\r\n                <MoreVertIcon />\r\n              </IconButton>\r\n            </Box>\r\n            <Box sx={{ display: 'flex', gap: 2, mb: 2 }}>\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch\r\n                    checked={viewByUser}\r\n                    onChange={e => setViewByUser(e.target.checked)}\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label={viewByUser ? \"View by User\" : \"View by Project\"}\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch\r\n                    checked={showProjectPercent}\r\n                    onChange={e => setShowProjectPercent(e.target.checked)}\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label={showProjectPercent ? 'Show: % of System Total' : 'Show: Hours'}\r\n              />\r\n            </Box>\r\n            <TableContainer component={Paper} sx={{ boxShadow: 'none' }}>\r\n              <Table size=\"small\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell sx={{ fontWeight: 600 }}>{viewByUser ? 'User' : 'Project'}</TableCell>\r\n                    <TableCell sx={{ fontWeight: 600 }}>Total Hours</TableCell>\r\n                    <TableCell sx={{ fontWeight: 600 }}>Load</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {tableRows.length > 0 ? tableRows : (\r\n                    <TableRow>\r\n                      <TableCell colSpan={3} align=\"center\">\r\n                        <Typography color=\"text.secondary\">No project data available</Typography>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n      <Menu\r\n        anchorEl={menuAnchorEl}\r\n        open={Boolean(menuAnchorEl)}\r\n        onClose={() => { setMenuAnchorEl(null); setActiveWidget(null); }}\r\n      >\r\n        <MenuItem disabled>Widget settings coming soon</MenuItem>\r\n      </Menu>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default DashboardsNew; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}