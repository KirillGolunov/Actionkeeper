{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\golun\\\\TimeTracker\\\\client\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Card, CardContent, Grid, Typography, MenuItem, TextField, CircularProgress, Alert, Switch, FormControlLabel, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, IconButton, Collapse } from '@mui/material';\nimport { BarChart, Bar, PieChart, Pie, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, HeatMap } from 'recharts';\nimport { startOfWeek, startOfMonth, startOfQuarter, startOfYear, format } from 'date-fns';\nimport axios from 'axios';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8'];\nconst timeRanges = [{\n  value: 'week',\n  label: 'This Week'\n}, {\n  value: 'month',\n  label: 'This Month'\n}, {\n  value: 'quarter',\n  label: 'This Quarter'\n}, {\n  value: 'year',\n  label: 'This Year'\n}, {\n  value: 'all',\n  label: 'All Time'\n}];\nfunction Dashboard() {\n  _s();\n  const [timeRange, setTimeRange] = useState('month');\n  const [projectData, setProjectData] = useState([]);\n  const [userData, setUserData] = useState([]);\n  const [clientTypeData, setClientTypeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showPercent, setShowPercent] = useState(false);\n  const [expandedProjects, setExpandedProjects] = useState([]);\n  const [showProjectPercent, setShowProjectPercent] = useState(false);\n  const [viewByUser, setViewByUser] = useState(false);\n  const getDateRange = () => {\n    const now = new Date();\n    let startDate;\n    switch (timeRange) {\n      case 'week':\n        startDate = startOfWeek(now, {\n          weekStartsOn: 1\n        });\n        break;\n      case 'month':\n        startDate = startOfMonth(now);\n        break;\n      case 'quarter':\n        startDate = startOfQuarter(now);\n        break;\n      case 'year':\n        startDate = startOfYear(now);\n        break;\n      default:\n        startDate = null;\n    }\n    return {\n      startDate: startDate ? format(startDate, 'yyyy-MM-dd') + 'T00:00:00.000Z' : null,\n      endDate: format(now, 'yyyy-MM-dd') + 'T23:59:59.999Z'\n    };\n  };\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const {\n        startDate,\n        endDate\n      } = getDateRange();\n      const dateParams = startDate ? `?startDate=${startDate}&endDate=${endDate}` : '';\n      console.log('Fetching analytics data with params:', {\n        startDate,\n        endDate\n      });\n      const [projectRes, userRes, clientTypeRes] = await Promise.all([axios.get(`/api/analytics/time-by-project${dateParams}`), axios.get(`/api/analytics/time-by-user${dateParams}`), axios.get(`/api/analytics/time-by-client-type${dateParams}`)]);\n      console.log('Project data:', projectRes.data);\n      console.log('User data:', userRes.data);\n      console.log('Client type data:', clientTypeRes.data);\n      setProjectData(projectRes.data);\n      setUserData(userRes.data);\n      setClientTypeData(clientTypeRes.data);\n    } catch (err) {\n      console.error('Error fetching analytics:', err);\n      setError('Failed to fetch analytics data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, [timeRange]);\n  const formatHours = hours => {\n    return Math.round(hours * 100) / 100;\n  };\n\n  // Prepare users and projects arrays first so they are available for all calculations\n  const users = Array.from(new Set(userData.map(d => d.user_name)));\n  const projects = Array.from(new Set(userData.map(d => d.project_name)));\n\n  // Helper: count weekdays between two dates (inclusive)\n  function countWeekdays(start, end) {\n    let count = 0;\n    let current = new Date(start);\n    while (current <= end) {\n      const day = current.getDay();\n      if (day !== 0 && day !== 6) count++;\n      current.setDate(current.getDate() + 1);\n    }\n    return count;\n  }\n\n  // Calculate period start/end\n  const now = new Date();\n  let periodStart, periodEnd;\n  switch (timeRange) {\n    case 'week':\n      periodStart = startOfWeek(now);\n      periodEnd = now;\n      break;\n    case 'month':\n      periodStart = startOfMonth(now);\n      periodEnd = now;\n      break;\n    case 'quarter':\n      periodStart = startOfQuarter(now);\n      periodEnd = now;\n      break;\n    case 'year':\n      periodStart = startOfYear(now);\n      periodEnd = now;\n      break;\n    case 'all':\n    default:\n      // Use earliest and latest date in userData\n      const allDates = userData.map(d => new Date(d.start_time)).filter(Boolean);\n      periodStart = allDates.length ? new Date(Math.min(...allDates)) : now;\n      periodEnd = allDates.length ? new Date(Math.max(...allDates)) : now;\n      break;\n  }\n  const weekdays = countWeekdays(periodStart, periodEnd);\n  const userCapacity = users.map(() => weekdays * 8);\n  // Calculate total hours logged per user in the period\n  const userLogged = users.map(user => userData.filter(d => d.user_name === user).reduce((sum, d) => sum + d.total_hours, 0));\n  const userAvailable = userCapacity.map((cap, i) => Math.max(0, cap - userLogged[i]));\n\n  // Calculate total system hours across all projects\n  const totalSystemHours = projectData.reduce((sum, project) => sum + project.total_hours, 0);\n\n  // Build a matrix: rows = projects, cols = users\n  const heatMapData = [userAvailable,\n  // Capacity row\n  userLogged,\n  // Total load row\n  ...projects.map(project => users.map(user => {\n    const found = userData.find(d => d.user_name === user && d.project_name === project);\n    return found ? found.total_hours : 0;\n  }))];\n  const allProjectsWithCapacity = ['Capacity', 'Total load', ...projects];\n\n  // Set column width for heatmap (wider for wrapped names)\n  const colWidth = 100;\n  const cellWidth = 95;\n  const cellHeight = 35;\n  const xOffset = 100;\n  const yOffset = 60;\n  const heatmapRows = allProjectsWithCapacity.length;\n  const heatmapHeight = heatmapRows * cellHeight + yOffset + 40; // 40 for header padding\n\n  const handleExpandClick = projectName => {\n    setExpandedProjects(prev => prev.includes(projectName) ? prev.filter(name => name !== projectName) : [...prev, projectName]);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"60vh\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        select: true,\n        value: timeRange,\n        onChange: e => setTimeRange(e.target.value),\n        sx: {\n          minWidth: 200\n        },\n        children: timeRanges.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: option.value,\n          children: option.label\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Hours by Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                gap: 2,\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Switch, {\n                  checked: viewByUser,\n                  onChange: e => setViewByUser(e.target.checked),\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 21\n                }, this),\n                label: viewByUser ? \"View by User\" : \"View by Project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Switch, {\n                  checked: showProjectPercent,\n                  onChange: e => setShowProjectPercent(e.target.checked),\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 21\n                }, this),\n                label: showProjectPercent ? 'Show: % of System Total' : 'Show: Hours'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n              component: Paper,\n              sx: {\n                boxShadow: 'none'\n              },\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                size: \"small\",\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      sx: {\n                        fontWeight: 600\n                      },\n                      children: \"Project\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 281,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      sx: {\n                        fontWeight: 600\n                      },\n                      children: \"Total Hours\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 282,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      sx: {\n                        fontWeight: 600\n                      },\n                      children: \"Load\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 283,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: viewByUser ?\n                  // User-centric view\n                  (() => {\n                    const users = Array.from(new Set(userData.map(d => d.user_name)));\n                    return users.flatMap(user => {\n                      const isExpanded = expandedProjects.includes(user);\n                      const userProjects = userData.filter(d => d.user_name === user && d.total_hours > 0).map(d => ({\n                        project: d.project_name,\n                        hours: d.total_hours\n                      }));\n                      const userTotalHours = userProjects.reduce((sum, p) => sum + p.hours, 0);\n                      const percent = totalSystemHours > 0 ? userTotalHours / totalSystemHours * 100 : 0;\n                      return [/*#__PURE__*/_jsxDEV(TableRow, {\n                        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                          sx: {\n                            fontWeight: 500\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                            size: \"small\",\n                            onClick: () => handleExpandClick(user),\n                            children: isExpanded ? /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 302,\n                              columnNumber: 49\n                            }, this) : /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 302,\n                              columnNumber: 66\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 301,\n                            columnNumber: 33\n                          }, this), user]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 300,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          children: showProjectPercent ? `${Math.round(percent)}%` : `${formatHours(userTotalHours)}h`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 306,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          children: /*#__PURE__*/_jsxDEV(Box, {\n                            sx: {\n                              width: '100%',\n                              height: 16,\n                              bgcolor: '#e3eafc',\n                              borderRadius: 2,\n                              position: 'relative'\n                            },\n                            children: /*#__PURE__*/_jsxDEV(Box, {\n                              sx: {\n                                width: `${percent}%`,\n                                height: '100%',\n                                bgcolor: '#1976d2',\n                                borderRadius: 2,\n                                transition: 'width 0.3s'\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 313,\n                              columnNumber: 35\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 312,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 311,\n                          columnNumber: 31\n                        }, this)]\n                      }, user, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 299,\n                        columnNumber: 29\n                      }, this), isExpanded && userProjects.length > 0 && userProjects.map(p => {\n                        const projectPercent = p.hours / userTotalHours * 100;\n                        return /*#__PURE__*/_jsxDEV(TableRow, {\n                          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                            sx: {\n                              pl: 6\n                            },\n                            children: p.project\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 329,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                            children: showProjectPercent ? `${Math.round(projectPercent)}%` : `${formatHours(p.hours)}h`\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 330,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                            children: /*#__PURE__*/_jsxDEV(Box, {\n                              sx: {\n                                width: '100%',\n                                height: 12,\n                                bgcolor: '#e3eafc',\n                                borderRadius: 2,\n                                position: 'relative'\n                              },\n                              children: /*#__PURE__*/_jsxDEV(Box, {\n                                sx: {\n                                  width: `${projectPercent}%`,\n                                  height: '100%',\n                                  bgcolor: '#1976d2',\n                                  borderRadius: 2,\n                                  transition: 'width 0.3s'\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 337,\n                                columnNumber: 39\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 336,\n                              columnNumber: 37\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 335,\n                            columnNumber: 35\n                          }, this)]\n                        }, user + '-' + p.project, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 328,\n                          columnNumber: 33\n                        }, this);\n                      })];\n                    });\n                  })() :\n                  // Project-centric view (existing code)\n                  projectData.length > 0 ? (() => {\n                    return projectData.flatMap(project => {\n                      const isExpanded = expandedProjects.includes(project.project_name);\n                      // Get user breakdown for this project\n                      const usersForProject = userData.filter(d => d.project_name === project.project_name && d.total_hours > 0).map(d => ({\n                        user: d.user_name,\n                        hours: d.total_hours\n                      }));\n                      const maxUserHours = Math.max(...usersForProject.map(u => u.hours), 1);\n                      // For percent mode\n                      const percent = totalSystemHours > 0 ? project.total_hours / totalSystemHours * 100 : 0;\n                      return [/*#__PURE__*/_jsxDEV(TableRow, {\n                        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                          sx: {\n                            fontWeight: 500\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                            size: \"small\",\n                            onClick: () => handleExpandClick(project.project_name),\n                            children: isExpanded ? /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 371,\n                              columnNumber: 51\n                            }, this) : /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 371,\n                              columnNumber: 68\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 370,\n                            columnNumber: 35\n                          }, this), project.project_name]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 369,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          children: showProjectPercent ? `${Math.round(percent)}%` : `${formatHours(project.total_hours)}h`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 375,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          children: /*#__PURE__*/_jsxDEV(Box, {\n                            sx: {\n                              width: '100%',\n                              height: 16,\n                              bgcolor: '#e3eafc',\n                              borderRadius: 2,\n                              position: 'relative'\n                            },\n                            children: /*#__PURE__*/_jsxDEV(Box, {\n                              sx: {\n                                width: `${percent}%`,\n                                height: '100%',\n                                bgcolor: '#1976d2',\n                                borderRadius: 2,\n                                transition: 'width 0.3s'\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 382,\n                              columnNumber: 37\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 381,\n                            columnNumber: 35\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 380,\n                          columnNumber: 33\n                        }, this)]\n                      }, project.project_name, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 368,\n                        columnNumber: 31\n                      }, this), isExpanded && usersForProject.length > 0 && usersForProject.map(u => {\n                        const userPercent = u.hours / project.total_hours * 100;\n                        return /*#__PURE__*/_jsxDEV(TableRow, {\n                          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                            sx: {\n                              pl: 6\n                            },\n                            children: u.user\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 398,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                            children: showProjectPercent ? `${Math.round(userPercent)}%` : `${formatHours(u.hours)}h`\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 399,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                            children: /*#__PURE__*/_jsxDEV(Box, {\n                              sx: {\n                                width: '100%',\n                                height: 12,\n                                bgcolor: '#e3eafc',\n                                borderRadius: 2,\n                                position: 'relative'\n                              },\n                              children: /*#__PURE__*/_jsxDEV(Box, {\n                                sx: {\n                                  width: `${userPercent}%`,\n                                  height: '100%',\n                                  bgcolor: '#1976d2',\n                                  borderRadius: 2,\n                                  transition: 'width 0.3s'\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 406,\n                                columnNumber: 41\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 405,\n                              columnNumber: 39\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 404,\n                            columnNumber: 37\n                          }, this)]\n                        }, project.project_name + '-' + u.user, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 397,\n                          columnNumber: 35\n                        }, this);\n                      })];\n                    });\n                  })() : /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: /*#__PURE__*/_jsxDEV(TableCell, {\n                      colSpan: 3,\n                      align: \"center\",\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        color: \"text.secondary\",\n                        children: \"No project data available\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 426,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 425,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 424,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Internal vs External Hours\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                height: 300\n              },\n              children: clientTypeData.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                children: /*#__PURE__*/_jsxDEV(PieChart, {\n                  children: [/*#__PURE__*/_jsxDEV(Pie, {\n                    data: clientTypeData,\n                    dataKey: \"total_hours\",\n                    nameKey: \"client_type\",\n                    cx: \"50%\",\n                    cy: \"50%\",\n                    outerRadius: 100,\n                    label: ({\n                      client_type,\n                      total_hours\n                    }) => `${client_type}: ${formatHours(total_hours)}h`,\n                    children: clientTypeData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                      fill: COLORS[index % COLORS.length]\n                    }, entry.client_type, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 461,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 449,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    formatter: value => formatHours(value) + ' hours'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 464,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 465,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                height: \"100%\",\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  color: \"text.secondary\",\n                  children: \"No client type data available\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 470,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Hours by Client\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                height: 300\n              },\n              children: projectData && projectData.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                children: /*#__PURE__*/_jsxDEV(BarChart, {\n                  data: (() => {\n                    const clientData = projectData.reduce((acc, project) => {\n                      const clientName = project.client_name || 'Unassigned';\n                      const existingClient = acc.find(c => c.name === clientName);\n                      if (existingClient) {\n                        existingClient.hours += project.total_hours;\n                      } else {\n                        acc.push({\n                          name: clientName,\n                          hours: project.total_hours\n                        });\n                      }\n                      return acc;\n                    }, []);\n                    console.log('Client Data:', clientData);\n                    return clientData;\n                  })(),\n                  margin: {\n                    top: 20,\n                    right: 30,\n                    left: 20,\n                    bottom: 5\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                    strokeDasharray: \"3 3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 505,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                    dataKey: \"name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 506,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 507,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    formatter: value => formatHours(value) + ' hours'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 508,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 509,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                    dataKey: \"hours\",\n                    fill: \"#8884d8\",\n                    name: \"Hours\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 510,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                height: \"100%\",\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  color: \"text.secondary\",\n                  children: \"No client data available\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 515,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 514,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"G1goW1lS/Fp/Ud/42176lDpiqXk=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Box","Card","CardContent","Grid","Typography","MenuItem","TextField","CircularProgress","Alert","Switch","FormControlLabel","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","IconButton","Collapse","BarChart","Bar","PieChart","Pie","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","HeatMap","startOfWeek","startOfMonth","startOfQuarter","startOfYear","format","axios","AddIcon","RemoveIcon","jsxDEV","_jsxDEV","COLORS","timeRanges","value","label","Dashboard","_s","timeRange","setTimeRange","projectData","setProjectData","userData","setUserData","clientTypeData","setClientTypeData","loading","setLoading","error","setError","showPercent","setShowPercent","expandedProjects","setExpandedProjects","showProjectPercent","setShowProjectPercent","viewByUser","setViewByUser","getDateRange","now","Date","startDate","weekStartsOn","endDate","fetchData","dateParams","console","log","projectRes","userRes","clientTypeRes","Promise","all","get","data","err","formatHours","hours","Math","round","users","Array","from","Set","map","d","user_name","projects","project_name","countWeekdays","start","end","count","current","day","getDay","setDate","getDate","periodStart","periodEnd","allDates","start_time","filter","Boolean","length","min","max","weekdays","userCapacity","userLogged","user","reduce","sum","total_hours","userAvailable","cap","i","totalSystemHours","project","heatMapData","found","find","allProjectsWithCapacity","colWidth","cellWidth","cellHeight","xOffset","yOffset","heatmapRows","heatmapHeight","handleExpandClick","projectName","prev","includes","name","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","mb","variant","select","onChange","e","target","minWidth","option","severity","container","spacing","item","xs","md","gutterBottom","gap","control","checked","color","component","boxShadow","size","fontWeight","flatMap","isExpanded","userProjects","userTotalHours","p","percent","onClick","width","height","bgcolor","borderRadius","position","transition","projectPercent","pl","usersForProject","maxUserHours","u","userPercent","colSpan","align","dataKey","nameKey","cx","cy","outerRadius","client_type","entry","index","fill","formatter","clientData","acc","clientName","client_name","existingClient","c","push","margin","top","right","left","bottom","strokeDasharray","_c","$RefreshReg$"],"sources":["C:/Users/golun/TimeTracker/client/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  MenuItem,\n  TextField,\n  CircularProgress,\n  Alert,\n  Switch,\n  FormControlLabel,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  IconButton,\n  Collapse,\n} from '@mui/material';\nimport {\n  BarChart,\n  Bar,\n  PieChart,\n  Pie,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  HeatMap,\n} from 'recharts';\nimport { startOfWeek, startOfMonth, startOfQuarter, startOfYear, format } from 'date-fns';\nimport axios from 'axios';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8'];\n\nconst timeRanges = [\n  { value: 'week', label: 'This Week' },\n  { value: 'month', label: 'This Month' },\n  { value: 'quarter', label: 'This Quarter' },\n  { value: 'year', label: 'This Year' },\n  { value: 'all', label: 'All Time' },\n];\n\nfunction Dashboard() {\n  const [timeRange, setTimeRange] = useState('month');\n  const [projectData, setProjectData] = useState([]);\n  const [userData, setUserData] = useState([]);\n  const [clientTypeData, setClientTypeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showPercent, setShowPercent] = useState(false);\n  const [expandedProjects, setExpandedProjects] = useState([]);\n  const [showProjectPercent, setShowProjectPercent] = useState(false);\n  const [viewByUser, setViewByUser] = useState(false);\n\n  const getDateRange = () => {\n    const now = new Date();\n    let startDate;\n\n    switch (timeRange) {\n      case 'week':\n        startDate = startOfWeek(now, { weekStartsOn: 1 });\n        break;\n      case 'month':\n        startDate = startOfMonth(now);\n        break;\n      case 'quarter':\n        startDate = startOfQuarter(now);\n        break;\n      case 'year':\n        startDate = startOfYear(now);\n        break;\n      default:\n        startDate = null;\n    }\n\n    return {\n      startDate: startDate ? format(startDate, 'yyyy-MM-dd') + 'T00:00:00.000Z' : null,\n      endDate: format(now, 'yyyy-MM-dd') + 'T23:59:59.999Z',\n    };\n  };\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const { startDate, endDate } = getDateRange();\n      const dateParams = startDate ? `?startDate=${startDate}&endDate=${endDate}` : '';\n\n      console.log('Fetching analytics data with params:', { startDate, endDate });\n\n      const [projectRes, userRes, clientTypeRes] = await Promise.all([\n        axios.get(`/api/analytics/time-by-project${dateParams}`),\n        axios.get(`/api/analytics/time-by-user${dateParams}`),\n        axios.get(`/api/analytics/time-by-client-type${dateParams}`),\n      ]);\n\n      console.log('Project data:', projectRes.data);\n      console.log('User data:', userRes.data);\n      console.log('Client type data:', clientTypeRes.data);\n\n      setProjectData(projectRes.data);\n      setUserData(userRes.data);\n      setClientTypeData(clientTypeRes.data);\n    } catch (err) {\n      console.error('Error fetching analytics:', err);\n      setError('Failed to fetch analytics data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [timeRange]);\n\n  const formatHours = (hours) => {\n    return Math.round(hours * 100) / 100;\n  };\n\n  // Prepare users and projects arrays first so they are available for all calculations\n  const users = Array.from(new Set(userData.map(d => d.user_name)));\n  const projects = Array.from(new Set(userData.map(d => d.project_name)));\n\n  // Helper: count weekdays between two dates (inclusive)\n  function countWeekdays(start, end) {\n    let count = 0;\n    let current = new Date(start);\n    while (current <= end) {\n      const day = current.getDay();\n      if (day !== 0 && day !== 6) count++;\n      current.setDate(current.getDate() + 1);\n    }\n    return count;\n  }\n\n  // Calculate period start/end\n  const now = new Date();\n  let periodStart, periodEnd;\n  switch (timeRange) {\n    case 'week':\n      periodStart = startOfWeek(now);\n      periodEnd = now;\n      break;\n    case 'month':\n      periodStart = startOfMonth(now);\n      periodEnd = now;\n      break;\n    case 'quarter':\n      periodStart = startOfQuarter(now);\n      periodEnd = now;\n      break;\n    case 'year':\n      periodStart = startOfYear(now);\n      periodEnd = now;\n      break;\n    case 'all':\n    default:\n      // Use earliest and latest date in userData\n      const allDates = userData.map(d => new Date(d.start_time)).filter(Boolean);\n      periodStart = allDates.length ? new Date(Math.min(...allDates)) : now;\n      periodEnd = allDates.length ? new Date(Math.max(...allDates)) : now;\n      break;\n  }\n  const weekdays = countWeekdays(periodStart, periodEnd);\n  const userCapacity = users.map(() => weekdays * 8);\n  // Calculate total hours logged per user in the period\n  const userLogged = users.map(user =>\n    userData.filter(d => d.user_name === user).reduce((sum, d) => sum + d.total_hours, 0)\n  );\n  const userAvailable = userCapacity.map((cap, i) => Math.max(0, cap - userLogged[i]));\n\n  // Calculate total system hours across all projects\n  const totalSystemHours = projectData.reduce((sum, project) => sum + project.total_hours, 0);\n\n  // Build a matrix: rows = projects, cols = users\n  const heatMapData = [\n    userAvailable, // Capacity row\n    userLogged,   // Total load row\n    ...projects.map(project =>\n      users.map(user => {\n        const found = userData.find(d => d.user_name === user && d.project_name === project);\n        return found ? found.total_hours : 0;\n      })\n    )\n  ];\n  const allProjectsWithCapacity = ['Capacity', 'Total load', ...projects];\n\n  // Set column width for heatmap (wider for wrapped names)\n  const colWidth = 100;\n  const cellWidth = 95;\n  const cellHeight = 35;\n  const xOffset = 100;\n  const yOffset = 60;\n  const heatmapRows = allProjectsWithCapacity.length;\n  const heatmapHeight = heatmapRows * cellHeight + yOffset + 40; // 40 for header padding\n\n  const handleExpandClick = (projectName) => {\n    setExpandedProjects((prev) =>\n      prev.includes(projectName)\n        ? prev.filter((name) => name !== projectName)\n        : [...prev, projectName]\n    );\n  };\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"60vh\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  return (\n    <Box>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 3 }}>\n        <Typography variant=\"h4\">Dashboard</Typography>\n        <TextField\n          select\n          value={timeRange}\n          onChange={(e) => setTimeRange(e.target.value)}\n          sx={{ minWidth: 200 }}\n        >\n          {timeRanges.map((option) => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n      </Box>\n\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\n          {error}\n        </Alert>\n      )}\n\n      <Grid container spacing={3}>\n        {/* Project Hours (Table) */}\n        <Grid item xs={12} md={6}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Hours by Project\n              </Typography>\n              <Box sx={{ display: 'flex', gap: 2, mb: 2 }}>\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={viewByUser}\n                      onChange={e => setViewByUser(e.target.checked)}\n                      color=\"primary\"\n                    />\n                  }\n                  label={viewByUser ? \"View by User\" : \"View by Project\"}\n                />\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={showProjectPercent}\n                      onChange={e => setShowProjectPercent(e.target.checked)}\n                      color=\"primary\"\n                    />\n                  }\n                  label={showProjectPercent ? 'Show: % of System Total' : 'Show: Hours'}\n                />\n              </Box>\n              <TableContainer component={Paper} sx={{ boxShadow: 'none' }}>\n                <Table size=\"small\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell sx={{ fontWeight: 600 }}>Project</TableCell>\n                      <TableCell sx={{ fontWeight: 600 }}>Total Hours</TableCell>\n                      <TableCell sx={{ fontWeight: 600 }}>Load</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {viewByUser ? (\n                      // User-centric view\n                      (() => {\n                        const users = Array.from(new Set(userData.map(d => d.user_name)));\n                        return users.flatMap((user) => {\n                          const isExpanded = expandedProjects.includes(user);\n                          const userProjects = userData\n                            .filter(d => d.user_name === user && d.total_hours > 0)\n                            .map(d => ({ project: d.project_name, hours: d.total_hours }));\n                          const userTotalHours = userProjects.reduce((sum, p) => sum + p.hours, 0);\n                          const percent = totalSystemHours > 0 ? (userTotalHours / totalSystemHours) * 100 : 0;\n                          return [\n                            <TableRow key={user}>\n                              <TableCell sx={{ fontWeight: 500 }}>\n                                <IconButton size=\"small\" onClick={() => handleExpandClick(user)}>\n                                  {isExpanded ? <RemoveIcon /> : <AddIcon />}\n                                </IconButton>\n                                {user}\n                              </TableCell>\n                              <TableCell>\n                                {showProjectPercent\n                                  ? `${Math.round(percent)}%`\n                                  : `${formatHours(userTotalHours)}h`}\n                              </TableCell>\n                              <TableCell>\n                                <Box sx={{ width: '100%', height: 16, bgcolor: '#e3eafc', borderRadius: 2, position: 'relative' }}>\n                                  <Box\n                                    sx={{\n                                      width: `${percent}%`,\n                                      height: '100%',\n                                      bgcolor: '#1976d2',\n                                      borderRadius: 2,\n                                      transition: 'width 0.3s',\n                                    }}\n                                  />\n                                </Box>\n                              </TableCell>\n                            </TableRow>,\n                            isExpanded && userProjects.length > 0 && userProjects.map((p) => {\n                              const projectPercent = (p.hours / userTotalHours) * 100;\n                              return (\n                                <TableRow key={user + '-' + p.project}>\n                                  <TableCell sx={{ pl: 6 }}>{p.project}</TableCell>\n                                  <TableCell>\n                                    {showProjectPercent\n                                      ? `${Math.round(projectPercent)}%`\n                                      : `${formatHours(p.hours)}h`}\n                                  </TableCell>\n                                  <TableCell>\n                                    <Box sx={{ width: '100%', height: 12, bgcolor: '#e3eafc', borderRadius: 2, position: 'relative' }}>\n                                      <Box\n                                        sx={{\n                                          width: `${projectPercent}%`,\n                                          height: '100%',\n                                          bgcolor: '#1976d2',\n                                          borderRadius: 2,\n                                          transition: 'width 0.3s',\n                                        }}\n                                      />\n                                    </Box>\n                                  </TableCell>\n                                </TableRow>\n                              );\n                            })\n                          ];\n                        });\n                      })()\n                    ) : (\n                      // Project-centric view (existing code)\n                      projectData.length > 0 ? (\n                        (() => {\n                          return projectData.flatMap((project) => {\n                            const isExpanded = expandedProjects.includes(project.project_name);\n                            // Get user breakdown for this project\n                            const usersForProject = userData\n                              .filter(d => d.project_name === project.project_name && d.total_hours > 0)\n                              .map(d => ({ user: d.user_name, hours: d.total_hours }));\n                            const maxUserHours = Math.max(...usersForProject.map(u => u.hours), 1);\n                            // For percent mode\n                            const percent = totalSystemHours > 0 ? (project.total_hours / totalSystemHours) * 100 : 0;\n                            return [\n                              <TableRow key={project.project_name}>\n                                <TableCell sx={{ fontWeight: 500 }}>\n                                  <IconButton size=\"small\" onClick={() => handleExpandClick(project.project_name)}>\n                                    {isExpanded ? <RemoveIcon /> : <AddIcon />}\n                                  </IconButton>\n                                  {project.project_name}\n                                </TableCell>\n                                <TableCell>\n                                  {showProjectPercent\n                                    ? `${Math.round(percent)}%`\n                                    : `${formatHours(project.total_hours)}h`}\n                                </TableCell>\n                                <TableCell>\n                                  <Box sx={{ width: '100%', height: 16, bgcolor: '#e3eafc', borderRadius: 2, position: 'relative' }}>\n                                    <Box\n                                      sx={{\n                                        width: `${percent}%`,\n                                        height: '100%',\n                                        bgcolor: '#1976d2',\n                                        borderRadius: 2,\n                                        transition: 'width 0.3s',\n                                      }}\n                                    />\n                                  </Box>\n                                </TableCell>\n                              </TableRow>,\n                              isExpanded && usersForProject.length > 0 && usersForProject.map((u) => {\n                                const userPercent = (u.hours / project.total_hours) * 100;\n                                return (\n                                  <TableRow key={project.project_name + '-' + u.user}>\n                                    <TableCell sx={{ pl: 6 }}>{u.user}</TableCell>\n                                    <TableCell>\n                                      {showProjectPercent\n                                        ? `${Math.round(userPercent)}%`\n                                        : `${formatHours(u.hours)}h`}\n                                    </TableCell>\n                                    <TableCell>\n                                      <Box sx={{ width: '100%', height: 12, bgcolor: '#e3eafc', borderRadius: 2, position: 'relative' }}>\n                                        <Box\n                                          sx={{\n                                            width: `${userPercent}%`,\n                                            height: '100%',\n                                            bgcolor: '#1976d2',\n                                            borderRadius: 2,\n                                            transition: 'width 0.3s',\n                                          }}\n                                        />\n                                      </Box>\n                                    </TableCell>\n                                  </TableRow>\n                                );\n                              })\n                            ];\n                          });\n                        })()\n                      ) : (\n                        <TableRow>\n                          <TableCell colSpan={3} align=\"center\">\n                            <Typography color=\"text.secondary\">No project data available</Typography>\n                          </TableCell>\n                        </TableRow>\n                      )\n                    )}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Client Type Distribution */}\n        <Grid item xs={12} md={6}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Internal vs External Hours\n              </Typography>\n              <Box sx={{ height: 300 }}>\n                {clientTypeData.length > 0 ? (\n                  <ResponsiveContainer>\n                    <PieChart>\n                      <Pie\n                        data={clientTypeData}\n                        dataKey=\"total_hours\"\n                        nameKey=\"client_type\"\n                        cx=\"50%\"\n                        cy=\"50%\"\n                        outerRadius={100}\n                        label={({ client_type, total_hours }) => \n                          `${client_type}: ${formatHours(total_hours)}h`\n                        }\n                      >\n                        {clientTypeData.map((entry, index) => (\n                          <Cell key={entry.client_type} fill={COLORS[index % COLORS.length]} />\n                        ))}\n                      </Pie>\n                      <Tooltip formatter={(value) => formatHours(value) + ' hours'} />\n                      <Legend />\n                    </PieChart>\n                  </ResponsiveContainer>\n                ) : (\n                  <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100%\">\n                    <Typography color=\"text.secondary\">No client type data available</Typography>\n                  </Box>\n                )}\n              </Box>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Hours by Client */}\n        <Grid item xs={12} md={6}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Hours by Client\n              </Typography>\n              <Box sx={{ height: 300 }}>\n                {projectData && projectData.length > 0 ? (\n                  <ResponsiveContainer>\n                    <BarChart\n                      data={(() => {\n                        const clientData = projectData.reduce((acc, project) => {\n                          const clientName = project.client_name || 'Unassigned';\n                          const existingClient = acc.find(c => c.name === clientName);\n                          if (existingClient) {\n                            existingClient.hours += project.total_hours;\n                          } else {\n                            acc.push({ name: clientName, hours: project.total_hours });\n                          }\n                          return acc;\n                        }, []);\n                        console.log('Client Data:', clientData);\n                        return clientData;\n                      })()}\n                      margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n                    >\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey=\"name\" />\n                      <YAxis />\n                      <Tooltip formatter={(value) => formatHours(value) + ' hours'} />\n                      <Legend />\n                      <Bar dataKey=\"hours\" fill=\"#8884d8\" name=\"Hours\" />\n                    </BarChart>\n                  </ResponsiveContainer>\n                ) : (\n                  <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100%\">\n                    <Typography color=\"text.secondary\">No client data available</Typography>\n                  </Box>\n                )}\n              </Box>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}