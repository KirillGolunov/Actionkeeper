{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\golun\\\\TimeTracker\\\\client\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Card, CardContent, Typography, MenuItem, TextField, CircularProgress, Alert, Switch, FormControlLabel, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, IconButton, Collapse, Menu } from '@mui/material';\nimport { BarChart, Bar, PieChart, Pie, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, HeatMap } from 'recharts';\nimport { startOfWeek, startOfMonth, startOfQuarter, startOfYear, format } from 'date-fns';\nimport axios from 'axios';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport { Responsive, WidthProvider } from 'react-grid-layout';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8'];\nconst timeRanges = [{\n  value: 'week',\n  label: 'This Week'\n}, {\n  value: 'month',\n  label: 'This Month'\n}, {\n  value: 'quarter',\n  label: 'This Quarter'\n}, {\n  value: 'year',\n  label: 'This Year'\n}, {\n  value: 'all',\n  label: 'All Time'\n}];\nconst ResponsiveGridLayout = WidthProvider(Responsive);\n_c = ResponsiveGridLayout;\nconst WIDGET_SIZES = {\n  SMALL: {\n    w: 6,\n    h: 6\n  },\n  WIDE: {\n    w: 12,\n    h: 6\n  }\n};\nfunction Dashboard() {\n  _s();\n  const [timeRange, setTimeRange] = useState('month');\n  const [projectData, setProjectData] = useState([]);\n  const [userData, setUserData] = useState([]);\n  const [clientTypeData, setClientTypeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showPercent, setShowPercent] = useState(false);\n  const [expandedProjects, setExpandedProjects] = useState([]);\n  const [showProjectPercent, setShowProjectPercent] = useState(false);\n  const [viewByUser, setViewByUser] = useState(false);\n  const [widgetSizes, setWidgetSizes] = useState({\n    projectHours: WIDGET_SIZES.SMALL,\n    clientType: WIDGET_SIZES.SMALL,\n    hoursByClient: WIDGET_SIZES.WIDE\n  });\n  const [menuAnchorEl, setMenuAnchorEl] = useState(null);\n  const [activeWidget, setActiveWidget] = useState(null);\n  const handleMenuClick = (event, widgetId) => {\n    setMenuAnchorEl(event.currentTarget);\n    setActiveWidget(widgetId);\n  };\n  const handleMenuClose = () => {\n    setMenuAnchorEl(null);\n    setActiveWidget(null);\n  };\n  const handleSizeChange = size => {\n    setWidgetSizes(prev => ({\n      ...prev,\n      [activeWidget]: size\n    }));\n    handleMenuClose();\n  };\n  const getLayouts = () => {\n    return {\n      lg: [{\n        i: 'projectHours',\n        x: 0,\n        y: 0,\n        ...widgetSizes.projectHours\n      }, {\n        i: 'clientType',\n        x: widgetSizes.projectHours.w,\n        y: 0,\n        ...widgetSizes.clientType\n      }, {\n        i: 'hoursByClient',\n        x: 0,\n        y: 6,\n        ...widgetSizes.hoursByClient\n      }]\n    };\n  };\n  const WidgetMenu = () => /*#__PURE__*/_jsxDEV(Menu, {\n    anchorEl: menuAnchorEl,\n    open: Boolean(menuAnchorEl),\n    onClose: handleMenuClose,\n    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n      onClick: () => handleSizeChange(WIDGET_SIZES.SMALL),\n      children: \"Small (Half Width)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      onClick: () => handleSizeChange(WIDGET_SIZES.WIDE),\n      children: \"Wide (Full Width)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n  const getDateRange = () => {\n    const now = new Date();\n    let startDate;\n    switch (timeRange) {\n      case 'week':\n        startDate = startOfWeek(now, {\n          weekStartsOn: 1\n        });\n        break;\n      case 'month':\n        startDate = startOfMonth(now);\n        break;\n      case 'quarter':\n        startDate = startOfQuarter(now);\n        break;\n      case 'year':\n        startDate = startOfYear(now);\n        break;\n      default:\n        startDate = null;\n    }\n    return {\n      startDate: startDate ? format(startDate, 'yyyy-MM-dd') + 'T00:00:00.000Z' : null,\n      endDate: format(now, 'yyyy-MM-dd') + 'T23:59:59.999Z'\n    };\n  };\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const {\n        startDate,\n        endDate\n      } = getDateRange();\n      const dateParams = startDate ? `?startDate=${startDate}&endDate=${endDate}` : '';\n      console.log('Fetching analytics data with params:', {\n        startDate,\n        endDate\n      });\n      const [projectRes, userRes, clientTypeRes] = await Promise.all([axios.get(`/api/analytics/time-by-project${dateParams}`), axios.get(`/api/analytics/time-by-user${dateParams}`), axios.get(`/api/analytics/time-by-client-type${dateParams}`)]);\n      console.log('Project data:', projectRes.data);\n      console.log('User data:', userRes.data);\n      console.log('Client type data:', clientTypeRes.data);\n      setProjectData(projectRes.data);\n      setUserData(userRes.data);\n      setClientTypeData(clientTypeRes.data);\n    } catch (err) {\n      console.error('Error fetching analytics:', err);\n      setError('Failed to fetch analytics data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, [timeRange]);\n  const formatHours = hours => {\n    return Math.round(hours * 100) / 100;\n  };\n\n  // Prepare users and projects arrays first so they are available for all calculations\n  const users = Array.from(new Set(userData.map(d => d.user_name)));\n  const projects = Array.from(new Set(userData.map(d => d.project_name)));\n\n  // Helper: count weekdays between two dates (inclusive)\n  function countWeekdays(start, end) {\n    let count = 0;\n    let current = new Date(start);\n    while (current <= end) {\n      const day = current.getDay();\n      if (day !== 0 && day !== 6) count++;\n      current.setDate(current.getDate() + 1);\n    }\n    return count;\n  }\n\n  // Calculate period start/end\n  const now = new Date();\n  let periodStart, periodEnd;\n  switch (timeRange) {\n    case 'week':\n      periodStart = startOfWeek(now);\n      periodEnd = now;\n      break;\n    case 'month':\n      periodStart = startOfMonth(now);\n      periodEnd = now;\n      break;\n    case 'quarter':\n      periodStart = startOfQuarter(now);\n      periodEnd = now;\n      break;\n    case 'year':\n      periodStart = startOfYear(now);\n      periodEnd = now;\n      break;\n    case 'all':\n    default:\n      // Use earliest and latest date in userData\n      const allDates = userData.map(d => new Date(d.start_time)).filter(Boolean);\n      periodStart = allDates.length ? new Date(Math.min(...allDates)) : now;\n      periodEnd = allDates.length ? new Date(Math.max(...allDates)) : now;\n      break;\n  }\n  const weekdays = countWeekdays(periodStart, periodEnd);\n  const userCapacity = users.map(() => weekdays * 8);\n  // Calculate total hours logged per user in the period\n  const userLogged = users.map(user => userData.filter(d => d.user_name === user).reduce((sum, d) => sum + d.total_hours, 0));\n  const userAvailable = userCapacity.map((cap, i) => Math.max(0, cap - userLogged[i]));\n\n  // Calculate total system hours across all projects\n  const totalSystemHours = projectData.reduce((sum, project) => sum + project.total_hours, 0);\n\n  // Build a matrix: rows = projects, cols = users\n  const heatMapData = [userAvailable,\n  // Capacity row\n  userLogged,\n  // Total load row\n  ...projects.map(project => users.map(user => {\n    const found = userData.find(d => d.user_name === user && d.project_name === project);\n    return found ? found.total_hours : 0;\n  }))];\n  const allProjectsWithCapacity = ['Capacity', 'Total load', ...projects];\n\n  // Set column width for heatmap (wider for wrapped names)\n  const colWidth = 100;\n  const cellWidth = 95;\n  const cellHeight = 35;\n  const xOffset = 100;\n  const yOffset = 60;\n  const heatmapRows = allProjectsWithCapacity.length;\n  const heatmapHeight = heatmapRows * cellHeight + yOffset + 40; // 40 for header padding\n\n  const handleExpandClick = projectName => {\n    setExpandedProjects(prev => prev.includes(projectName) ? prev.filter(name => name !== projectName) : [...prev, projectName]);\n  };\n\n  // Precompute table rows to avoid returning arrays or IIFEs in JSX\n  let projectRows = [];\n  let userRows = [];\n  if (viewByUser) {\n    const usersList = Array.from(new Set(userData.map(d => d.user_name)));\n    usersList.forEach(user => {\n      const isExpanded = expandedProjects.includes(user);\n      const userProjects = userData.filter(d => d.user_name === user && d.total_hours > 0).map(d => ({\n        project: d.project_name,\n        hours: d.total_hours\n      }));\n      const userTotalHours = userProjects.reduce((sum, p) => sum + p.hours, 0);\n      const percent = totalSystemHours > 0 ? userTotalHours / totalSystemHours * 100 : 0;\n      userRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          sx: {\n            fontWeight: 500\n          },\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            onClick: () => handleExpandClick(user),\n            children: isExpanded ? /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), user]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: showProjectPercent ? `${Math.round(percent)}%` : `${formatHours(userTotalHours)}h`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: '100%',\n              height: 16,\n              bgcolor: '#e3eafc',\n              borderRadius: 2,\n              position: 'relative'\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: `${percent}%`,\n                height: '100%',\n                bgcolor: '#1976d2',\n                borderRadius: 2,\n                transition: 'width 0.3s'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this)]\n      }, user, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this));\n      if (isExpanded && userProjects.length > 0) {\n        userProjects.forEach(p => {\n          const projectPercent = p.hours / userTotalHours * 100;\n          userRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                pl: 6\n              },\n              children: p.project\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: showProjectPercent ? `${Math.round(projectPercent)}%` : `${formatHours(p.hours)}h`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: '100%',\n                  height: 12,\n                  bgcolor: '#e3eafc',\n                  borderRadius: 2,\n                  position: 'relative'\n                },\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    width: `${projectPercent}%`,\n                    height: '100%',\n                    bgcolor: '#1976d2',\n                    borderRadius: 2,\n                    transition: 'width 0.3s'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 15\n            }, this)]\n          }, user + '-' + p.project, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this));\n        });\n      }\n      if (isExpanded && userProjects.length === 0) {\n        userRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n          children: /*#__PURE__*/_jsxDEV(TableCell, {\n            colSpan: 3,\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"text.secondary\",\n              children: \"No project data for this user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this)\n        }, user + '-no-projects', false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this));\n      }\n    });\n  } else {\n    projectData.forEach(project => {\n      const isExpanded = expandedProjects.includes(project.project_name);\n      const usersForProject = userData.filter(d => d.project_name === project.project_name && d.total_hours > 0).map(d => ({\n        user: d.user_name,\n        hours: d.total_hours\n      }));\n      const percent = totalSystemHours > 0 ? project.total_hours / totalSystemHours * 100 : 0;\n      projectRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          sx: {\n            fontWeight: 500\n          },\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            onClick: () => handleExpandClick(project.project_name),\n            children: isExpanded ? /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this), project.project_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: showProjectPercent ? `${Math.round(percent)}%` : `${formatHours(project.total_hours)}h`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: '100%',\n              height: 16,\n              bgcolor: '#e3eafc',\n              borderRadius: 2,\n              position: 'relative'\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: `${percent}%`,\n                height: '100%',\n                bgcolor: '#1976d2',\n                borderRadius: 2,\n                transition: 'width 0.3s'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this)]\n      }, project.project_name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this));\n      if (isExpanded && usersForProject.length > 0) {\n        usersForProject.forEach(u => {\n          const userPercent = u.hours / project.total_hours * 100;\n          projectRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                pl: 6\n              },\n              children: u.user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: showProjectPercent ? `${Math.round(userPercent)}%` : `${formatHours(u.hours)}h`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: '100%',\n                  height: 12,\n                  bgcolor: '#e3eafc',\n                  borderRadius: 2,\n                  position: 'relative'\n                },\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    width: `${userPercent}%`,\n                    height: '100%',\n                    bgcolor: '#1976d2',\n                    borderRadius: 2,\n                    transition: 'width 0.3s'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 15\n            }, this)]\n          }, project.project_name + '-' + u.user, true, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this));\n        });\n      }\n      if (isExpanded && usersForProject.length === 0) {\n        projectRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n          children: /*#__PURE__*/_jsxDEV(TableCell, {\n            colSpan: 3,\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"text.secondary\",\n              children: \"No user data for this project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this)\n        }, project.project_name + '-no-users', false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this));\n      }\n    });\n  }\n\n  // Always flatten the rows to avoid nested arrays\n  userRows = userRows.flat(Infinity);\n  projectRows = projectRows.flat(Infinity);\n\n  // Debug: log the full structure of the rows before rendering\n  try {\n    console.log('userRows (full):', JSON.stringify(userRows));\n  } catch (e) {\n    console.log('userRows (full):', userRows);\n  }\n  try {\n    console.log('projectRows (full):', JSON.stringify(projectRows));\n  } catch (e) {\n    console.log('projectRows (full):', projectRows);\n  }\n  let tableRows;\n  if (viewByUser) {\n    tableRows = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: userRows\n    }, void 0, false);\n  } else if (projectRows.length > 0) {\n    tableRows = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: projectRows\n    }, void 0, false);\n  } else {\n    tableRows = /*#__PURE__*/_jsxDEV(TableRow, {\n      children: /*#__PURE__*/_jsxDEV(TableCell, {\n        colSpan: 3,\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"text.secondary\",\n          children: \"No project data available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 7\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"60vh\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        select: true,\n        value: timeRange,\n        onChange: e => setTimeRange(e.target.value),\n        sx: {\n          minWidth: 200\n        },\n        children: timeRanges.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: option.value,\n          children: option.label\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveGridLayout, {\n      className: \"layout\",\n      layouts: getLayouts(),\n      breakpoints: {\n        lg: 1200,\n        md: 996,\n        sm: 768,\n        xs: 480,\n        xxs: 0\n      },\n      cols: {\n        lg: 12,\n        md: 10,\n        sm: 6,\n        xs: 4,\n        xxs: 2\n      },\n      rowHeight: 50,\n      draggableHandle: \".MuiCardContent-root\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Hours by Project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: e => handleMenuClick(e, 'projectHours'),\n                children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 508,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  gap: 2,\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  control: /*#__PURE__*/_jsxDEV(Switch, {\n                    checked: viewByUser,\n                    onChange: e => setViewByUser(e.target.checked),\n                    color: \"primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 515,\n                    columnNumber: 23\n                  }, this),\n                  label: viewByUser ? \"View by User\" : \"View by Project\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  control: /*#__PURE__*/_jsxDEV(Switch, {\n                    checked: showProjectPercent,\n                    onChange: e => setShowProjectPercent(e.target.checked),\n                    color: \"primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 525,\n                    columnNumber: 23\n                  }, this),\n                  label: showProjectPercent ? 'Show: % of System Total' : 'Show: Hours'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 523,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n                component: Paper,\n                sx: {\n                  boxShadow: 'none'\n                },\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  size: \"small\",\n                  children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                    children: /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        sx: {\n                          fontWeight: 600\n                        },\n                        children: \"Project\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 538,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        sx: {\n                          fontWeight: 600\n                        },\n                        children: \"Total Hours\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 539,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        sx: {\n                          fontWeight: 600\n                        },\n                        children: \"Load\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 540,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 537,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 536,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                    children: tableRows\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 543,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 535,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 534,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 11\n        }, this)\n      }, \"projectHours\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Internal vs External Hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: e => handleMenuClick(e, 'clientType'),\n                children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 560,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  height: 300\n                },\n                children: clientTypeData.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                  children: /*#__PURE__*/_jsxDEV(PieChart, {\n                    children: [/*#__PURE__*/_jsxDEV(Pie, {\n                      data: clientTypeData,\n                      dataKey: \"total_hours\",\n                      nameKey: \"client_type\",\n                      cx: \"50%\",\n                      cy: \"50%\",\n                      outerRadius: 100,\n                      label: ({\n                        client_type,\n                        total_hours\n                      }) => `${client_type}: ${formatHours(total_hours)}h`,\n                      children: clientTypeData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                        fill: COLORS[index % COLORS.length]\n                      }, entry.client_type, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 580,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 568,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                      formatter: value => formatHours(value) + ' hours'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 583,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 584,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 567,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 566,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(Box, {\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  height: \"100%\",\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    color: \"text.secondary\",\n                    children: \"No client type data available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 589,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 588,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 11\n        }, this)\n      }, \"clientType\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Hours by Client\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 601,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: e => handleMenuClick(e, 'hoursByClient'),\n                children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 605,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 604,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  height: 300\n                },\n                children: projectData && projectData.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                  children: /*#__PURE__*/_jsxDEV(BarChart, {\n                    data: (() => {\n                      const clientData = projectData.reduce((acc, project) => {\n                        if (!project || typeof project !== 'object') return acc;\n                        const clientName = project.client_name || 'Unassigned';\n                        const existingClient = acc.find(c => c.name === clientName);\n                        if (existingClient) {\n                          existingClient.hours += project.total_hours;\n                        } else {\n                          acc.push({\n                            name: clientName,\n                            hours: project.total_hours\n                          });\n                        }\n                        return acc;\n                      }, []);\n                      return clientData.filter(c => typeof c.name === 'string' && typeof c.hours === 'number');\n                    })(),\n                    margin: {\n                      top: 20,\n                      right: 30,\n                      left: 20,\n                      bottom: 5\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                      strokeDasharray: \"3 3\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 629,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                      dataKey: \"name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 630,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 631,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                      formatter: value => formatHours(value) + ' hours'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 632,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 633,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                      dataKey: \"hours\",\n                      fill: \"#8884d8\",\n                      name: \"Hours\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 634,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 612,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 611,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(Box, {\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  height: \"100%\",\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    color: \"text.secondary\",\n                    children: \"No client data available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 639,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 638,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 609,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 11\n        }, this)\n      }, \"hoursByClient\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WidgetMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 471,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"8HwlSClVeDHYs5f/ED0fgSSCwVM=\");\n_c2 = Dashboard;\nexport default Dashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"ResponsiveGridLayout\");\n$RefreshReg$(_c2, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Box","Card","CardContent","Typography","MenuItem","TextField","CircularProgress","Alert","Switch","FormControlLabel","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","IconButton","Collapse","Menu","BarChart","Bar","PieChart","Pie","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","HeatMap","startOfWeek","startOfMonth","startOfQuarter","startOfYear","format","axios","AddIcon","RemoveIcon","Responsive","WidthProvider","MoreVertIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","COLORS","timeRanges","value","label","ResponsiveGridLayout","_c","WIDGET_SIZES","SMALL","w","h","WIDE","Dashboard","_s","timeRange","setTimeRange","projectData","setProjectData","userData","setUserData","clientTypeData","setClientTypeData","loading","setLoading","error","setError","showPercent","setShowPercent","expandedProjects","setExpandedProjects","showProjectPercent","setShowProjectPercent","viewByUser","setViewByUser","widgetSizes","setWidgetSizes","projectHours","clientType","hoursByClient","menuAnchorEl","setMenuAnchorEl","activeWidget","setActiveWidget","handleMenuClick","event","widgetId","currentTarget","handleMenuClose","handleSizeChange","size","prev","getLayouts","lg","i","x","y","WidgetMenu","anchorEl","open","Boolean","onClose","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","getDateRange","now","Date","startDate","weekStartsOn","endDate","fetchData","dateParams","console","log","projectRes","userRes","clientTypeRes","Promise","all","get","data","err","formatHours","hours","Math","round","users","Array","from","Set","map","d","user_name","projects","project_name","countWeekdays","start","end","count","current","day","getDay","setDate","getDate","periodStart","periodEnd","allDates","start_time","filter","length","min","max","weekdays","userCapacity","userLogged","user","reduce","sum","total_hours","userAvailable","cap","totalSystemHours","project","heatMapData","found","find","allProjectsWithCapacity","colWidth","cellWidth","cellHeight","xOffset","yOffset","heatmapRows","heatmapHeight","handleExpandClick","projectName","includes","name","projectRows","userRows","usersList","forEach","isExpanded","userProjects","userTotalHours","p","percent","push","sx","fontWeight","width","height","bgcolor","borderRadius","position","transition","projectPercent","pl","colSpan","align","color","usersForProject","u","userPercent","flat","Infinity","JSON","stringify","e","tableRows","display","justifyContent","alignItems","minHeight","mb","variant","select","onChange","target","minWidth","option","severity","className","layouts","breakpoints","md","sm","xs","xxs","cols","rowHeight","draggableHandle","gutterBottom","gap","control","checked","component","boxShadow","dataKey","nameKey","cx","cy","outerRadius","client_type","entry","index","fill","formatter","clientData","acc","clientName","client_name","existingClient","c","margin","top","right","left","bottom","strokeDasharray","_c2","$RefreshReg$"],"sources":["C:/Users/golun/TimeTracker/client/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  MenuItem,\n  TextField,\n  CircularProgress,\n  Alert,\n  Switch,\n  FormControlLabel,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  IconButton,\n  Collapse,\n  Menu,\n} from '@mui/material';\nimport {\n  BarChart,\n  Bar,\n  PieChart,\n  Pie,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  HeatMap,\n} from 'recharts';\nimport { startOfWeek, startOfMonth, startOfQuarter, startOfYear, format } from 'date-fns';\nimport axios from 'axios';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport { Responsive, WidthProvider } from 'react-grid-layout';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8'];\n\nconst timeRanges = [\n  { value: 'week', label: 'This Week' },\n  { value: 'month', label: 'This Month' },\n  { value: 'quarter', label: 'This Quarter' },\n  { value: 'year', label: 'This Year' },\n  { value: 'all', label: 'All Time' },\n];\n\nconst ResponsiveGridLayout = WidthProvider(Responsive);\n\nconst WIDGET_SIZES = {\n  SMALL: { w: 6, h: 6 },\n  WIDE: { w: 12, h: 6 },\n};\n\nfunction Dashboard() {\n  const [timeRange, setTimeRange] = useState('month');\n  const [projectData, setProjectData] = useState([]);\n  const [userData, setUserData] = useState([]);\n  const [clientTypeData, setClientTypeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showPercent, setShowPercent] = useState(false);\n  const [expandedProjects, setExpandedProjects] = useState([]);\n  const [showProjectPercent, setShowProjectPercent] = useState(false);\n  const [viewByUser, setViewByUser] = useState(false);\n  const [widgetSizes, setWidgetSizes] = useState({\n    projectHours: WIDGET_SIZES.SMALL,\n    clientType: WIDGET_SIZES.SMALL,\n    hoursByClient: WIDGET_SIZES.WIDE,\n  });\n\n  const [menuAnchorEl, setMenuAnchorEl] = useState(null);\n  const [activeWidget, setActiveWidget] = useState(null);\n\n  const handleMenuClick = (event, widgetId) => {\n    setMenuAnchorEl(event.currentTarget);\n    setActiveWidget(widgetId);\n  };\n\n  const handleMenuClose = () => {\n    setMenuAnchorEl(null);\n    setActiveWidget(null);\n  };\n\n  const handleSizeChange = (size) => {\n    setWidgetSizes(prev => ({\n      ...prev,\n      [activeWidget]: size,\n    }));\n    handleMenuClose();\n  };\n\n  const getLayouts = () => {\n    return {\n      lg: [\n        { i: 'projectHours', x: 0, y: 0, ...widgetSizes.projectHours },\n        { i: 'clientType', x: widgetSizes.projectHours.w, y: 0, ...widgetSizes.clientType },\n        { i: 'hoursByClient', x: 0, y: 6, ...widgetSizes.hoursByClient },\n      ],\n    };\n  };\n\n  const WidgetMenu = () => (\n    <Menu\n      anchorEl={menuAnchorEl}\n      open={Boolean(menuAnchorEl)}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={() => handleSizeChange(WIDGET_SIZES.SMALL)}>\n        Small (Half Width)\n      </MenuItem>\n      <MenuItem onClick={() => handleSizeChange(WIDGET_SIZES.WIDE)}>\n        Wide (Full Width)\n      </MenuItem>\n    </Menu>\n  );\n\n  const getDateRange = () => {\n    const now = new Date();\n    let startDate;\n\n    switch (timeRange) {\n      case 'week':\n        startDate = startOfWeek(now, { weekStartsOn: 1 });\n        break;\n      case 'month':\n        startDate = startOfMonth(now);\n        break;\n      case 'quarter':\n        startDate = startOfQuarter(now);\n        break;\n      case 'year':\n        startDate = startOfYear(now);\n        break;\n      default:\n        startDate = null;\n    }\n\n    return {\n      startDate: startDate ? format(startDate, 'yyyy-MM-dd') + 'T00:00:00.000Z' : null,\n      endDate: format(now, 'yyyy-MM-dd') + 'T23:59:59.999Z',\n    };\n  };\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const { startDate, endDate } = getDateRange();\n      const dateParams = startDate ? `?startDate=${startDate}&endDate=${endDate}` : '';\n\n      console.log('Fetching analytics data with params:', { startDate, endDate });\n\n      const [projectRes, userRes, clientTypeRes] = await Promise.all([\n        axios.get(`/api/analytics/time-by-project${dateParams}`),\n        axios.get(`/api/analytics/time-by-user${dateParams}`),\n        axios.get(`/api/analytics/time-by-client-type${dateParams}`),\n      ]);\n\n      console.log('Project data:', projectRes.data);\n      console.log('User data:', userRes.data);\n      console.log('Client type data:', clientTypeRes.data);\n\n      setProjectData(projectRes.data);\n      setUserData(userRes.data);\n      setClientTypeData(clientTypeRes.data);\n    } catch (err) {\n      console.error('Error fetching analytics:', err);\n      setError('Failed to fetch analytics data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [timeRange]);\n\n  const formatHours = (hours) => {\n    return Math.round(hours * 100) / 100;\n  };\n\n  // Prepare users and projects arrays first so they are available for all calculations\n  const users = Array.from(new Set(userData.map(d => d.user_name)));\n  const projects = Array.from(new Set(userData.map(d => d.project_name)));\n\n  // Helper: count weekdays between two dates (inclusive)\n  function countWeekdays(start, end) {\n    let count = 0;\n    let current = new Date(start);\n    while (current <= end) {\n      const day = current.getDay();\n      if (day !== 0 && day !== 6) count++;\n      current.setDate(current.getDate() + 1);\n    }\n    return count;\n  }\n\n  // Calculate period start/end\n  const now = new Date();\n  let periodStart, periodEnd;\n  switch (timeRange) {\n    case 'week':\n      periodStart = startOfWeek(now);\n      periodEnd = now;\n      break;\n    case 'month':\n      periodStart = startOfMonth(now);\n      periodEnd = now;\n      break;\n    case 'quarter':\n      periodStart = startOfQuarter(now);\n      periodEnd = now;\n      break;\n    case 'year':\n      periodStart = startOfYear(now);\n      periodEnd = now;\n      break;\n    case 'all':\n    default:\n      // Use earliest and latest date in userData\n      const allDates = userData.map(d => new Date(d.start_time)).filter(Boolean);\n      periodStart = allDates.length ? new Date(Math.min(...allDates)) : now;\n      periodEnd = allDates.length ? new Date(Math.max(...allDates)) : now;\n      break;\n  }\n  const weekdays = countWeekdays(periodStart, periodEnd);\n  const userCapacity = users.map(() => weekdays * 8);\n  // Calculate total hours logged per user in the period\n  const userLogged = users.map(user =>\n    userData.filter(d => d.user_name === user).reduce((sum, d) => sum + d.total_hours, 0)\n  );\n  const userAvailable = userCapacity.map((cap, i) => Math.max(0, cap - userLogged[i]));\n\n  // Calculate total system hours across all projects\n  const totalSystemHours = projectData.reduce((sum, project) => sum + project.total_hours, 0);\n\n  // Build a matrix: rows = projects, cols = users\n  const heatMapData = [\n    userAvailable, // Capacity row\n    userLogged,   // Total load row\n    ...projects.map(project =>\n      users.map(user => {\n        const found = userData.find(d => d.user_name === user && d.project_name === project);\n        return found ? found.total_hours : 0;\n      })\n    )\n  ];\n  const allProjectsWithCapacity = ['Capacity', 'Total load', ...projects];\n\n  // Set column width for heatmap (wider for wrapped names)\n  const colWidth = 100;\n  const cellWidth = 95;\n  const cellHeight = 35;\n  const xOffset = 100;\n  const yOffset = 60;\n  const heatmapRows = allProjectsWithCapacity.length;\n  const heatmapHeight = heatmapRows * cellHeight + yOffset + 40; // 40 for header padding\n\n  const handleExpandClick = (projectName) => {\n    setExpandedProjects((prev) =>\n      prev.includes(projectName)\n        ? prev.filter((name) => name !== projectName)\n        : [...prev, projectName]\n    );\n  };\n\n  // Precompute table rows to avoid returning arrays or IIFEs in JSX\n  let projectRows = [];\n  let userRows = [];\n\n  if (viewByUser) {\n    const usersList = Array.from(new Set(userData.map(d => d.user_name)));\n    usersList.forEach(user => {\n      const isExpanded = expandedProjects.includes(user);\n      const userProjects = userData\n        .filter(d => d.user_name === user && d.total_hours > 0)\n        .map(d => ({ project: d.project_name, hours: d.total_hours }));\n      const userTotalHours = userProjects.reduce((sum, p) => sum + p.hours, 0);\n      const percent = totalSystemHours > 0 ? (userTotalHours / totalSystemHours) * 100 : 0;\n      userRows.push(\n        <TableRow key={user}>\n          <TableCell sx={{ fontWeight: 500 }}>\n            <IconButton size=\"small\" onClick={() => handleExpandClick(user)}>\n              {isExpanded ? <RemoveIcon /> : <AddIcon />}\n            </IconButton>\n            {user}\n          </TableCell>\n          <TableCell>\n            {showProjectPercent\n              ? `${Math.round(percent)}%`\n              : `${formatHours(userTotalHours)}h`}\n          </TableCell>\n          <TableCell>\n            <Box sx={{ width: '100%', height: 16, bgcolor: '#e3eafc', borderRadius: 2, position: 'relative' }}>\n              <Box\n                sx={{\n                  width: `${percent}%`,\n                  height: '100%',\n                  bgcolor: '#1976d2',\n                  borderRadius: 2,\n                  transition: 'width 0.3s',\n                }}\n              />\n            </Box>\n          </TableCell>\n        </TableRow>\n      );\n      if (isExpanded && userProjects.length > 0) {\n        userProjects.forEach(p => {\n          const projectPercent = (p.hours / userTotalHours) * 100;\n          userRows.push(\n            <TableRow key={user + '-' + p.project}>\n              <TableCell sx={{ pl: 6 }}>{p.project}</TableCell>\n              <TableCell>\n                {showProjectPercent\n                  ? `${Math.round(projectPercent)}%`\n                  : `${formatHours(p.hours)}h`}\n              </TableCell>\n              <TableCell>\n                <Box sx={{ width: '100%', height: 12, bgcolor: '#e3eafc', borderRadius: 2, position: 'relative' }}>\n                  <Box\n                    sx={{\n                      width: `${projectPercent}%`,\n                      height: '100%',\n                      bgcolor: '#1976d2',\n                      borderRadius: 2,\n                      transition: 'width 0.3s',\n                    }}\n                  />\n                </Box>\n              </TableCell>\n            </TableRow>\n          );\n        });\n      }\n      if (isExpanded && userProjects.length === 0) {\n        userRows.push(\n          <TableRow key={user + '-no-projects'}>\n            <TableCell colSpan={3} align=\"center\">\n              <Typography color=\"text.secondary\">No project data for this user</Typography>\n            </TableCell>\n          </TableRow>\n        );\n      }\n    });\n  } else {\n    projectData.forEach(project => {\n      const isExpanded = expandedProjects.includes(project.project_name);\n      const usersForProject = userData\n        .filter(d => d.project_name === project.project_name && d.total_hours > 0)\n        .map(d => ({ user: d.user_name, hours: d.total_hours }));\n      const percent = totalSystemHours > 0 ? (project.total_hours / totalSystemHours) * 100 : 0;\n      projectRows.push(\n        <TableRow key={project.project_name}>\n          <TableCell sx={{ fontWeight: 500 }}>\n            <IconButton size=\"small\" onClick={() => handleExpandClick(project.project_name)}>\n              {isExpanded ? <RemoveIcon /> : <AddIcon />}\n            </IconButton>\n            {project.project_name}\n          </TableCell>\n          <TableCell>\n            {showProjectPercent\n              ? `${Math.round(percent)}%`\n              : `${formatHours(project.total_hours)}h`}\n          </TableCell>\n          <TableCell>\n            <Box sx={{ width: '100%', height: 16, bgcolor: '#e3eafc', borderRadius: 2, position: 'relative' }}>\n              <Box\n                sx={{\n                  width: `${percent}%`,\n                  height: '100%',\n                  bgcolor: '#1976d2',\n                  borderRadius: 2,\n                  transition: 'width 0.3s',\n                }}\n              />\n            </Box>\n          </TableCell>\n        </TableRow>\n      );\n      if (isExpanded && usersForProject.length > 0) {\n        usersForProject.forEach(u => {\n          const userPercent = (u.hours / project.total_hours) * 100;\n          projectRows.push(\n            <TableRow key={project.project_name + '-' + u.user}>\n              <TableCell sx={{ pl: 6 }}>{u.user}</TableCell>\n              <TableCell>\n                {showProjectPercent\n                  ? `${Math.round(userPercent)}%`\n                  : `${formatHours(u.hours)}h`}\n              </TableCell>\n              <TableCell>\n                <Box sx={{ width: '100%', height: 12, bgcolor: '#e3eafc', borderRadius: 2, position: 'relative' }}>\n                  <Box\n                    sx={{\n                      width: `${userPercent}%`,\n                      height: '100%',\n                      bgcolor: '#1976d2',\n                      borderRadius: 2,\n                      transition: 'width 0.3s',\n                    }}\n                  />\n                </Box>\n              </TableCell>\n            </TableRow>\n          );\n        });\n      }\n      if (isExpanded && usersForProject.length === 0) {\n        projectRows.push(\n          <TableRow key={project.project_name + '-no-users'}>\n            <TableCell colSpan={3} align=\"center\">\n              <Typography color=\"text.secondary\">No user data for this project</Typography>\n            </TableCell>\n          </TableRow>\n        );\n      }\n    });\n  }\n\n  // Always flatten the rows to avoid nested arrays\n  userRows = userRows.flat(Infinity);\n  projectRows = projectRows.flat(Infinity);\n\n  // Debug: log the full structure of the rows before rendering\n  try {\n    console.log('userRows (full):', JSON.stringify(userRows));\n  } catch (e) {\n    console.log('userRows (full):', userRows);\n  }\n  try {\n    console.log('projectRows (full):', JSON.stringify(projectRows));\n  } catch (e) {\n    console.log('projectRows (full):', projectRows);\n  }\n\n  let tableRows;\n  if (viewByUser) {\n    tableRows = <>{userRows}</>;\n  } else if (projectRows.length > 0) {\n    tableRows = <>{projectRows}</>;\n  } else {\n    tableRows = (\n      <TableRow>\n        <TableCell colSpan={3} align=\"center\">\n          <Typography color=\"text.secondary\">No project data available</Typography>\n        </TableCell>\n      </TableRow>\n    );\n  }\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"60vh\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  return (\n    <Box>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 3 }}>\n        <Typography variant=\"h4\">Dashboard</Typography>\n        <TextField\n          select\n          value={timeRange}\n          onChange={(e) => setTimeRange(e.target.value)}\n          sx={{ minWidth: 200 }}\n        >\n          {timeRanges.map((option) => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n      </Box>\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\n          {error}\n        </Alert>\n      )}\n      <ResponsiveGridLayout\n        className=\"layout\"\n        layouts={getLayouts()}\n        breakpoints={{ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 }}\n        cols={{ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }}\n        rowHeight={50}\n        draggableHandle=\".MuiCardContent-root\"\n      >\n        <div key=\"projectHours\">\n          <Card>\n            <CardContent>\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                <Typography variant=\"h6\" gutterBottom>\n                  Hours by Project\n                </Typography>\n                <IconButton onClick={(e) => handleMenuClick(e, 'projectHours')}>\n                  <MoreVertIcon />\n                </IconButton>\n              </Box>\n              <Box>\n                <Box sx={{ display: 'flex', gap: 2, mb: 2 }}>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={viewByUser}\n                        onChange={e => setViewByUser(e.target.checked)}\n                        color=\"primary\"\n                      />\n                    }\n                    label={viewByUser ? \"View by User\" : \"View by Project\"}\n                  />\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={showProjectPercent}\n                        onChange={e => setShowProjectPercent(e.target.checked)}\n                        color=\"primary\"\n                      />\n                    }\n                    label={showProjectPercent ? 'Show: % of System Total' : 'Show: Hours'}\n                  />\n                </Box>\n                <TableContainer component={Paper} sx={{ boxShadow: 'none' }}>\n                  <Table size=\"small\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell sx={{ fontWeight: 600 }}>Project</TableCell>\n                        <TableCell sx={{ fontWeight: 600 }}>Total Hours</TableCell>\n                        <TableCell sx={{ fontWeight: 600 }}>Load</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {tableRows}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Box>\n            </CardContent>\n          </Card>\n        </div>\n        <div key=\"clientType\">\n          <Card>\n            <CardContent>\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                <Typography variant=\"h6\" gutterBottom>\n                  Internal vs External Hours\n                </Typography>\n                <IconButton onClick={(e) => handleMenuClick(e, 'clientType')}>\n                  <MoreVertIcon />\n                </IconButton>\n              </Box>\n              <Box>\n                <Box sx={{ height: 300 }}>\n                  {clientTypeData.length > 0 ? (\n                    <ResponsiveContainer>\n                      <PieChart>\n                        <Pie\n                          data={clientTypeData}\n                          dataKey=\"total_hours\"\n                          nameKey=\"client_type\"\n                          cx=\"50%\"\n                          cy=\"50%\"\n                          outerRadius={100}\n                          label={({ client_type, total_hours }) => \n                            `${client_type}: ${formatHours(total_hours)}h`\n                          }\n                        >\n                          {clientTypeData.map((entry, index) => (\n                            <Cell key={entry.client_type} fill={COLORS[index % COLORS.length]} />\n                          ))}\n                        </Pie>\n                        <Tooltip formatter={(value) => formatHours(value) + ' hours'} />\n                        <Legend />\n                      </PieChart>\n                    </ResponsiveContainer>\n                  ) : (\n                    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100%\">\n                      <Typography color=\"text.secondary\">No client type data available</Typography>\n                    </Box>\n                  )}\n                </Box>\n              </Box>\n            </CardContent>\n          </Card>\n        </div>\n        <div key=\"hoursByClient\">\n          <Card>\n            <CardContent>\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                <Typography variant=\"h6\" gutterBottom>\n                  Hours by Client\n                </Typography>\n                <IconButton onClick={(e) => handleMenuClick(e, 'hoursByClient')}>\n                  <MoreVertIcon />\n                </IconButton>\n              </Box>\n              <Box>\n                <Box sx={{ height: 300 }}>\n                  {projectData && projectData.length > 0 ? (\n                    <ResponsiveContainer>\n                      <BarChart\n                        data={(() => {\n                          const clientData = projectData.reduce((acc, project) => {\n                            if (!project || typeof project !== 'object') return acc;\n                            const clientName = project.client_name || 'Unassigned';\n                            const existingClient = acc.find(c => c.name === clientName);\n                            if (existingClient) {\n                              existingClient.hours += project.total_hours;\n                            } else {\n                              acc.push({ name: clientName, hours: project.total_hours });\n                            }\n                            return acc;\n                          }, []);\n                          return clientData.filter(c => typeof c.name === 'string' && typeof c.hours === 'number');\n                        })()}\n                        margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n                      >\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"name\" />\n                        <YAxis />\n                        <Tooltip formatter={(value) => formatHours(value) + ' hours'} />\n                        <Legend />\n                        <Bar dataKey=\"hours\" fill=\"#8884d8\" name=\"Hours\" />\n                      </BarChart>\n                    </ResponsiveContainer>\n                  ) : (\n                    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100%\">\n                      <Typography color=\"text.secondary\">No client data available</Typography>\n                    </Box>\n                  )}\n                </Box>\n              </Box>\n            </CardContent>\n          </Card>\n        </div>\n      </ResponsiveGridLayout>\n      <WidgetMenu />\n    </Box>\n  );\n}\n\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}