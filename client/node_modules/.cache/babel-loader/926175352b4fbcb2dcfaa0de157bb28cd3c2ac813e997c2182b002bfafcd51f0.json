{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\golun\\\\TimeTracker\\\\client\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Card, CardContent, Typography, MenuItem, TextField, CircularProgress, Alert, Switch, FormControlLabel, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, IconButton, Collapse, Menu } from '@mui/material';\nimport { BarChart, Bar, PieChart, Pie, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, HeatMap } from 'recharts';\nimport { startOfWeek, startOfMonth, startOfQuarter, startOfYear, format } from 'date-fns';\nimport axios from 'axios';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport { Responsive, WidthProvider } from 'react-grid-layout';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8'];\nconst timeRanges = [{\n  value: 'week',\n  label: 'This Week'\n}, {\n  value: 'month',\n  label: 'This Month'\n}, {\n  value: 'quarter',\n  label: 'This Quarter'\n}, {\n  value: 'year',\n  label: 'This Year'\n}, {\n  value: 'all',\n  label: 'All Time'\n}];\nconst ResponsiveGridLayout = WidthProvider(Responsive);\n_c = ResponsiveGridLayout;\nconst WIDGET_SIZES = {\n  SMALL: {\n    w: 4,\n    h: 4\n  },\n  WIDE: {\n    w: 8,\n    h: 4\n  }\n};\nconst WIDGET_POSITIONS = {\n  projectHours: {\n    x: 0,\n    y: 0\n  },\n  clientType: {\n    x: 4,\n    y: 0\n  },\n  hoursByClient: {\n    x: 0,\n    y: 4\n  }\n};\nconst GRID_COLUMNS = 12;\nconst GRID_ROWS = 8;\nconst STORAGE_KEY = 'dashboard_widget_settings';\nfunction Dashboard() {\n  _s();\n  const [timeRange, setTimeRange] = useState('month');\n  const [projectData, setProjectData] = useState([]);\n  const [userData, setUserData] = useState([]);\n  const [clientTypeData, setClientTypeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showPercent, setShowPercent] = useState(false);\n  const [expandedProjects, setExpandedProjects] = useState([]);\n  const [showProjectPercent, setShowProjectPercent] = useState(false);\n  const [viewByUser, setViewByUser] = useState(false);\n\n  // Load saved settings from localStorage\n  const loadSavedSettings = () => {\n    try {\n      const savedSettings = localStorage.getItem(STORAGE_KEY);\n      if (savedSettings) {\n        const parsed = JSON.parse(savedSettings);\n        return {\n          positions: parsed.positions || WIDGET_POSITIONS,\n          sizes: parsed.sizes || {\n            projectHours: WIDGET_SIZES.SMALL,\n            clientType: WIDGET_SIZES.SMALL,\n            hoursByClient: WIDGET_SIZES.WIDE\n          }\n        };\n      }\n    } catch (error) {\n      console.error('Error loading saved settings:', error);\n    }\n    return {\n      positions: WIDGET_POSITIONS,\n      sizes: {\n        projectHours: WIDGET_SIZES.SMALL,\n        clientType: WIDGET_SIZES.SMALL,\n        hoursByClient: WIDGET_SIZES.WIDE\n      }\n    };\n  };\n  const savedSettings = loadSavedSettings();\n  const [widgetState, setWidgetState] = useState({\n    positions: savedSettings.positions,\n    sizes: savedSettings.sizes\n  });\n  const [menuAnchorEl, setMenuAnchorEl] = useState(null);\n  const [activeWidget, setActiveWidget] = useState(null);\n\n  // Save settings to localStorage\n  const saveSettings = newState => {\n    try {\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(newState));\n    } catch (error) {\n      console.error('Error saving settings:', error);\n    }\n  };\n\n  // Update widget state and save\n  const updateWidgetState = newState => {\n    setWidgetState(newState);\n    saveSettings(newState);\n  };\n  const handleMenuClick = (event, widgetId) => {\n    setMenuAnchorEl(event.currentTarget);\n    setActiveWidget(widgetId);\n  };\n  const handleMenuClose = () => {\n    setMenuAnchorEl(null);\n    setActiveWidget(null);\n  };\n  const handleSizeChange = size => {\n    if (!activeWidget) return;\n    const newState = {\n      ...widgetState,\n      sizes: {\n        ...widgetState.sizes,\n        [activeWidget]: size\n      }\n    };\n    updateWidgetState(newState);\n    handleMenuClose();\n  };\n  const handleMove = direction => {\n    if (!activeWidget || !widgetState.positions[activeWidget]) return;\n    const currentPos = widgetState.positions[activeWidget];\n    const newPos = {\n      ...currentPos\n    };\n    const widgetSize = widgetState.sizes[activeWidget];\n    switch (direction) {\n      case 'left':\n        newPos.x = Math.max(0, currentPos.x - 1);\n        break;\n      case 'right':\n        newPos.x = Math.min(GRID_COLUMNS - widgetSize.w, currentPos.x + 1);\n        break;\n      case 'up':\n        newPos.y = Math.max(0, currentPos.y - 1);\n        break;\n      case 'down':\n        newPos.y = Math.min(GRID_ROWS - widgetSize.h, currentPos.y + 1);\n        break;\n      default:\n        return;\n    }\n\n    // Find if there's a widget at the new position\n    const widgetAtNewPos = Object.entries(widgetState.positions).find(([id, pos]) => {\n      if (id === activeWidget) return false;\n      const otherSize = widgetState.sizes[id];\n      return newPos.x < pos.x + otherSize.w && newPos.x + widgetSize.w > pos.x && newPos.y < pos.y + otherSize.h && newPos.y + widgetSize.h > pos.y;\n    });\n    if (widgetAtNewPos) {\n      // Swap positions\n      const [otherWidgetId] = widgetAtNewPos;\n      const newState = {\n        ...widgetState,\n        positions: {\n          ...widgetState.positions,\n          [activeWidget]: newPos,\n          [otherWidgetId]: currentPos\n        }\n      };\n      updateWidgetState(newState);\n    } else {\n      // Just move the widget\n      const newState = {\n        ...widgetState,\n        positions: {\n          ...widgetState.positions,\n          [activeWidget]: newPos\n        }\n      };\n      updateWidgetState(newState);\n    }\n    handleMenuClose();\n  };\n  const canMove = (widgetId, direction) => {\n    if (!widgetId || !widgetState.positions[widgetId]) return false;\n    const currentPos = widgetState.positions[widgetId];\n    const newPos = {\n      ...currentPos\n    };\n    const widgetSize = widgetState.sizes[widgetId];\n    switch (direction) {\n      case 'left':\n        newPos.x = Math.max(0, currentPos.x - 1);\n        break;\n      case 'right':\n        newPos.x = Math.min(GRID_COLUMNS - widgetSize.w, currentPos.x + 1);\n        break;\n      case 'up':\n        newPos.y = Math.max(0, currentPos.y - 1);\n        break;\n      case 'down':\n        newPos.y = Math.min(GRID_ROWS - widgetSize.h, currentPos.y + 1);\n        break;\n      default:\n        return false;\n    }\n\n    // Check if the new position is different from current\n    if (newPos.x === currentPos.x && newPos.y === currentPos.y) {\n      return false;\n    }\n\n    // Check if there's a widget at the new position\n    const widgetAtNewPos = Object.entries(widgetState.positions).find(([id, pos]) => {\n      if (id === widgetId) return false;\n      const otherSize = widgetState.sizes[id];\n      return newPos.x < pos.x + otherSize.w && newPos.x + widgetSize.w > pos.x && newPos.y < pos.y + otherSize.h && newPos.y + widgetSize.h > pos.y;\n    });\n    return !widgetAtNewPos;\n  };\n  const getLayouts = () => {\n    return {\n      lg: [{\n        i: 'projectHours',\n        ...widgetState.positions.projectHours,\n        ...widgetState.sizes.projectHours,\n        static: true\n      }, {\n        i: 'clientType',\n        ...widgetState.positions.clientType,\n        ...widgetState.sizes.clientType,\n        static: true\n      }, {\n        i: 'hoursByClient',\n        ...widgetState.positions.hoursByClient,\n        ...widgetState.sizes.hoursByClient,\n        static: true\n      }]\n    };\n  };\n  const getDateRange = () => {\n    const now = new Date();\n    let startDate;\n    switch (timeRange) {\n      case 'week':\n        startDate = startOfWeek(now, {\n          weekStartsOn: 1\n        });\n        break;\n      case 'month':\n        startDate = startOfMonth(now);\n        break;\n      case 'quarter':\n        startDate = startOfQuarter(now);\n        break;\n      case 'year':\n        startDate = startOfYear(now);\n        break;\n      default:\n        startDate = null;\n    }\n    return {\n      startDate: startDate ? format(startDate, 'yyyy-MM-dd') + 'T00:00:00.000Z' : null,\n      endDate: format(now, 'yyyy-MM-dd') + 'T23:59:59.999Z'\n    };\n  };\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const {\n        startDate,\n        endDate\n      } = getDateRange();\n      const dateParams = startDate ? `?startDate=${startDate}&endDate=${endDate}` : '';\n      console.log('Fetching analytics data with params:', {\n        startDate,\n        endDate\n      });\n      const [projectRes, userRes, clientTypeRes] = await Promise.all([axios.get(`/api/analytics/time-by-project${dateParams}`), axios.get(`/api/analytics/time-by-user${dateParams}`), axios.get(`/api/analytics/time-by-client-type${dateParams}`)]);\n      console.log('Project data:', projectRes.data);\n      console.log('User data:', userRes.data);\n      console.log('Client type data:', clientTypeRes.data);\n      setProjectData(projectRes.data);\n      setUserData(userRes.data);\n      setClientTypeData(clientTypeRes.data);\n\n      // Log a sample of projectData after it is set\n      if (projectRes.data && projectRes.data.length > 0) {\n        console.log('Sample projectData object:', projectRes.data[0]);\n      }\n    } catch (err) {\n      console.error('Error fetching analytics:', err);\n      setError('Failed to fetch analytics data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, [timeRange]);\n  const formatHours = hours => {\n    return Math.round(hours * 100) / 100;\n  };\n\n  // Prepare users and projects arrays first so they are available for all calculations\n  const users = Array.from(new Set(userData.map(d => d.user_name)));\n  const projects = Array.from(new Set(userData.map(d => d.project_name)));\n\n  // Helper: count weekdays between two dates (inclusive)\n  function countWeekdays(start, end) {\n    let count = 0;\n    let current = new Date(start);\n    while (current <= end) {\n      const day = current.getDay();\n      if (day !== 0 && day !== 6) count++;\n      current.setDate(current.getDate() + 1);\n    }\n    return count;\n  }\n\n  // Calculate period start/end\n  const now = new Date();\n  let periodStart, periodEnd;\n  switch (timeRange) {\n    case 'week':\n      periodStart = startOfWeek(now);\n      periodEnd = now;\n      break;\n    case 'month':\n      periodStart = startOfMonth(now);\n      periodEnd = now;\n      break;\n    case 'quarter':\n      periodStart = startOfQuarter(now);\n      periodEnd = now;\n      break;\n    case 'year':\n      periodStart = startOfYear(now);\n      periodEnd = now;\n      break;\n    case 'all':\n    default:\n      // Use earliest and latest date in userData\n      const allDates = userData.map(d => new Date(d.start_time)).filter(Boolean);\n      periodStart = allDates.length ? new Date(Math.min(...allDates)) : now;\n      periodEnd = allDates.length ? new Date(Math.max(...allDates)) : now;\n      break;\n  }\n  const weekdays = countWeekdays(periodStart, periodEnd);\n  const userCapacity = users.map(() => weekdays * 8);\n  // Calculate total hours logged per user in the period\n  const userLogged = users.map(user => userData.filter(d => d.user_name === user).reduce((sum, d) => sum + d.total_hours, 0));\n  const userAvailable = userCapacity.map((cap, i) => Math.max(0, cap - userLogged[i]));\n\n  // Calculate total system hours across all projects\n  const totalSystemHours = projectData.reduce((sum, project) => sum + project.total_hours, 0);\n\n  // Build a matrix: rows = projects, cols = users\n  const heatMapData = [userAvailable,\n  // Capacity row\n  userLogged,\n  // Total load row\n  ...projects.map(project => users.map(user => {\n    const found = userData.find(d => d.user_name === user && d.project_name === project);\n    return found ? found.total_hours : 0;\n  }))];\n  const allProjectsWithCapacity = ['Capacity', 'Total load', ...projects];\n\n  // Set column width for heatmap (wider for wrapped names)\n  const colWidth = 100;\n  const cellWidth = 95;\n  const cellHeight = 35;\n  const xOffset = 100;\n  const yOffset = 60;\n  const heatmapRows = allProjectsWithCapacity.length;\n  const heatmapHeight = heatmapRows * cellHeight + yOffset + 40; // 40 for header padding\n\n  const handleExpandClick = projectName => {\n    setExpandedProjects(prev => prev.includes(projectName) ? prev.filter(name => name !== projectName) : [...prev, projectName]);\n  };\n\n  // Precompute table rows to avoid returning arrays or IIFEs in JSX\n  let projectRows = [];\n  let userRows = [];\n  if (viewByUser) {\n    const usersList = Array.from(new Set(userData.map(d => d.user_name)));\n    usersList.forEach(user => {\n      const isExpanded = expandedProjects.includes(user);\n      const userProjects = userData.filter(d => d.user_name === user && d.total_hours > 0).map(d => ({\n        project: d.project_name,\n        hours: d.total_hours\n      }));\n      const userTotalHours = userProjects.reduce((sum, p) => sum + p.hours, 0);\n      const percent = totalSystemHours > 0 ? userTotalHours / totalSystemHours * 100 : 0;\n      userRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          sx: {\n            fontWeight: 500\n          },\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            onClick: () => handleExpandClick(user),\n            children: isExpanded ? /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 13\n          }, this), user]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: showProjectPercent ? `${Math.round(percent)}%` : `${formatHours(userTotalHours)}h`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: '100%',\n              height: 16,\n              bgcolor: '#e3eafc',\n              borderRadius: 2,\n              position: 'relative'\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: `${percent}%`,\n                height: '100%',\n                bgcolor: '#1976d2',\n                borderRadius: 2,\n                transition: 'width 0.3s'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this)]\n      }, user, true, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, this));\n      if (isExpanded && userProjects.length > 0) {\n        userProjects.forEach(p => {\n          const projectPercent = p.hours / userTotalHours * 100;\n          userRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              bgcolor: '#f5f5f5'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                pl: 6\n              },\n              children: p.project\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: showProjectPercent ? `${Math.round(projectPercent)}%` : `${formatHours(p.hours)}h`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: '100%',\n                  height: 12,\n                  bgcolor: '#e3eafc',\n                  borderRadius: 2,\n                  position: 'relative'\n                },\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    width: `${projectPercent}%`,\n                    height: '100%',\n                    bgcolor: '#4caf50',\n                    borderRadius: 2,\n                    transition: 'width 0.3s'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 507,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 15\n            }, this)]\n          }, user + '-' + p.project, true, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 13\n          }, this));\n        });\n      }\n      if (isExpanded && userProjects.length === 0) {\n        userRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            bgcolor: '#f5f5f5'\n          },\n          children: /*#__PURE__*/_jsxDEV(TableCell, {\n            colSpan: 3,\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"text.secondary\",\n              children: \"No project data for this user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 13\n          }, this)\n        }, user + '-no-projects', false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 11\n        }, this));\n      }\n    });\n  } else {\n    projectData.forEach(project => {\n      const isExpanded = expandedProjects.includes(project.project_name);\n      const usersForProject = userData.filter(d => d.project_name === project.project_name && d.total_hours > 0).map(d => ({\n        user: d.user_name,\n        hours: d.total_hours\n      }));\n      const percent = totalSystemHours > 0 ? project.total_hours / totalSystemHours * 100 : 0;\n      projectRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          sx: {\n            fontWeight: 500\n          },\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            onClick: () => handleExpandClick(project.project_name),\n            children: isExpanded ? /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 13\n          }, this), project.project_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: showProjectPercent ? `${Math.round(percent)}%` : `${formatHours(project.total_hours)}h`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: '100%',\n              height: 16,\n              bgcolor: '#e3eafc',\n              borderRadius: 2,\n              position: 'relative'\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: `${percent}%`,\n                height: '100%',\n                bgcolor: '#1976d2',\n                borderRadius: 2,\n                transition: 'width 0.3s'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 11\n        }, this)]\n      }, project.project_name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 9\n      }, this));\n      if (isExpanded && usersForProject.length > 0) {\n        usersForProject.forEach(u => {\n          const userPercent = u.hours / project.total_hours * 100;\n          projectRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              bgcolor: '#f5f5f5'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                pl: 6\n              },\n              children: u.user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: showProjectPercent ? `${Math.round(userPercent)}%` : `${formatHours(u.hours)}h`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: '100%',\n                  height: 12,\n                  bgcolor: '#e3eafc',\n                  borderRadius: 2,\n                  position: 'relative'\n                },\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    width: `${userPercent}%`,\n                    height: '100%',\n                    bgcolor: '#4caf50',\n                    borderRadius: 2,\n                    transition: 'width 0.3s'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 580,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 15\n            }, this)]\n          }, project.project_name + '-' + u.user, true, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 13\n          }, this));\n        });\n      }\n      if (isExpanded && usersForProject.length === 0) {\n        projectRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            bgcolor: '#f5f5f5'\n          },\n          children: /*#__PURE__*/_jsxDEV(TableCell, {\n            colSpan: 3,\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"text.secondary\",\n              children: \"No user data for this project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 13\n          }, this)\n        }, project.project_name + '-no-users', false, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 11\n        }, this));\n      }\n    });\n  }\n\n  // Always flatten the rows to avoid nested arrays\n  userRows = userRows.flat(Infinity);\n  projectRows = projectRows.flat(Infinity);\n\n  // Debug: log the full structure of the rows before rendering\n  try {\n    console.log('userRows (full):', JSON.stringify(userRows));\n  } catch (e) {\n    console.log('userRows (full):', userRows);\n  }\n  try {\n    console.log('projectRows (full):', JSON.stringify(projectRows));\n  } catch (e) {\n    console.log('projectRows (full):', projectRows);\n  }\n  let tableRows;\n  if (viewByUser) {\n    tableRows = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: userRows\n    }, void 0, false);\n  } else if (projectRows.length > 0) {\n    tableRows = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: projectRows\n    }, void 0, false);\n  } else {\n    tableRows = /*#__PURE__*/_jsxDEV(TableRow, {\n      children: /*#__PURE__*/_jsxDEV(TableCell, {\n        colSpan: 3,\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"text.secondary\",\n          children: \"No project data available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 7\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"60vh\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        select: true,\n        value: timeRange,\n        onChange: e => setTimeRange(e.target.value),\n        sx: {\n          minWidth: 200\n        },\n        children: timeRanges.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: option.value,\n          children: option.label\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveGridLayout, {\n      className: \"layout\",\n      layouts: getLayouts(),\n      breakpoints: {\n        lg: 1200,\n        md: 996,\n        sm: 768,\n        xs: 480,\n        xxs: 0\n      },\n      cols: {\n        lg: 12,\n        md: 10,\n        sm: 6,\n        xs: 4,\n        xxs: 2\n      },\n      rowHeight: 50,\n      margin: [16, 16],\n      containerPadding: [16, 16],\n      isDraggable: false,\n      isResizable: false,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Hours by Project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 683,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: e => handleMenuClick(e, 'projectHours'),\n                children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 687,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 686,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 682,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  gap: 2,\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  control: /*#__PURE__*/_jsxDEV(Switch, {\n                    checked: viewByUser,\n                    onChange: e => setViewByUser(e.target.checked),\n                    color: \"primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 694,\n                    columnNumber: 23\n                  }, this),\n                  label: viewByUser ? \"View by User\" : \"View by Project\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 692,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  control: /*#__PURE__*/_jsxDEV(Switch, {\n                    checked: showProjectPercent,\n                    onChange: e => setShowProjectPercent(e.target.checked),\n                    color: \"primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 704,\n                    columnNumber: 23\n                  }, this),\n                  label: showProjectPercent ? 'Show: % of System Total' : 'Show: Hours'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 702,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 691,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n                component: Paper,\n                sx: {\n                  boxShadow: 'none'\n                },\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  size: \"small\",\n                  children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                    children: /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        sx: {\n                          fontWeight: 600\n                        },\n                        children: \"Project\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 717,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        sx: {\n                          fontWeight: 600\n                        },\n                        children: \"Total Hours\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 718,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        sx: {\n                          fontWeight: 600\n                        },\n                        children: \"Load\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 719,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 716,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 715,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                    children: tableRows\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 722,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 714,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 713,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 690,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 11\n        }, this)\n      }, \"projectHours\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Internal vs External Hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 735,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: e => handleMenuClick(e, 'clientType'),\n                children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 739,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 738,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 734,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  height: 300\n                },\n                children: clientTypeData.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                  children: /*#__PURE__*/_jsxDEV(PieChart, {\n                    children: [/*#__PURE__*/_jsxDEV(Pie, {\n                      data: clientTypeData,\n                      dataKey: \"total_hours\",\n                      nameKey: \"client_type\",\n                      cx: \"50%\",\n                      cy: \"50%\",\n                      outerRadius: 100,\n                      label: ({\n                        client_type,\n                        total_hours\n                      }) => `${client_type}: ${formatHours(total_hours)}h`,\n                      children: clientTypeData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                        fill: COLORS[index % COLORS.length]\n                      }, entry.client_type, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 759,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 747,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                      formatter: value => formatHours(value) + ' hours'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 762,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 763,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 746,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 745,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(Box, {\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  height: \"100%\",\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    color: \"text.secondary\",\n                    children: \"No client type data available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 768,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 767,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 743,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 742,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 733,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 732,\n          columnNumber: 11\n        }, this)\n      }, \"clientType\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 731,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Hours by Client\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 780,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: e => handleMenuClick(e, 'hoursByClient'),\n                children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 784,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 783,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 779,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                height: 300\n              },\n              children: projectData && projectData.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                children: /*#__PURE__*/_jsxDEV(BarChart, {\n                  data: (() => {\n                    // Aggregate hours by client_name\n                    const clientHours = {};\n                    projectData.forEach(project => {\n                      const client = project.client_name || 'Unassigned';\n                      clientHours[client] = (clientHours[client] || 0) + project.total_hours;\n                    });\n                    // Convert to array for recharts\n                    return Object.entries(clientHours).map(([name, hours]) => ({\n                      name,\n                      hours: Math.round(hours * 100) / 100\n                    }));\n                  })(),\n                  margin: {\n                    top: 20,\n                    right: 30,\n                    left: 20,\n                    bottom: 5\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                    strokeDasharray: \"3 3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 806,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                    dataKey: \"name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 807,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 808,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    formatter: value => value + ' hours'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 809,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 810,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                    dataKey: \"hours\",\n                    fill: \"#8884d8\",\n                    name: \"Hours\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 811,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 790,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 789,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                height: \"100%\",\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  color: \"text.secondary\",\n                  children: \"No client data available\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 816,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 815,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 787,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 778,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 11\n        }, this)\n      }, \"hoursByClient\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      anchorEl: menuAnchorEl,\n      open: Boolean(menuAnchorEl),\n      onClose: handleMenuClose,\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => handleSizeChange(WIDGET_SIZES.SMALL),\n        children: \"Small (Half Width)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 829,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => handleSizeChange(WIDGET_SIZES.WIDE),\n        children: \"Wide (Full Width)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 832,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => handleMove('left'),\n        disabled: !canMove(activeWidget, 'left'),\n        children: \"Move Left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 835,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => handleMove('right'),\n        disabled: !canMove(activeWidget, 'right'),\n        children: \"Move Right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 841,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => handleMove('up'),\n        disabled: !canMove(activeWidget, 'up'),\n        children: \"Move Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 847,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => handleMove('down'),\n        disabled: !canMove(activeWidget, 'down'),\n        children: \"Move Down\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 853,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 824,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 647,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"aHAW73/wH/atEUAgYkNmy48psac=\");\n_c2 = Dashboard;\nexport default Dashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"ResponsiveGridLayout\");\n$RefreshReg$(_c2, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Box","Card","CardContent","Typography","MenuItem","TextField","CircularProgress","Alert","Switch","FormControlLabel","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","IconButton","Collapse","Menu","BarChart","Bar","PieChart","Pie","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","HeatMap","startOfWeek","startOfMonth","startOfQuarter","startOfYear","format","axios","AddIcon","RemoveIcon","Responsive","WidthProvider","MoreVertIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","COLORS","timeRanges","value","label","ResponsiveGridLayout","_c","WIDGET_SIZES","SMALL","w","h","WIDE","WIDGET_POSITIONS","projectHours","x","y","clientType","hoursByClient","GRID_COLUMNS","GRID_ROWS","STORAGE_KEY","Dashboard","_s","timeRange","setTimeRange","projectData","setProjectData","userData","setUserData","clientTypeData","setClientTypeData","loading","setLoading","error","setError","showPercent","setShowPercent","expandedProjects","setExpandedProjects","showProjectPercent","setShowProjectPercent","viewByUser","setViewByUser","loadSavedSettings","savedSettings","localStorage","getItem","parsed","JSON","parse","positions","sizes","console","widgetState","setWidgetState","menuAnchorEl","setMenuAnchorEl","activeWidget","setActiveWidget","saveSettings","newState","setItem","stringify","updateWidgetState","handleMenuClick","event","widgetId","currentTarget","handleMenuClose","handleSizeChange","size","handleMove","direction","currentPos","newPos","widgetSize","Math","max","min","widgetAtNewPos","Object","entries","find","id","pos","otherSize","otherWidgetId","canMove","getLayouts","lg","i","static","getDateRange","now","Date","startDate","weekStartsOn","endDate","fetchData","dateParams","log","projectRes","userRes","clientTypeRes","Promise","all","get","data","length","err","formatHours","hours","round","users","Array","from","Set","map","d","user_name","projects","project_name","countWeekdays","start","end","count","current","day","getDay","setDate","getDate","periodStart","periodEnd","allDates","start_time","filter","Boolean","weekdays","userCapacity","userLogged","user","reduce","sum","total_hours","userAvailable","cap","totalSystemHours","project","heatMapData","found","allProjectsWithCapacity","colWidth","cellWidth","cellHeight","xOffset","yOffset","heatmapRows","heatmapHeight","handleExpandClick","projectName","prev","includes","name","projectRows","userRows","usersList","forEach","isExpanded","userProjects","userTotalHours","p","percent","push","children","sx","fontWeight","onClick","fileName","_jsxFileName","lineNumber","columnNumber","width","height","bgcolor","borderRadius","position","transition","projectPercent","pl","colSpan","align","color","usersForProject","u","userPercent","flat","Infinity","e","tableRows","display","justifyContent","alignItems","minHeight","mb","variant","select","onChange","target","minWidth","option","severity","className","layouts","breakpoints","md","sm","xs","xxs","cols","rowHeight","margin","containerPadding","isDraggable","isResizable","gutterBottom","gap","control","checked","component","boxShadow","dataKey","nameKey","cx","cy","outerRadius","client_type","entry","index","fill","formatter","clientHours","client","client_name","top","right","left","bottom","strokeDasharray","anchorEl","open","onClose","disabled","_c2","$RefreshReg$"],"sources":["C:/Users/golun/TimeTracker/client/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  MenuItem,\n  TextField,\n  CircularProgress,\n  Alert,\n  Switch,\n  FormControlLabel,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  IconButton,\n  Collapse,\n  Menu,\n} from '@mui/material';\nimport {\n  BarChart,\n  Bar,\n  PieChart,\n  Pie,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  HeatMap,\n} from 'recharts';\nimport { startOfWeek, startOfMonth, startOfQuarter, startOfYear, format } from 'date-fns';\nimport axios from 'axios';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport { Responsive, WidthProvider } from 'react-grid-layout';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8'];\n\nconst timeRanges = [\n  { value: 'week', label: 'This Week' },\n  { value: 'month', label: 'This Month' },\n  { value: 'quarter', label: 'This Quarter' },\n  { value: 'year', label: 'This Year' },\n  { value: 'all', label: 'All Time' },\n];\n\nconst ResponsiveGridLayout = WidthProvider(Responsive);\n\nconst WIDGET_SIZES = {\n  SMALL: { w: 4, h: 4 },\n  WIDE: { w: 8, h: 4 },\n};\n\nconst WIDGET_POSITIONS = {\n  projectHours: { x: 0, y: 0 },\n  clientType: { x: 4, y: 0 },\n  hoursByClient: { x: 0, y: 4 },\n};\n\nconst GRID_COLUMNS = 12;\nconst GRID_ROWS = 8;\n\nconst STORAGE_KEY = 'dashboard_widget_settings';\n\nfunction Dashboard() {\n  const [timeRange, setTimeRange] = useState('month');\n  const [projectData, setProjectData] = useState([]);\n  const [userData, setUserData] = useState([]);\n  const [clientTypeData, setClientTypeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showPercent, setShowPercent] = useState(false);\n  const [expandedProjects, setExpandedProjects] = useState([]);\n  const [showProjectPercent, setShowProjectPercent] = useState(false);\n  const [viewByUser, setViewByUser] = useState(false);\n\n  // Load saved settings from localStorage\n  const loadSavedSettings = () => {\n    try {\n      const savedSettings = localStorage.getItem(STORAGE_KEY);\n      if (savedSettings) {\n        const parsed = JSON.parse(savedSettings);\n        return {\n          positions: parsed.positions || WIDGET_POSITIONS,\n          sizes: parsed.sizes || {\n            projectHours: WIDGET_SIZES.SMALL,\n            clientType: WIDGET_SIZES.SMALL,\n            hoursByClient: WIDGET_SIZES.WIDE,\n          }\n        };\n      }\n    } catch (error) {\n      console.error('Error loading saved settings:', error);\n    }\n    return {\n      positions: WIDGET_POSITIONS,\n      sizes: {\n        projectHours: WIDGET_SIZES.SMALL,\n        clientType: WIDGET_SIZES.SMALL,\n        hoursByClient: WIDGET_SIZES.WIDE,\n      }\n    };\n  };\n\n  const savedSettings = loadSavedSettings();\n  const [widgetState, setWidgetState] = useState({\n    positions: savedSettings.positions,\n    sizes: savedSettings.sizes\n  });\n  const [menuAnchorEl, setMenuAnchorEl] = useState(null);\n  const [activeWidget, setActiveWidget] = useState(null);\n\n  // Save settings to localStorage\n  const saveSettings = (newState) => {\n    try {\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(newState));\n    } catch (error) {\n      console.error('Error saving settings:', error);\n    }\n  };\n\n  // Update widget state and save\n  const updateWidgetState = (newState) => {\n    setWidgetState(newState);\n    saveSettings(newState);\n  };\n\n  const handleMenuClick = (event, widgetId) => {\n    setMenuAnchorEl(event.currentTarget);\n    setActiveWidget(widgetId);\n  };\n\n  const handleMenuClose = () => {\n    setMenuAnchorEl(null);\n    setActiveWidget(null);\n  };\n\n  const handleSizeChange = (size) => {\n    if (!activeWidget) return;\n    \n    const newState = {\n      ...widgetState,\n      sizes: {\n        ...widgetState.sizes,\n        [activeWidget]: size,\n      }\n    };\n    updateWidgetState(newState);\n    handleMenuClose();\n  };\n\n  const handleMove = (direction) => {\n    if (!activeWidget || !widgetState.positions[activeWidget]) return;\n\n    const currentPos = widgetState.positions[activeWidget];\n    const newPos = { ...currentPos };\n    const widgetSize = widgetState.sizes[activeWidget];\n\n    switch (direction) {\n      case 'left':\n        newPos.x = Math.max(0, currentPos.x - 1);\n        break;\n      case 'right':\n        newPos.x = Math.min(GRID_COLUMNS - widgetSize.w, currentPos.x + 1);\n        break;\n      case 'up':\n        newPos.y = Math.max(0, currentPos.y - 1);\n        break;\n      case 'down':\n        newPos.y = Math.min(GRID_ROWS - widgetSize.h, currentPos.y + 1);\n        break;\n      default:\n        return;\n    }\n\n    // Find if there's a widget at the new position\n    const widgetAtNewPos = Object.entries(widgetState.positions).find(\n      ([id, pos]) => {\n        if (id === activeWidget) return false;\n        const otherSize = widgetState.sizes[id];\n        return (\n          (newPos.x < pos.x + otherSize.w) &&\n          (newPos.x + widgetSize.w > pos.x) &&\n          (newPos.y < pos.y + otherSize.h) &&\n          (newPos.y + widgetSize.h > pos.y)\n        );\n      }\n    );\n\n    if (widgetAtNewPos) {\n      // Swap positions\n      const [otherWidgetId] = widgetAtNewPos;\n      const newState = {\n        ...widgetState,\n        positions: {\n          ...widgetState.positions,\n          [activeWidget]: newPos,\n          [otherWidgetId]: currentPos,\n        }\n      };\n      updateWidgetState(newState);\n    } else {\n      // Just move the widget\n      const newState = {\n        ...widgetState,\n        positions: {\n          ...widgetState.positions,\n          [activeWidget]: newPos,\n        }\n      };\n      updateWidgetState(newState);\n    }\n\n    handleMenuClose();\n  };\n\n  const canMove = (widgetId, direction) => {\n    if (!widgetId || !widgetState.positions[widgetId]) return false;\n    \n    const currentPos = widgetState.positions[widgetId];\n    const newPos = { ...currentPos };\n    const widgetSize = widgetState.sizes[widgetId];\n\n    switch (direction) {\n      case 'left':\n        newPos.x = Math.max(0, currentPos.x - 1);\n        break;\n      case 'right':\n        newPos.x = Math.min(GRID_COLUMNS - widgetSize.w, currentPos.x + 1);\n        break;\n      case 'up':\n        newPos.y = Math.max(0, currentPos.y - 1);\n        break;\n      case 'down':\n        newPos.y = Math.min(GRID_ROWS - widgetSize.h, currentPos.y + 1);\n        break;\n      default:\n        return false;\n    }\n\n    // Check if the new position is different from current\n    if (newPos.x === currentPos.x && newPos.y === currentPos.y) {\n      return false;\n    }\n\n    // Check if there's a widget at the new position\n    const widgetAtNewPos = Object.entries(widgetState.positions).find(\n      ([id, pos]) => {\n        if (id === widgetId) return false;\n        const otherSize = widgetState.sizes[id];\n        return (\n          (newPos.x < pos.x + otherSize.w) &&\n          (newPos.x + widgetSize.w > pos.x) &&\n          (newPos.y < pos.y + otherSize.h) &&\n          (newPos.y + widgetSize.h > pos.y)\n        );\n      }\n    );\n\n    return !widgetAtNewPos;\n  };\n\n  const getLayouts = () => {\n    return {\n      lg: [\n        { \n          i: 'projectHours', \n          ...widgetState.positions.projectHours,\n          ...widgetState.sizes.projectHours,\n          static: true \n        },\n        { \n          i: 'clientType', \n          ...widgetState.positions.clientType,\n          ...widgetState.sizes.clientType,\n          static: true \n        },\n        { \n          i: 'hoursByClient', \n          ...widgetState.positions.hoursByClient,\n          ...widgetState.sizes.hoursByClient,\n          static: true \n        },\n      ],\n    };\n  };\n\n  const getDateRange = () => {\n    const now = new Date();\n    let startDate;\n\n    switch (timeRange) {\n      case 'week':\n        startDate = startOfWeek(now, { weekStartsOn: 1 });\n        break;\n      case 'month':\n        startDate = startOfMonth(now);\n        break;\n      case 'quarter':\n        startDate = startOfQuarter(now);\n        break;\n      case 'year':\n        startDate = startOfYear(now);\n        break;\n      default:\n        startDate = null;\n    }\n\n    return {\n      startDate: startDate ? format(startDate, 'yyyy-MM-dd') + 'T00:00:00.000Z' : null,\n      endDate: format(now, 'yyyy-MM-dd') + 'T23:59:59.999Z',\n    };\n  };\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const { startDate, endDate } = getDateRange();\n      const dateParams = startDate ? `?startDate=${startDate}&endDate=${endDate}` : '';\n\n      console.log('Fetching analytics data with params:', { startDate, endDate });\n\n      const [projectRes, userRes, clientTypeRes] = await Promise.all([\n        axios.get(`/api/analytics/time-by-project${dateParams}`),\n        axios.get(`/api/analytics/time-by-user${dateParams}`),\n        axios.get(`/api/analytics/time-by-client-type${dateParams}`),\n      ]);\n\n      console.log('Project data:', projectRes.data);\n      console.log('User data:', userRes.data);\n      console.log('Client type data:', clientTypeRes.data);\n\n      setProjectData(projectRes.data);\n      setUserData(userRes.data);\n      setClientTypeData(clientTypeRes.data);\n\n      // Log a sample of projectData after it is set\n      if (projectRes.data && projectRes.data.length > 0) {\n        console.log('Sample projectData object:', projectRes.data[0]);\n      }\n    } catch (err) {\n      console.error('Error fetching analytics:', err);\n      setError('Failed to fetch analytics data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [timeRange]);\n\n  const formatHours = (hours) => {\n    return Math.round(hours * 100) / 100;\n  };\n\n  // Prepare users and projects arrays first so they are available for all calculations\n  const users = Array.from(new Set(userData.map(d => d.user_name)));\n  const projects = Array.from(new Set(userData.map(d => d.project_name)));\n\n  // Helper: count weekdays between two dates (inclusive)\n  function countWeekdays(start, end) {\n    let count = 0;\n    let current = new Date(start);\n    while (current <= end) {\n      const day = current.getDay();\n      if (day !== 0 && day !== 6) count++;\n      current.setDate(current.getDate() + 1);\n    }\n    return count;\n  }\n\n  // Calculate period start/end\n  const now = new Date();\n  let periodStart, periodEnd;\n  switch (timeRange) {\n    case 'week':\n      periodStart = startOfWeek(now);\n      periodEnd = now;\n      break;\n    case 'month':\n      periodStart = startOfMonth(now);\n      periodEnd = now;\n      break;\n    case 'quarter':\n      periodStart = startOfQuarter(now);\n      periodEnd = now;\n      break;\n    case 'year':\n      periodStart = startOfYear(now);\n      periodEnd = now;\n      break;\n    case 'all':\n    default:\n      // Use earliest and latest date in userData\n      const allDates = userData.map(d => new Date(d.start_time)).filter(Boolean);\n      periodStart = allDates.length ? new Date(Math.min(...allDates)) : now;\n      periodEnd = allDates.length ? new Date(Math.max(...allDates)) : now;\n      break;\n  }\n  const weekdays = countWeekdays(periodStart, periodEnd);\n  const userCapacity = users.map(() => weekdays * 8);\n  // Calculate total hours logged per user in the period\n  const userLogged = users.map(user =>\n    userData.filter(d => d.user_name === user).reduce((sum, d) => sum + d.total_hours, 0)\n  );\n  const userAvailable = userCapacity.map((cap, i) => Math.max(0, cap - userLogged[i]));\n\n  // Calculate total system hours across all projects\n  const totalSystemHours = projectData.reduce((sum, project) => sum + project.total_hours, 0);\n\n  // Build a matrix: rows = projects, cols = users\n  const heatMapData = [\n    userAvailable, // Capacity row\n    userLogged,   // Total load row\n    ...projects.map(project =>\n      users.map(user => {\n        const found = userData.find(d => d.user_name === user && d.project_name === project);\n        return found ? found.total_hours : 0;\n      })\n    )\n  ];\n  const allProjectsWithCapacity = ['Capacity', 'Total load', ...projects];\n\n  // Set column width for heatmap (wider for wrapped names)\n  const colWidth = 100;\n  const cellWidth = 95;\n  const cellHeight = 35;\n  const xOffset = 100;\n  const yOffset = 60;\n  const heatmapRows = allProjectsWithCapacity.length;\n  const heatmapHeight = heatmapRows * cellHeight + yOffset + 40; // 40 for header padding\n\n  const handleExpandClick = (projectName) => {\n    setExpandedProjects((prev) =>\n      prev.includes(projectName)\n        ? prev.filter((name) => name !== projectName)\n        : [...prev, projectName]\n    );\n  };\n\n  // Precompute table rows to avoid returning arrays or IIFEs in JSX\n  let projectRows = [];\n  let userRows = [];\n\n  if (viewByUser) {\n    const usersList = Array.from(new Set(userData.map(d => d.user_name)));\n    usersList.forEach(user => {\n      const isExpanded = expandedProjects.includes(user);\n      const userProjects = userData\n        .filter(d => d.user_name === user && d.total_hours > 0)\n        .map(d => ({ project: d.project_name, hours: d.total_hours }));\n      const userTotalHours = userProjects.reduce((sum, p) => sum + p.hours, 0);\n      const percent = totalSystemHours > 0 ? (userTotalHours / totalSystemHours) * 100 : 0;\n      userRows.push(\n        <TableRow key={user}>\n          <TableCell sx={{ fontWeight: 500 }}>\n            <IconButton size=\"small\" onClick={() => handleExpandClick(user)}>\n              {isExpanded ? <RemoveIcon /> : <AddIcon />}\n            </IconButton>\n            {user}\n          </TableCell>\n          <TableCell>\n            {showProjectPercent\n              ? `${Math.round(percent)}%`\n              : `${formatHours(userTotalHours)}h`}\n          </TableCell>\n          <TableCell>\n            <Box sx={{ width: '100%', height: 16, bgcolor: '#e3eafc', borderRadius: 2, position: 'relative' }}>\n              <Box\n                sx={{\n                  width: `${percent}%`,\n                  height: '100%',\n                  bgcolor: '#1976d2',\n                  borderRadius: 2,\n                  transition: 'width 0.3s',\n                }}\n              />\n            </Box>\n          </TableCell>\n        </TableRow>\n      );\n      if (isExpanded && userProjects.length > 0) {\n        userProjects.forEach(p => {\n          const projectPercent = (p.hours / userTotalHours) * 100;\n          userRows.push(\n            <TableRow key={user + '-' + p.project} sx={{ bgcolor: '#f5f5f5' }}>\n              <TableCell sx={{ pl: 6 }}>{p.project}</TableCell>\n              <TableCell>\n                {showProjectPercent\n                  ? `${Math.round(projectPercent)}%`\n                  : `${formatHours(p.hours)}h`}\n              </TableCell>\n              <TableCell>\n                <Box sx={{ width: '100%', height: 12, bgcolor: '#e3eafc', borderRadius: 2, position: 'relative' }}>\n                  <Box\n                    sx={{\n                      width: `${projectPercent}%`,\n                      height: '100%',\n                      bgcolor: '#4caf50',\n                      borderRadius: 2,\n                      transition: 'width 0.3s',\n                    }}\n                  />\n                </Box>\n              </TableCell>\n            </TableRow>\n          );\n        });\n      }\n      if (isExpanded && userProjects.length === 0) {\n        userRows.push(\n          <TableRow key={user + '-no-projects'} sx={{ bgcolor: '#f5f5f5' }}>\n            <TableCell colSpan={3} align=\"center\">\n              <Typography color=\"text.secondary\">No project data for this user</Typography>\n            </TableCell>\n          </TableRow>\n        );\n      }\n    });\n  } else {\n    projectData.forEach(project => {\n      const isExpanded = expandedProjects.includes(project.project_name);\n      const usersForProject = userData\n        .filter(d => d.project_name === project.project_name && d.total_hours > 0)\n        .map(d => ({ user: d.user_name, hours: d.total_hours }));\n      const percent = totalSystemHours > 0 ? (project.total_hours / totalSystemHours) * 100 : 0;\n      projectRows.push(\n        <TableRow key={project.project_name}>\n          <TableCell sx={{ fontWeight: 500 }}>\n            <IconButton size=\"small\" onClick={() => handleExpandClick(project.project_name)}>\n              {isExpanded ? <RemoveIcon /> : <AddIcon />}\n            </IconButton>\n            {project.project_name}\n          </TableCell>\n          <TableCell>\n            {showProjectPercent\n              ? `${Math.round(percent)}%`\n              : `${formatHours(project.total_hours)}h`}\n          </TableCell>\n          <TableCell>\n            <Box sx={{ width: '100%', height: 16, bgcolor: '#e3eafc', borderRadius: 2, position: 'relative' }}>\n              <Box\n                sx={{\n                  width: `${percent}%`,\n                  height: '100%',\n                  bgcolor: '#1976d2',\n                  borderRadius: 2,\n                  transition: 'width 0.3s',\n                }}\n              />\n            </Box>\n          </TableCell>\n        </TableRow>\n      );\n      if (isExpanded && usersForProject.length > 0) {\n        usersForProject.forEach(u => {\n          const userPercent = (u.hours / project.total_hours) * 100;\n          projectRows.push(\n            <TableRow key={project.project_name + '-' + u.user} sx={{ bgcolor: '#f5f5f5' }}>\n              <TableCell sx={{ pl: 6 }}>{u.user}</TableCell>\n              <TableCell>\n                {showProjectPercent\n                  ? `${Math.round(userPercent)}%`\n                  : `${formatHours(u.hours)}h`}\n              </TableCell>\n              <TableCell>\n                <Box sx={{ width: '100%', height: 12, bgcolor: '#e3eafc', borderRadius: 2, position: 'relative' }}>\n                  <Box\n                    sx={{\n                      width: `${userPercent}%`,\n                      height: '100%',\n                      bgcolor: '#4caf50',\n                      borderRadius: 2,\n                      transition: 'width 0.3s',\n                    }}\n                  />\n                </Box>\n              </TableCell>\n            </TableRow>\n          );\n        });\n      }\n      if (isExpanded && usersForProject.length === 0) {\n        projectRows.push(\n          <TableRow key={project.project_name + '-no-users'} sx={{ bgcolor: '#f5f5f5' }}>\n            <TableCell colSpan={3} align=\"center\">\n              <Typography color=\"text.secondary\">No user data for this project</Typography>\n            </TableCell>\n          </TableRow>\n        );\n      }\n    });\n  }\n\n  // Always flatten the rows to avoid nested arrays\n  userRows = userRows.flat(Infinity);\n  projectRows = projectRows.flat(Infinity);\n\n  // Debug: log the full structure of the rows before rendering\n  try {\n    console.log('userRows (full):', JSON.stringify(userRows));\n  } catch (e) {\n    console.log('userRows (full):', userRows);\n  }\n  try {\n    console.log('projectRows (full):', JSON.stringify(projectRows));\n  } catch (e) {\n    console.log('projectRows (full):', projectRows);\n  }\n\n  let tableRows;\n  if (viewByUser) {\n    tableRows = <>{userRows}</>;\n  } else if (projectRows.length > 0) {\n    tableRows = <>{projectRows}</>;\n  } else {\n    tableRows = (\n      <TableRow>\n        <TableCell colSpan={3} align=\"center\">\n          <Typography color=\"text.secondary\">No project data available</Typography>\n        </TableCell>\n      </TableRow>\n    );\n  }\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"60vh\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  return (\n    <Box>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 3 }}>\n        <Typography variant=\"h4\">Dashboard</Typography>\n        <TextField\n          select\n          value={timeRange}\n          onChange={(e) => setTimeRange(e.target.value)}\n          sx={{ minWidth: 200 }}\n        >\n          {timeRanges.map((option) => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n      </Box>\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\n          {error}\n        </Alert>\n      )}\n      <ResponsiveGridLayout\n        className=\"layout\"\n        layouts={getLayouts()}\n        breakpoints={{ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 }}\n        cols={{ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }}\n        rowHeight={50}\n        margin={[16, 16]}\n        containerPadding={[16, 16]}\n        isDraggable={false}\n        isResizable={false}\n      >\n        <div key=\"projectHours\">\n          <Card>\n            <CardContent>\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                <Typography variant=\"h6\" gutterBottom>\n                  Hours by Project\n                </Typography>\n                <IconButton onClick={(e) => handleMenuClick(e, 'projectHours')}>\n                  <MoreVertIcon />\n                </IconButton>\n              </Box>\n              <Box>\n                <Box sx={{ display: 'flex', gap: 2, mb: 2 }}>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={viewByUser}\n                        onChange={e => setViewByUser(e.target.checked)}\n                        color=\"primary\"\n                      />\n                    }\n                    label={viewByUser ? \"View by User\" : \"View by Project\"}\n                  />\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={showProjectPercent}\n                        onChange={e => setShowProjectPercent(e.target.checked)}\n                        color=\"primary\"\n                      />\n                    }\n                    label={showProjectPercent ? 'Show: % of System Total' : 'Show: Hours'}\n                  />\n                </Box>\n                <TableContainer component={Paper} sx={{ boxShadow: 'none' }}>\n                  <Table size=\"small\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell sx={{ fontWeight: 600 }}>Project</TableCell>\n                        <TableCell sx={{ fontWeight: 600 }}>Total Hours</TableCell>\n                        <TableCell sx={{ fontWeight: 600 }}>Load</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {tableRows}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Box>\n            </CardContent>\n          </Card>\n        </div>\n        <div key=\"clientType\">\n          <Card>\n            <CardContent>\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                <Typography variant=\"h6\" gutterBottom>\n                  Internal vs External Hours\n                </Typography>\n                <IconButton onClick={(e) => handleMenuClick(e, 'clientType')}>\n                  <MoreVertIcon />\n                </IconButton>\n              </Box>\n              <Box>\n                <Box sx={{ height: 300 }}>\n                  {clientTypeData.length > 0 ? (\n                    <ResponsiveContainer>\n                      <PieChart>\n                        <Pie\n                          data={clientTypeData}\n                          dataKey=\"total_hours\"\n                          nameKey=\"client_type\"\n                          cx=\"50%\"\n                          cy=\"50%\"\n                          outerRadius={100}\n                          label={({ client_type, total_hours }) => \n                            `${client_type}: ${formatHours(total_hours)}h`\n                          }\n                        >\n                          {clientTypeData.map((entry, index) => (\n                            <Cell key={entry.client_type} fill={COLORS[index % COLORS.length]} />\n                          ))}\n                        </Pie>\n                        <Tooltip formatter={(value) => formatHours(value) + ' hours'} />\n                        <Legend />\n                      </PieChart>\n                    </ResponsiveContainer>\n                  ) : (\n                    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100%\">\n                      <Typography color=\"text.secondary\">No client type data available</Typography>\n                    </Box>\n                  )}\n                </Box>\n              </Box>\n            </CardContent>\n          </Card>\n        </div>\n        <div key=\"hoursByClient\">\n          <Card>\n            <CardContent>\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                <Typography variant=\"h6\" gutterBottom>\n                  Hours by Client\n                </Typography>\n                <IconButton onClick={(e) => handleMenuClick(e, 'hoursByClient')}>\n                  <MoreVertIcon />\n                </IconButton>\n              </Box>\n              <Box sx={{ height: 300 }}>\n                {projectData && projectData.length > 0 ? (\n                  <ResponsiveContainer>\n                    <BarChart\n                      data={(() => {\n                        // Aggregate hours by client_name\n                        const clientHours = {};\n                        projectData.forEach(project => {\n                          const client = project.client_name || 'Unassigned';\n                          clientHours[client] = (clientHours[client] || 0) + project.total_hours;\n                        });\n                        // Convert to array for recharts\n                        return Object.entries(clientHours).map(([name, hours]) => ({\n                          name,\n                          hours: Math.round(hours * 100) / 100\n                        }));\n                      })()}\n                      margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n                    >\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey=\"name\" />\n                      <YAxis />\n                      <Tooltip formatter={value => value + ' hours'} />\n                      <Legend />\n                      <Bar dataKey=\"hours\" fill=\"#8884d8\" name=\"Hours\" />\n                    </BarChart>\n                  </ResponsiveContainer>\n                ) : (\n                  <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100%\">\n                    <Typography color=\"text.secondary\">No client data available</Typography>\n                  </Box>\n                )}\n              </Box>\n            </CardContent>\n          </Card>\n        </div>\n      </ResponsiveGridLayout>\n      <Menu\n        anchorEl={menuAnchorEl}\n        open={Boolean(menuAnchorEl)}\n        onClose={handleMenuClose}\n      >\n        <MenuItem onClick={() => handleSizeChange(WIDGET_SIZES.SMALL)}>\n          Small (Half Width)\n        </MenuItem>\n        <MenuItem onClick={() => handleSizeChange(WIDGET_SIZES.WIDE)}>\n          Wide (Full Width)\n        </MenuItem>\n        <MenuItem \n          onClick={() => handleMove('left')}\n          disabled={!canMove(activeWidget, 'left')}\n        >\n          Move Left\n        </MenuItem>\n        <MenuItem \n          onClick={() => handleMove('right')}\n          disabled={!canMove(activeWidget, 'right')}\n        >\n          Move Right\n        </MenuItem>\n        <MenuItem \n          onClick={() => handleMove('up')}\n          disabled={!canMove(activeWidget, 'up')}\n        >\n          Move Up\n        </MenuItem>\n        <MenuItem \n          onClick={() => handleMove('down')}\n          disabled={!canMove(activeWidget, 'down')}\n        >\n          Move Down\n        </MenuItem>\n      </Menu>\n    </Box>\n  );\n}\n\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}