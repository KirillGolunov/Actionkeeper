{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\golun\\\\TimeTracker\\\\client\\\\src\\\\pages\\\\TimeEntries.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Button, Typography, TextField, Dialog, DialogTitle, DialogContent, DialogActions, MenuItem, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Alert, IconButton } from '@mui/material';\nimport { format } from 'date-fns';\nimport axios from 'axios';\nimport { Add, Delete, Remove, Edit as EditIcon } from '@mui/icons-material';\nimport TimeEntryForm from '../components/TimeEntryForm';\nimport SingleProjectWeekEditor from '../components/SingleProjectWeekEditor';\nimport DayHourBar from '../components/DayHourBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst daysOfWeek = [{\n  key: 'mon',\n  label: 'Mon'\n}, {\n  key: 'tue',\n  label: 'Tue'\n}, {\n  key: 'wed',\n  label: 'Wed'\n}, {\n  key: 'thu',\n  label: 'Thu'\n}, {\n  key: 'fri',\n  label: 'Fri'\n}, {\n  key: 'sat',\n  label: 'Sat'\n}, {\n  key: 'sun',\n  label: 'Sun'\n}];\nconst requiredHoursPerDay = {\n  mon: 8,\n  tue: 8,\n  wed: 8,\n  thu: 8,\n  fri: 8,\n  sat: 0,\n  sun: 0\n};\nfunction getMonday(d) {\n  d = new Date(d);\n  var day = d.getDay(),\n    diff = d.getDate() - day + (day === 0 ? -6 : 1); // adjust when day is sunday\n  return new Date(d.setDate(diff));\n}\nfunction HourInput({\n  value,\n  onChange\n}) {\n  const handleDecrement = () => {\n    const newValue = Math.max(0, (parseFloat(value) || 0) - 1);\n    onChange(newValue === 0 ? '' : newValue);\n  };\n  const handleIncrement = () => {\n    const newValue = Math.min(24, (parseFloat(value) || 0) + 1);\n    onChange(newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      alignItems: 'center',\n      border: '1px solid #e0e0e0',\n      borderRadius: 2,\n      px: 0.5,\n      py: 0.2,\n      minWidth: 48,\n      justifyContent: 'center',\n      background: '#fff'\n    },\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      size: \"small\",\n      onClick: handleDecrement,\n      sx: {\n        p: 0.25\n      },\n      children: /*#__PURE__*/_jsxDEV(Remove, {\n        fontSize: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        mx: 0.5,\n        minWidth: 16,\n        textAlign: 'center',\n        fontWeight: 500,\n        fontSize: 14\n      },\n      children: value || 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      size: \"small\",\n      onClick: handleIncrement,\n      sx: {\n        p: 0.25\n      },\n      children: /*#__PURE__*/_jsxDEV(Add, {\n        fontSize: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_c = HourInput;\nconst LOCAL_STORAGE_KEY = userId => `weeklyEntries_${userId}`;\n\n// Update initial entry structure to include 'submitted'\n_c2 = LOCAL_STORAGE_KEY;\nconst initialEntry = (user_id = '') => ({\n  project_id: '',\n  user_id,\n  hours: {\n    mon: '',\n    tue: '',\n    wed: '',\n    thu: '',\n    fri: '',\n    sat: '',\n    sun: ''\n  },\n  submitted: false\n});\nfunction TimeEntries() {\n  _s();\n  const [timeEntries, setTimeEntries] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [error, setError] = useState(null);\n  const [newEntry, setNewEntry] = useState({\n    project_id: '',\n    user_id: '',\n    start_time: '',\n    end_time: '',\n    description: ''\n  });\n  const [weeklyEntries, setWeeklyEntries] = useState([{\n    project_id: '',\n    user_id: '',\n    hours: {\n      mon: '',\n      tue: '',\n      wed: '',\n      thu: '',\n      fri: '',\n      sat: '',\n      sun: ''\n    }\n  }]);\n  const [weekStart, setWeekStart] = useState(getMonday(new Date()));\n  const [selectedUser, setSelectedUser] = useState('');\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [editWeekEntry, setEditWeekEntry] = useState(null);\n  const [editLoading, setEditLoading] = useState(false);\n  const [editError, setEditError] = useState('');\n  useEffect(() => {\n    fetchTimeEntries();\n    fetchProjects();\n    fetchUsers();\n  }, []);\n  useEffect(() => {\n    if (users.length > 0 && !selectedUser) {\n      setSelectedUser(users[0].id);\n      setWeeklyEntries(weeklyEntries.map(entry => ({\n        ...entry,\n        user_id: users[0].id\n      })));\n    }\n    // eslint-disable-next-line\n  }, [users]);\n  useEffect(() => {\n    if (selectedUser) {\n      const saved = localStorage.getItem(LOCAL_STORAGE_KEY(selectedUser));\n      if (saved) {\n        setWeeklyEntries(JSON.parse(saved));\n      } else {\n        setWeeklyEntries([initialEntry(selectedUser)]);\n      }\n    }\n    // eslint-disable-next-line\n  }, [selectedUser]);\n  useEffect(() => {\n    if (selectedUser) {\n      localStorage.setItem(LOCAL_STORAGE_KEY(selectedUser), JSON.stringify(weeklyEntries));\n    }\n    // eslint-disable-next-line\n  }, [weeklyEntries, selectedUser]);\n  const fetchTimeEntries = async () => {\n    try {\n      const response = await axios.get('/api/time-entries');\n      console.log('Fetched time entries:', response.data);\n      setTimeEntries(response.data);\n    } catch (error) {\n      console.error('Error fetching time entries:', error);\n      setError('Failed to fetch time entries. Please try again.');\n    }\n  };\n  const fetchProjects = async () => {\n    try {\n      const response = await axios.get('/api/projects');\n      console.log('Fetched projects:', response.data);\n      setProjects(response.data);\n    } catch (error) {\n      console.error('Error fetching projects:', error);\n      setError('Failed to fetch projects. Please try again.');\n    }\n  };\n  const fetchUsers = async () => {\n    try {\n      const response = await axios.get('/api/users');\n      console.log('Fetched users:', response.data);\n      setUsers(response.data);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n      setError('Failed to fetch users. Please try again.');\n    }\n  };\n  const handleOpen = () => {\n    setError(null);\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setError(null);\n    setOpen(false);\n  };\n  const handleSubmit = async () => {\n    try {\n      if (!newEntry.project_id) {\n        setError('Please select a project');\n        return;\n      }\n      if (!newEntry.user_id) {\n        setError('Please select a user');\n        return;\n      }\n      if (!newEntry.start_time) {\n        setError('Start time is required');\n        return;\n      }\n      if (!newEntry.end_time) {\n        setError('End time is required');\n        return;\n      }\n      console.log('Submitting new time entry:', newEntry);\n      const response = await axios.post('/api/time-entries', newEntry);\n      console.log('Time entry created:', response.data);\n      fetchTimeEntries();\n      handleClose();\n      setNewEntry({\n        project_id: '',\n        user_id: '',\n        start_time: '',\n        end_time: '',\n        description: ''\n      });\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error creating time entry:', error);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Failed to create time entry. Please try again.');\n    }\n  };\n  const calculateDuration = (startTime, endTime) => {\n    const start = new Date(startTime);\n    const end = new Date(endTime);\n    const diffInMilliseconds = end - start;\n    const hours = Math.floor(diffInMilliseconds / (1000 * 60 * 60));\n    const minutes = Math.floor(diffInMilliseconds % (1000 * 60 * 60) / (1000 * 60));\n    return `${hours}h ${minutes}m`;\n  };\n  const addProjectRow = () => {\n    setWeeklyEntries([...weeklyEntries, initialEntry(selectedUser)]);\n  };\n  const removeProjectRow = idx => {\n    setWeeklyEntries(weeklyEntries.filter((_, i) => i !== idx));\n  };\n  const handleWeeklyChange = (idx, field, value) => {\n    const updated = [...weeklyEntries];\n    updated[idx][field] = value;\n    setWeeklyEntries(updated);\n  };\n  const handleHourChange = (idx, day, value) => {\n    const updated = [...weeklyEntries];\n    if (typeof value === 'string') {\n      updated[idx].hours[day] = value.replace(/[^0-9.]/g, '');\n    } else {\n      updated[idx].hours[day] = value;\n    }\n    setWeeklyEntries(updated);\n  };\n  const dayTotals = daysOfWeek.map(day => weeklyEntries.reduce((sum, entry) => sum + (parseFloat(entry.hours[day.key]) || 0), 0));\n  const projectTotals = weeklyEntries.map(entry => daysOfWeek.reduce((sum, day) => sum + (parseFloat(entry.hours[day.key]) || 0), 0));\n  const requiredHoursTotal = Object.values(requiredHoursPerDay).reduce((a, b) => a + b, 0);\n  const handleWeeklySubmit = async () => {\n    setError(null);\n    let hasError = false;\n    for (const entry of weeklyEntries) {\n      if (!entry.project_id || !entry.user_id) {\n        setError('Please select a project and user for each row.');\n        hasError = true;\n        break;\n      }\n    }\n    if (hasError) return;\n    const submissionTime = new Date().toISOString();\n    const promises = [];\n    // Only submit entries that are not yet submitted\n    weeklyEntries.forEach((entry, idx) => {\n      if (entry.submitted) return;\n      daysOfWeek.forEach((day, i) => {\n        const hours = parseFloat(entry.hours[day.key]);\n        if (hours && hours > 0) {\n          const date = new Date(weekStart);\n          date.setDate(date.getDate() + i);\n          const start_time = new Date(date);\n          start_time.setHours(9, 0, 0, 0);\n          const end_time = new Date(start_time);\n          end_time.setHours(start_time.getHours() + hours);\n          promises.push(axios.post('/api/time-entries', {\n            project_id: entry.project_id,\n            user_id: entry.user_id,\n            start_time: start_time.toISOString(),\n            end_time: end_time.toISOString(),\n            description: '',\n            submission_time: submissionTime\n          }));\n        }\n      });\n    });\n    try {\n      await Promise.all(promises);\n      fetchTimeEntries();\n      // Mark submitted entries as submitted\n      setWeeklyEntries(weeklyEntries.map(entry => entry.submitted ? entry : {\n        ...entry,\n        submitted: true\n      }));\n    } catch (error) {\n      setError('Failed to submit time entries.');\n    }\n  };\n\n  // Group timeEntries by project_name and submission_time, filtered by selected user\n  const filteredEntries = timeEntries.filter(e => !selectedUser || e.user_id === selectedUser);\n  const groupedEntries = Object.values(filteredEntries.reduce((acc, entry) => {\n    const key = `${entry.project_name}|${entry.submission_time}`;\n    if (!acc[key]) {\n      acc[key] = {\n        project_name: entry.project_name,\n        submission_time: entry.submission_time,\n        total_hours: 0\n      };\n    }\n    acc[key].total_hours += (new Date(entry.end_time) - new Date(entry.start_time)) / (1000 * 60 * 60);\n    return acc;\n  }, {})).sort((a, b) => new Date(b.submission_time) - new Date(a.submission_time));\n\n  // In the log table, assign numbers so the most recent entry gets the largest number\n  groupedEntries.forEach((entry, idx, arr) => entry.displayNumber = arr.length - idx);\n  const handleEditOpen = entry => {\n    var _weekEntries$, _weekEntries$2, _weekEntries$3;\n    // Find all entries for this project and submission_time\n    const weekEntries = timeEntries.filter(e => e.project_name === entry.project_name && e.submission_time === entry.submission_time);\n    // Build hours object for the week\n    const hours = {};\n    daysOfWeek.forEach(day => {\n      const dayEntry = weekEntries.find(e => {\n        const date = new Date(e.start_time);\n        // Convert Sunday (0) to 7 to match our daysOfWeek array\n        const dayOfWeek = date.getDay() === 0 ? 7 : date.getDay();\n        return dayOfWeek === daysOfWeek.findIndex(d => d.key === day.key) + 1;\n      });\n      hours[day.key] = dayEntry ? ((new Date(dayEntry.end_time) - new Date(dayEntry.start_time)) / (1000 * 60 * 60)).toString() : '';\n    });\n    setEditWeekEntry({\n      id: (_weekEntries$ = weekEntries[0]) === null || _weekEntries$ === void 0 ? void 0 : _weekEntries$.id,\n      project_id: ((_weekEntries$2 = weekEntries[0]) === null || _weekEntries$2 === void 0 ? void 0 : _weekEntries$2.project_id) || '',\n      hours,\n      submission_time: entry.submission_time,\n      user_id: ((_weekEntries$3 = weekEntries[0]) === null || _weekEntries$3 === void 0 ? void 0 : _weekEntries$3.user_id) || ''\n    });\n    setEditDialogOpen(true);\n    setEditError('');\n  };\n  const handleEditClose = () => {\n    setEditDialogOpen(false);\n    setEditWeekEntry(null);\n    setEditError('');\n  };\n  const handleEditSave = async () => {\n    setEditLoading(true);\n    setEditError('');\n    try {\n      const results = await Promise.all(daysOfWeek.map(async (day, i) => {\n        const hours = parseFloat(editWeekEntry.hours[day.key]);\n        const date = new Date(editWeekEntry.submission_time);\n        date.setDate(date.getDate() - date.getDay() + (i + 1));\n        const dayEntry = timeEntries.find(e => {\n          var _groupedEntries$find;\n          const entryDate = new Date(e.start_time);\n          return e.submission_time === editWeekEntry.submission_time && e.project_name === ((_groupedEntries$find = groupedEntries.find(g => g.submission_time === editWeekEntry.submission_time && g.project_name === e.project_name)) === null || _groupedEntries$find === void 0 ? void 0 : _groupedEntries$find.project_name) && entryDate.toDateString() === date.toDateString();\n        });\n        try {\n          if (hours && hours > 0) {\n            if (dayEntry) {\n              const start_time = new Date(date);\n              start_time.setHours(9, 0, 0, 0);\n              const end_time = new Date(start_time);\n              end_time.setHours(start_time.getHours() + hours);\n              await axios.patch(`/api/time-entries/${dayEntry.id}`, {\n                project_id: editWeekEntry.project_id,\n                start_time: start_time.toISOString(),\n                end_time: end_time.toISOString()\n              });\n              return null;\n            } else {\n              const start_time = new Date(date);\n              start_time.setHours(9, 0, 0, 0);\n              const end_time = new Date(start_time);\n              end_time.setHours(start_time.getHours() + hours);\n              await axios.post('/api/time-entries', {\n                project_id: editWeekEntry.project_id,\n                user_id: editWeekEntry.user_id,\n                start_time: start_time.toISOString(),\n                end_time: end_time.toISOString(),\n                description: '',\n                submission_time: editWeekEntry.submission_time\n              });\n              return null;\n            }\n          } else if (dayEntry) {\n            await axios.delete(`/api/time-entries/${dayEntry.id}`);\n            return null;\n          }\n          return null;\n        } catch (err) {\n          return day.label;\n        }\n      }));\n      const failedDays = results.filter(Boolean);\n      if (failedDays.length === daysOfWeek.length) {\n        setEditError('Failed to update entry.');\n      } else if (failedDays.length > 0) {\n        setEditError('Some days failed to update: ' + failedDays.join(', '));\n      } else {\n        setEditDialogOpen(false);\n        fetchTimeEntries();\n      }\n    } finally {\n      setEditLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        mb: 2,\n        gap: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Time Entries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        select: true,\n        size: \"small\",\n        label: \"User\",\n        value: selectedUser,\n        onChange: e => {\n          setSelectedUser(e.target.value);\n          setWeeklyEntries(weeklyEntries.map(entry => ({\n            ...entry,\n            user_id: e.target.value\n          })));\n        },\n        sx: {\n          minWidth: 180,\n          ml: 2\n        },\n        children: users.map(user => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: user.id,\n          children: user.name\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      sx: {\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: [/*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              height: 40,\n              minHeight: 40\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 15\n            }, this), daysOfWeek.map((day, i) => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              sx: {\n                backgroundColor: day.key === 'sat' || day.key === 'sun' ? '#f5f5f5' : undefined,\n                fontWeight: 'bold',\n                p: 0,\n                pt: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(DayHourBar, {\n                hours: dayTotals[i],\n                isWeekend: day.key === 'sat' || day.key === 'sun'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: 13,\n                  fontWeight: 500,\n                  marginTop: 2,\n                  color: dayTotals[i] >= 8 ? '#1976d2' : undefined,\n                  borderBottom: dayTotals[i] >= 8 ? '3px solid #1976d2' : undefined,\n                  display: 'inline-block',\n                  paddingBottom: 1,\n                  transition: 'color 0.2s, border-bottom 0.2s'\n                },\n                children: day.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 19\n              }, this)]\n            }, day.key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                width: 1,\n                minWidth: 1,\n                px: 0.25,\n                py: 0\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                width: '100%'\n              },\n              children: \"Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 15\n            }, this), daysOfWeek.map((day, i) => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              sx: {\n                backgroundColor: day.key === 'sat' || day.key === 'sun' ? '#f5f5f5' : undefined,\n                minWidth: 56,\n                px: 0.5,\n                py: 0.5,\n                fontWeight: 'normal',\n                fontSize: 13\n              },\n              children: format(new Date(weekStart.getTime() + i * 86400000), 'dd.MM')\n            }, day.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: [weeklyEntries.map((entry, idx) => /*#__PURE__*/_jsxDEV(TableRow, {\n            sx: entry.submitted ? {\n              color: '#bdbdbd'\n            } : {},\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                width: '100%'\n              },\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                select: true,\n                size: \"small\",\n                value: entry.project_id,\n                onChange: e => handleWeeklyChange(idx, 'project_id', e.target.value),\n                fullWidth: true,\n                disabled: entry.submitted,\n                InputProps: {\n                  style: entry.submitted ? {\n                    color: '#bdbdbd'\n                  } : {}\n                },\n                children: projects.map(project => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: project.id,\n                  children: project.name\n                }, project.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 522,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 17\n            }, this), daysOfWeek.map(day => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              sx: {\n                backgroundColor: day.key === 'sat' || day.key === 'sun' ? '#f5f5f5' : undefined,\n                minWidth: 56,\n                px: 0.5,\n                py: 0.5\n              },\n              children: /*#__PURE__*/_jsxDEV(HourInput, {\n                value: entry.hours[day.key],\n                onChange: val => handleHourChange(idx, day.key, val),\n                disabled: entry.submitted,\n                style: entry.submitted ? {\n                  color: '#bdbdbd'\n                } : {}\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 21\n              }, this)\n            }, day.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              sx: {\n                fontWeight: 'bold',\n                color: entry.submitted ? '#bdbdbd' : undefined\n              },\n              children: projectTotals[idx]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                width: 1,\n                minWidth: 1,\n                px: 0.25,\n                py: 0\n              },\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => removeProjectRow(idx),\n                disabled: weeklyEntries.length === 1 || entry.submitted,\n                sx: {\n                  p: 0.25\n                },\n                children: /*#__PURE__*/_jsxDEV(Delete, {\n                  fontSize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 539,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 17\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(TableRow, {\n            children: /*#__PURE__*/_jsxDEV(TableCell, {\n              colSpan: daysOfWeek.length + 3,\n              sx: {\n                border: 'none',\n                p: 1\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"text\",\n                color: \"primary\",\n                size: \"small\",\n                startIcon: /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 550,\n                  columnNumber: 30\n                }, this),\n                onClick: addProjectRow,\n                sx: {\n                  mt: 1,\n                  fontWeight: 'normal',\n                  fontSize: 16,\n                  textTransform: 'none',\n                  pl: 0,\n                  minHeight: 'unset',\n                  minWidth: 'unset',\n                  p: 0\n                },\n                children: \"Add Project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                fontWeight: 'bold'\n              },\n              children: \"Required Hours\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 15\n            }, this), daysOfWeek.map(day => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              sx: {\n                color: 'gray',\n                backgroundColor: day.key === 'sat' || day.key === 'sun' ? '#f5f5f5' : undefined\n              },\n              children: requiredHoursPerDay[day.key]\n            }, day.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              sx: {\n                color: 'gray',\n                fontWeight: 'bold'\n              },\n              children: requiredHoursTotal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                width: 1,\n                minWidth: 1,\n                px: 0.25,\n                py: 0\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                fontWeight: 'bold'\n              },\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 15\n            }, this), dayTotals.map((total, i) => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              sx: {\n                color: total < requiredHoursPerDay[daysOfWeek[i].key] ? 'red' : 'inherit',\n                backgroundColor: daysOfWeek[i].key === 'sat' || daysOfWeek[i].key === 'sun' ? '#f5f5f5' : undefined\n              },\n              children: total\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              sx: {\n                fontWeight: 'bold',\n                color: dayTotals.reduce((a, b) => a + b, 0) < requiredHoursTotal ? 'red' : 'inherit'\n              },\n              children: dayTotals.reduce((a, b) => a + b, 0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                width: 1,\n                minWidth: 1,\n                px: 0.25,\n                py: 0\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        gap: 2,\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleWeeklySubmit,\n        children: \"Submit Week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Time Log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Total Hours\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Submission Date/Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: groupedEntries.map(entry => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: entry.displayNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: entry.project_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: entry.total_hours.toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: entry.submission_time ? format(new Date(entry.submission_time), 'PPpp') : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                variant: \"outlined\",\n                onClick: () => handleEditOpen(entry),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 605,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 17\n            }, this)]\n          }, entry.project_name + entry.submission_time, true, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Add Time Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TimeEntryForm, {\n        entry: newEntry,\n        projects: projects,\n        users: users,\n        error: error,\n        onChange: setNewEntry,\n        onSubmit: handleSubmit,\n        onCancel: handleClose,\n        submitLabel: \"Add Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: editDialogOpen,\n      onClose: handleEditClose,\n      maxWidth: \"lg\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Edit Time Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SingleProjectWeekEditor, {\n        entry: editWeekEntry || {\n          project_id: '',\n          hours: {}\n        },\n        projects: projects,\n        daysOfWeek: daysOfWeek,\n        weekStart: getMonday(new Date((editWeekEntry === null || editWeekEntry === void 0 ? void 0 : editWeekEntry.submission_time) || new Date())),\n        onChange: setEditWeekEntry,\n        onSave: handleEditSave,\n        onCancel: handleEditClose,\n        error: editError,\n        loading: editLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 448,\n    columnNumber: 5\n  }, this);\n}\n_s(TimeEntries, \"CXQ2la9B/W9ptUuKtSPxGMudZ8I=\");\n_c3 = TimeEntries;\nexport default TimeEntries;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"HourInput\");\n$RefreshReg$(_c2, \"LOCAL_STORAGE_KEY\");\n$RefreshReg$(_c3, \"TimeEntries\");","map":{"version":3,"names":["React","useState","useEffect","Box","Button","Typography","TextField","Dialog","DialogTitle","DialogContent","DialogActions","MenuItem","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Alert","IconButton","format","axios","Add","Delete","Remove","Edit","EditIcon","TimeEntryForm","SingleProjectWeekEditor","DayHourBar","jsxDEV","_jsxDEV","daysOfWeek","key","label","requiredHoursPerDay","mon","tue","wed","thu","fri","sat","sun","getMonday","d","Date","day","getDay","diff","getDate","setDate","HourInput","value","onChange","handleDecrement","newValue","Math","max","parseFloat","handleIncrement","min","sx","display","alignItems","border","borderRadius","px","py","minWidth","justifyContent","background","children","size","onClick","p","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","mx","textAlign","fontWeight","_c","LOCAL_STORAGE_KEY","userId","_c2","initialEntry","user_id","project_id","hours","submitted","TimeEntries","_s","timeEntries","setTimeEntries","projects","setProjects","users","setUsers","open","setOpen","error","setError","newEntry","setNewEntry","start_time","end_time","description","weeklyEntries","setWeeklyEntries","weekStart","setWeekStart","selectedUser","setSelectedUser","editDialogOpen","setEditDialogOpen","editWeekEntry","setEditWeekEntry","editLoading","setEditLoading","editError","setEditError","fetchTimeEntries","fetchProjects","fetchUsers","length","id","map","entry","saved","localStorage","getItem","JSON","parse","setItem","stringify","response","get","console","log","data","handleOpen","handleClose","handleSubmit","post","_error$response","_error$response$data","calculateDuration","startTime","endTime","start","end","diffInMilliseconds","floor","minutes","addProjectRow","removeProjectRow","idx","filter","_","i","handleWeeklyChange","field","updated","handleHourChange","replace","dayTotals","reduce","sum","projectTotals","requiredHoursTotal","Object","values","a","b","handleWeeklySubmit","hasError","submissionTime","toISOString","promises","forEach","date","setHours","getHours","push","submission_time","Promise","all","filteredEntries","e","groupedEntries","acc","project_name","total_hours","sort","arr","displayNumber","handleEditOpen","_weekEntries$","_weekEntries$2","_weekEntries$3","weekEntries","dayEntry","find","dayOfWeek","findIndex","toString","handleEditClose","handleEditSave","results","_groupedEntries$find","entryDate","g","toDateString","patch","delete","err","failedDays","Boolean","join","mb","gap","variant","select","target","ml","user","name","component","height","minHeight","align","backgroundColor","undefined","pt","isWeekend","style","marginTop","color","borderBottom","paddingBottom","transition","width","getTime","fullWidth","disabled","InputProps","project","val","colSpan","startIcon","mt","textTransform","pl","total","severity","toFixed","onClose","onSubmit","onCancel","submitLabel","maxWidth","onSave","loading","_c3","$RefreshReg$"],"sources":["C:/Users/golun/TimeTracker/client/src/pages/TimeEntries.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Button,\n  Typography,\n  TextField,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  MenuItem,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Alert,\n  IconButton\n} from '@mui/material';\nimport { format } from 'date-fns';\nimport axios from 'axios';\nimport { Add, Delete, Remove, Edit as EditIcon } from '@mui/icons-material';\nimport TimeEntryForm from '../components/TimeEntryForm';\nimport SingleProjectWeekEditor from '../components/SingleProjectWeekEditor';\nimport DayHourBar from '../components/DayHourBar';\n\nconst daysOfWeek = [\n  { key: 'mon', label: 'Mon' },\n  { key: 'tue', label: 'Tue' },\n  { key: 'wed', label: 'Wed' },\n  { key: 'thu', label: 'Thu' },\n  { key: 'fri', label: 'Fri' },\n  { key: 'sat', label: 'Sat' },\n  { key: 'sun', label: 'Sun' },\n];\nconst requiredHoursPerDay = {\n  mon: 8,\n  tue: 8,\n  wed: 8,\n  thu: 8,\n  fri: 8,\n  sat: 0,\n  sun: 0,\n};\n\nfunction getMonday(d) {\n  d = new Date(d);\n  var day = d.getDay(),\n    diff = d.getDate() - day + (day === 0 ? -6 : 1); // adjust when day is sunday\n  return new Date(d.setDate(diff));\n}\n\nfunction HourInput({ value, onChange }) {\n  const handleDecrement = () => {\n    const newValue = Math.max(0, (parseFloat(value) || 0) - 1);\n    onChange(newValue === 0 ? '' : newValue);\n  };\n  const handleIncrement = () => {\n    const newValue = Math.min(24, (parseFloat(value) || 0) + 1);\n    onChange(newValue);\n  };\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'center', border: '1px solid #e0e0e0', borderRadius: 2, px: 0.5, py: 0.2, minWidth: 48, justifyContent: 'center', background: '#fff' }}>\n      <IconButton size=\"small\" onClick={handleDecrement} sx={{ p: 0.25 }}>\n        <Remove fontSize=\"small\" />\n      </IconButton>\n      <Typography sx={{ mx: 0.5, minWidth: 16, textAlign: 'center', fontWeight: 500, fontSize: 14 }}>\n        {value || 0}\n      </Typography>\n      <IconButton size=\"small\" onClick={handleIncrement} sx={{ p: 0.25 }}>\n        <Add fontSize=\"small\" />\n      </IconButton>\n    </Box>\n  );\n}\n\nconst LOCAL_STORAGE_KEY = userId => `weeklyEntries_${userId}`;\n\n// Update initial entry structure to include 'submitted'\nconst initialEntry = (user_id = '') => ({\n  project_id: '',\n  user_id,\n  hours: { mon: '', tue: '', wed: '', thu: '', fri: '', sat: '', sun: '' },\n  submitted: false,\n});\n\nfunction TimeEntries() {\n  const [timeEntries, setTimeEntries] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [error, setError] = useState(null);\n  const [newEntry, setNewEntry] = useState({\n    project_id: '',\n    user_id: '',\n    start_time: '',\n    end_time: '',\n    description: '',\n  });\n  const [weeklyEntries, setWeeklyEntries] = useState([\n    {\n      project_id: '',\n      user_id: '',\n      hours: { mon: '', tue: '', wed: '', thu: '', fri: '', sat: '', sun: '' },\n    },\n  ]);\n  const [weekStart, setWeekStart] = useState(getMonday(new Date()));\n  const [selectedUser, setSelectedUser] = useState('');\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [editWeekEntry, setEditWeekEntry] = useState(null);\n  const [editLoading, setEditLoading] = useState(false);\n  const [editError, setEditError] = useState('');\n\n  useEffect(() => {\n    fetchTimeEntries();\n    fetchProjects();\n    fetchUsers();\n  }, []);\n\n  useEffect(() => {\n    if (users.length > 0 && !selectedUser) {\n      setSelectedUser(users[0].id);\n      setWeeklyEntries(weeklyEntries.map(entry => ({ ...entry, user_id: users[0].id })));\n    }\n    // eslint-disable-next-line\n  }, [users]);\n\n  useEffect(() => {\n    if (selectedUser) {\n      const saved = localStorage.getItem(LOCAL_STORAGE_KEY(selectedUser));\n      if (saved) {\n        setWeeklyEntries(JSON.parse(saved));\n      } else {\n        setWeeklyEntries([initialEntry(selectedUser)]);\n      }\n    }\n    // eslint-disable-next-line\n  }, [selectedUser]);\n\n  useEffect(() => {\n    if (selectedUser) {\n      localStorage.setItem(LOCAL_STORAGE_KEY(selectedUser), JSON.stringify(weeklyEntries));\n    }\n    // eslint-disable-next-line\n  }, [weeklyEntries, selectedUser]);\n\n  const fetchTimeEntries = async () => {\n    try {\n      const response = await axios.get('/api/time-entries');\n      console.log('Fetched time entries:', response.data);\n      setTimeEntries(response.data);\n    } catch (error) {\n      console.error('Error fetching time entries:', error);\n      setError('Failed to fetch time entries. Please try again.');\n    }\n  };\n\n  const fetchProjects = async () => {\n    try {\n      const response = await axios.get('/api/projects');\n      console.log('Fetched projects:', response.data);\n      setProjects(response.data);\n    } catch (error) {\n      console.error('Error fetching projects:', error);\n      setError('Failed to fetch projects. Please try again.');\n    }\n  };\n\n  const fetchUsers = async () => {\n    try {\n      const response = await axios.get('/api/users');\n      console.log('Fetched users:', response.data);\n      setUsers(response.data);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n      setError('Failed to fetch users. Please try again.');\n    }\n  };\n\n  const handleOpen = () => {\n    setError(null);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setError(null);\n    setOpen(false);\n  };\n\n  const handleSubmit = async () => {\n    try {\n      if (!newEntry.project_id) {\n        setError('Please select a project');\n        return;\n      }\n\n      if (!newEntry.user_id) {\n        setError('Please select a user');\n        return;\n      }\n\n      if (!newEntry.start_time) {\n        setError('Start time is required');\n        return;\n      }\n\n      if (!newEntry.end_time) {\n        setError('End time is required');\n        return;\n      }\n\n      console.log('Submitting new time entry:', newEntry);\n      const response = await axios.post('/api/time-entries', newEntry);\n      console.log('Time entry created:', response.data);\n      \n      fetchTimeEntries();\n      handleClose();\n      setNewEntry({\n        project_id: '',\n        user_id: '',\n        start_time: '',\n        end_time: '',\n        description: '',\n      });\n    } catch (error) {\n      console.error('Error creating time entry:', error);\n      setError(error.response?.data?.error || 'Failed to create time entry. Please try again.');\n    }\n  };\n\n  const calculateDuration = (startTime, endTime) => {\n    const start = new Date(startTime);\n    const end = new Date(endTime);\n    const diffInMilliseconds = end - start;\n    const hours = Math.floor(diffInMilliseconds / (1000 * 60 * 60));\n    const minutes = Math.floor((diffInMilliseconds % (1000 * 60 * 60)) / (1000 * 60));\n    return `${hours}h ${minutes}m`;\n  };\n\n  const addProjectRow = () => {\n    setWeeklyEntries([\n      ...weeklyEntries,\n      initialEntry(selectedUser),\n    ]);\n  };\n\n  const removeProjectRow = (idx) => {\n    setWeeklyEntries(weeklyEntries.filter((_, i) => i !== idx));\n  };\n\n  const handleWeeklyChange = (idx, field, value) => {\n    const updated = [...weeklyEntries];\n    updated[idx][field] = value;\n    setWeeklyEntries(updated);\n  };\n\n  const handleHourChange = (idx, day, value) => {\n    const updated = [...weeklyEntries];\n    if (typeof value === 'string') {\n      updated[idx].hours[day] = value.replace(/[^0-9.]/g, '');\n    } else {\n      updated[idx].hours[day] = value;\n    }\n    setWeeklyEntries(updated);\n  };\n\n  const dayTotals = daysOfWeek.map(day =>\n    weeklyEntries.reduce((sum, entry) => sum + (parseFloat(entry.hours[day.key]) || 0), 0)\n  );\n  const projectTotals = weeklyEntries.map(entry =>\n    daysOfWeek.reduce((sum, day) => sum + (parseFloat(entry.hours[day.key]) || 0), 0)\n  );\n  const requiredHoursTotal = Object.values(requiredHoursPerDay).reduce((a, b) => a + b, 0);\n\n  const handleWeeklySubmit = async () => {\n    setError(null);\n    let hasError = false;\n    for (const entry of weeklyEntries) {\n      if (!entry.project_id || !entry.user_id) {\n        setError('Please select a project and user for each row.');\n        hasError = true;\n        break;\n      }\n    }\n    if (hasError) return;\n    const submissionTime = new Date().toISOString();\n    const promises = [];\n    // Only submit entries that are not yet submitted\n    weeklyEntries.forEach((entry, idx) => {\n      if (entry.submitted) return;\n      daysOfWeek.forEach((day, i) => {\n        const hours = parseFloat(entry.hours[day.key]);\n        if (hours && hours > 0) {\n          const date = new Date(weekStart);\n          date.setDate(date.getDate() + i);\n          const start_time = new Date(date);\n          start_time.setHours(9, 0, 0, 0);\n          const end_time = new Date(start_time);\n          end_time.setHours(start_time.getHours() + hours);\n          promises.push(\n            axios.post('/api/time-entries', {\n              project_id: entry.project_id,\n              user_id: entry.user_id,\n              start_time: start_time.toISOString(),\n              end_time: end_time.toISOString(),\n              description: '',\n              submission_time: submissionTime,\n            })\n          );\n        }\n      });\n    });\n    try {\n      await Promise.all(promises);\n      fetchTimeEntries();\n      // Mark submitted entries as submitted\n      setWeeklyEntries(weeklyEntries.map(entry =>\n        entry.submitted ? entry : { ...entry, submitted: true }\n      ));\n    } catch (error) {\n      setError('Failed to submit time entries.');\n    }\n  };\n\n  // Group timeEntries by project_name and submission_time, filtered by selected user\n  const filteredEntries = timeEntries.filter(e => !selectedUser || e.user_id === selectedUser);\n  const groupedEntries = Object.values(\n    filteredEntries.reduce((acc, entry) => {\n      const key = `${entry.project_name}|${entry.submission_time}`;\n      if (!acc[key]) {\n        acc[key] = {\n          project_name: entry.project_name,\n          submission_time: entry.submission_time,\n          total_hours: 0,\n        };\n      }\n      acc[key].total_hours += (new Date(entry.end_time) - new Date(entry.start_time)) / (1000 * 60 * 60);\n      return acc;\n    }, {})\n  ).sort((a, b) => new Date(b.submission_time) - new Date(a.submission_time));\n\n  // In the log table, assign numbers so the most recent entry gets the largest number\n  groupedEntries.forEach((entry, idx, arr) => entry.displayNumber = arr.length - idx);\n\n  const handleEditOpen = (entry) => {\n    // Find all entries for this project and submission_time\n    const weekEntries = timeEntries.filter(e => e.project_name === entry.project_name && e.submission_time === entry.submission_time);\n    // Build hours object for the week\n    const hours = {};\n    daysOfWeek.forEach(day => {\n      const dayEntry = weekEntries.find(e => {\n        const date = new Date(e.start_time);\n        // Convert Sunday (0) to 7 to match our daysOfWeek array\n        const dayOfWeek = date.getDay() === 0 ? 7 : date.getDay();\n        return dayOfWeek === daysOfWeek.findIndex(d => d.key === day.key) + 1;\n      });\n      hours[day.key] = dayEntry ? ((new Date(dayEntry.end_time) - new Date(dayEntry.start_time)) / (1000 * 60 * 60)).toString() : '';\n    });\n    setEditWeekEntry({\n      id: weekEntries[0]?.id,\n      project_id: weekEntries[0]?.project_id || '',\n      hours,\n      submission_time: entry.submission_time,\n      user_id: weekEntries[0]?.user_id || '',\n    });\n    setEditDialogOpen(true);\n    setEditError('');\n  };\n\n  const handleEditClose = () => {\n    setEditDialogOpen(false);\n    setEditWeekEntry(null);\n    setEditError('');\n  };\n\n  const handleEditSave = async () => {\n    setEditLoading(true);\n    setEditError('');\n    try {\n      const results = await Promise.all(\n        daysOfWeek.map(async (day, i) => {\n          const hours = parseFloat(editWeekEntry.hours[day.key]);\n          const date = new Date(editWeekEntry.submission_time);\n          date.setDate(date.getDate() - date.getDay() + (i + 1));\n          const dayEntry = timeEntries.find(e => {\n            const entryDate = new Date(e.start_time);\n            return (\n              e.submission_time === editWeekEntry.submission_time &&\n              e.project_name === groupedEntries.find(g => g.submission_time === editWeekEntry.submission_time && g.project_name === e.project_name)?.project_name &&\n              entryDate.toDateString() === date.toDateString()\n            );\n          });\n          try {\n            if (hours && hours > 0) {\n              if (dayEntry) {\n                const start_time = new Date(date);\n                start_time.setHours(9, 0, 0, 0);\n                const end_time = new Date(start_time);\n                end_time.setHours(start_time.getHours() + hours);\n                await axios.patch(`/api/time-entries/${dayEntry.id}`, {\n                  project_id: editWeekEntry.project_id,\n                  start_time: start_time.toISOString(),\n                  end_time: end_time.toISOString(),\n                });\n                return null;\n              } else {\n                const start_time = new Date(date);\n                start_time.setHours(9, 0, 0, 0);\n                const end_time = new Date(start_time);\n                end_time.setHours(start_time.getHours() + hours);\n                await axios.post('/api/time-entries', {\n                  project_id: editWeekEntry.project_id,\n                  user_id: editWeekEntry.user_id,\n                  start_time: start_time.toISOString(),\n                  end_time: end_time.toISOString(),\n                  description: '',\n                  submission_time: editWeekEntry.submission_time,\n                });\n                return null;\n              }\n            } else if (dayEntry) {\n              await axios.delete(`/api/time-entries/${dayEntry.id}`);\n              return null;\n            }\n            return null;\n          } catch (err) {\n            return day.label;\n          }\n        })\n      );\n      const failedDays = results.filter(Boolean);\n      if (failedDays.length === daysOfWeek.length) {\n        setEditError('Failed to update entry.');\n      } else if (failedDays.length > 0) {\n        setEditError('Some days failed to update: ' + failedDays.join(', '));\n      } else {\n        setEditDialogOpen(false);\n        fetchTimeEntries();\n      }\n    } finally {\n      setEditLoading(false);\n    }\n  };\n\n  return (\n    <Box>\n      <Box sx={{ display: 'flex', alignItems: 'center', mb: 2, gap: 2 }}>\n        <Typography variant=\"h4\">Time Entries</Typography>\n        <TextField\n          select\n          size=\"small\"\n          label=\"User\"\n          value={selectedUser}\n          onChange={e => {\n            setSelectedUser(e.target.value);\n            setWeeklyEntries(weeklyEntries.map(entry => ({ ...entry, user_id: e.target.value })));\n          }}\n          sx={{ minWidth: 180, ml: 2 }}\n        >\n          {users.map(user => (\n            <MenuItem key={user.id} value={user.id}>{user.name}</MenuItem>\n          ))}\n        </TextField>\n      </Box>\n      <TableContainer component={Paper} sx={{ mb: 3 }}>\n        <Table size=\"small\">\n          <TableHead>\n            {/* Weekday names row */}\n            <TableRow sx={{ height: 40, minHeight: 40 }}>\n              <TableCell></TableCell>\n              {daysOfWeek.map((day, i) => (\n                <TableCell key={day.key} align=\"center\" sx={{ backgroundColor: (day.key === 'sat' || day.key === 'sun') ? '#f5f5f5' : undefined, fontWeight: 'bold', p: 0, pt: 1 }}>\n                  <DayHourBar\n                    hours={dayTotals[i]}\n                    isWeekend={day.key === 'sat' || day.key === 'sun'}\n                  />\n                  <div\n                    style={{\n                      fontSize: 13,\n                      fontWeight: 500,\n                      marginTop: 2,\n                      color: dayTotals[i] >= 8 ? '#1976d2' : undefined,\n                      borderBottom: dayTotals[i] >= 8 ? '3px solid #1976d2' : undefined,\n                      display: 'inline-block',\n                      paddingBottom: 1,\n                      transition: 'color 0.2s, border-bottom 0.2s',\n                    }}\n                  >\n                    {day.label}\n                  </div>\n                </TableCell>\n              ))}\n              <TableCell sx={{ width: 1, minWidth: 1, px: 0.25, py: 0 }}></TableCell>\n            </TableRow>\n            {/* Date row */}\n            <TableRow>\n              <TableCell sx={{ width: '100%' }}>Project</TableCell>\n              {daysOfWeek.map((day, i) => (\n                <TableCell key={day.key} align=\"center\" sx={{ backgroundColor: (day.key === 'sat' || day.key === 'sun') ? '#f5f5f5' : undefined, minWidth: 56, px: 0.5, py: 0.5, fontWeight: 'normal', fontSize: 13 }}>\n                  {format(new Date(weekStart.getTime() + i * 86400000), 'dd.MM')}\n                </TableCell>\n              ))}\n              <TableCell align=\"center\">Total</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {weeklyEntries.map((entry, idx) => (\n              <TableRow key={idx} sx={entry.submitted ? { color: '#bdbdbd' } : {}}>\n                <TableCell sx={{ width: '100%' }}>\n                  <TextField\n                    select\n                    size=\"small\"\n                    value={entry.project_id}\n                    onChange={e => handleWeeklyChange(idx, 'project_id', e.target.value)}\n                    fullWidth\n                    disabled={entry.submitted}\n                    InputProps={{ style: entry.submitted ? { color: '#bdbdbd' } : {} }}\n                  >\n                    {projects.map(project => (\n                      <MenuItem key={project.id} value={project.id}>{project.name}</MenuItem>\n                    ))}\n                  </TextField>\n                </TableCell>\n                {daysOfWeek.map(day => (\n                  <TableCell key={day.key} align=\"center\" sx={{ backgroundColor: (day.key === 'sat' || day.key === 'sun') ? '#f5f5f5' : undefined, minWidth: 56, px: 0.5, py: 0.5 }}>\n                    <HourInput\n                      value={entry.hours[day.key]}\n                      onChange={val => handleHourChange(idx, day.key, val)}\n                      disabled={entry.submitted}\n                      style={entry.submitted ? { color: '#bdbdbd' } : {}}\n                    />\n                  </TableCell>\n                ))}\n                <TableCell align=\"center\" sx={{ fontWeight: 'bold', color: entry.submitted ? '#bdbdbd' : undefined }}>{projectTotals[idx]}</TableCell>\n                <TableCell sx={{ width: 1, minWidth: 1, px: 0.25, py: 0 }}>\n                  <IconButton onClick={() => removeProjectRow(idx)} disabled={weeklyEntries.length === 1 || entry.submitted} sx={{ p: 0.25 }}>\n                    <Delete fontSize=\"small\" />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n            <TableRow>\n              <TableCell colSpan={daysOfWeek.length + 3} sx={{ border: 'none', p: 1 }}>\n                <Button\n                  variant=\"text\"\n                  color=\"primary\"\n                  size=\"small\"\n                  startIcon={<Add />}\n                  onClick={addProjectRow}\n                  sx={{ mt: 1, fontWeight: 'normal', fontSize: 16, textTransform: 'none', pl: 0, minHeight: 'unset', minWidth: 'unset', p: 0 }}\n                >\n                  Add Project\n                </Button>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell sx={{ fontWeight: 'bold' }}>Required Hours</TableCell>\n              {daysOfWeek.map(day => (\n                <TableCell key={day.key} align=\"center\" sx={{ color: 'gray', backgroundColor: (day.key === 'sat' || day.key === 'sun') ? '#f5f5f5' : undefined }}>{requiredHoursPerDay[day.key]}</TableCell>\n              ))}\n              <TableCell align=\"center\" sx={{ color: 'gray', fontWeight: 'bold' }}>{requiredHoursTotal}</TableCell>\n              <TableCell sx={{ width: 1, minWidth: 1, px: 0.25, py: 0 }} />\n            </TableRow>\n            <TableRow>\n              <TableCell sx={{ fontWeight: 'bold' }}>Total</TableCell>\n              {dayTotals.map((total, i) => (\n                <TableCell key={i} align=\"center\" sx={{ color: total < requiredHoursPerDay[daysOfWeek[i].key] ? 'red' : 'inherit', backgroundColor: (daysOfWeek[i].key === 'sat' || daysOfWeek[i].key === 'sun') ? '#f5f5f5' : undefined }}>{total}</TableCell>\n              ))}\n              <TableCell align=\"center\" sx={{ fontWeight: 'bold', color: dayTotals.reduce((a, b) => a + b, 0) < requiredHoursTotal ? 'red' : 'inherit' }}>{dayTotals.reduce((a, b) => a + b, 0)}</TableCell>\n              <TableCell sx={{ width: 1, minWidth: 1, px: 0.25, py: 0 }} />\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Box sx={{ display: 'flex', gap: 2, mb: 3 }}>\n        <Button variant=\"contained\" color=\"primary\" onClick={handleWeeklySubmit}>Submit Week</Button>\n      </Box>\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 2 }}>{error}</Alert>\n      )}\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 3 }}>\n        <Typography variant=\"h4\">Time Log</Typography>\n      </Box>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>#</TableCell>\n              <TableCell>Project</TableCell>\n              <TableCell>Total Hours</TableCell>\n              <TableCell>Submission Date/Time</TableCell>\n              <TableCell align=\"right\">Edit</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {groupedEntries.map((entry) => (\n              <TableRow key={entry.project_name + entry.submission_time}>\n                <TableCell>{entry.displayNumber}</TableCell>\n                <TableCell>{entry.project_name}</TableCell>\n                <TableCell>{entry.total_hours.toFixed(2)}</TableCell>\n                <TableCell>{entry.submission_time ? format(new Date(entry.submission_time), 'PPpp') : ''}</TableCell>\n                <TableCell align=\"right\">\n                  <Button size=\"small\" variant=\"outlined\" onClick={() => handleEditOpen(entry)}>\n                    Edit\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>Add Time Entry</DialogTitle>\n        <TimeEntryForm\n          entry={newEntry}\n          projects={projects}\n          users={users}\n          error={error}\n          onChange={setNewEntry}\n          onSubmit={handleSubmit}\n          onCancel={handleClose}\n          submitLabel=\"Add Entry\"\n        />\n      </Dialog>\n\n      <Dialog open={editDialogOpen} onClose={handleEditClose} maxWidth=\"lg\" fullWidth>\n        <DialogTitle>Edit Time Entry</DialogTitle>\n        <SingleProjectWeekEditor\n          entry={editWeekEntry || { project_id: '', hours: {} }}\n          projects={projects}\n          daysOfWeek={daysOfWeek}\n          weekStart={getMonday(new Date(editWeekEntry?.submission_time || new Date()))}\n          onChange={setEditWeekEntry}\n          onSave={handleEditSave}\n          onCancel={handleEditClose}\n          error={editError}\n          loading={editLoading}\n        />\n      </Dialog>\n    </Box>\n  );\n}\n\nexport default TimeEntries; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}