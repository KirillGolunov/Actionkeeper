{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\golun\\\\TimeTracker\\\\client\\\\src\\\\pages\\\\TimeEntries.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Button, Typography, TextField, Dialog, DialogTitle, DialogContent, DialogActions, MenuItem, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Alert, IconButton } from '@mui/material';\nimport { format } from 'date-fns';\nimport axios from 'axios';\nimport { Add, Delete } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst daysOfWeek = [{\n  key: 'mon',\n  label: 'Mon'\n}, {\n  key: 'tue',\n  label: 'Tue'\n}, {\n  key: 'wed',\n  label: 'Wed'\n}, {\n  key: 'thu',\n  label: 'Thu'\n}, {\n  key: 'fri',\n  label: 'Fri'\n}, {\n  key: 'sat',\n  label: 'Sat'\n}, {\n  key: 'sun',\n  label: 'Sun'\n}];\nconst requiredHoursPerDay = 8;\nfunction getMonday(d) {\n  d = new Date(d);\n  var day = d.getDay(),\n    diff = d.getDate() - day + (day === 0 ? -6 : 1); // adjust when day is sunday\n  return new Date(d.setDate(diff));\n}\nfunction TimeEntries() {\n  _s();\n  const [timeEntries, setTimeEntries] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [error, setError] = useState(null);\n  const [newEntry, setNewEntry] = useState({\n    project_id: '',\n    user_id: '',\n    start_time: '',\n    end_time: '',\n    description: ''\n  });\n  const [weeklyEntries, setWeeklyEntries] = useState([{\n    project_id: '',\n    user_id: '',\n    hours: {\n      mon: '',\n      tue: '',\n      wed: '',\n      thu: '',\n      fri: '',\n      sat: '',\n      sun: ''\n    }\n  }]);\n  const [weekStart, setWeekStart] = useState(getMonday(new Date()));\n  useEffect(() => {\n    fetchTimeEntries();\n    fetchProjects();\n    fetchUsers();\n  }, []);\n  const fetchTimeEntries = async () => {\n    try {\n      const response = await axios.get('/api/time-entries');\n      console.log('Fetched time entries:', response.data);\n      setTimeEntries(response.data);\n    } catch (error) {\n      console.error('Error fetching time entries:', error);\n      setError('Failed to fetch time entries. Please try again.');\n    }\n  };\n  const fetchProjects = async () => {\n    try {\n      const response = await axios.get('/api/projects');\n      console.log('Fetched projects:', response.data);\n      setProjects(response.data);\n    } catch (error) {\n      console.error('Error fetching projects:', error);\n      setError('Failed to fetch projects. Please try again.');\n    }\n  };\n  const fetchUsers = async () => {\n    try {\n      const response = await axios.get('/api/users');\n      console.log('Fetched users:', response.data);\n      setUsers(response.data);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n      setError('Failed to fetch users. Please try again.');\n    }\n  };\n  const handleOpen = () => {\n    setError(null);\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setError(null);\n    setOpen(false);\n  };\n  const handleSubmit = async () => {\n    try {\n      if (!newEntry.project_id) {\n        setError('Please select a project');\n        return;\n      }\n      if (!newEntry.user_id) {\n        setError('Please select a user');\n        return;\n      }\n      if (!newEntry.start_time) {\n        setError('Start time is required');\n        return;\n      }\n      if (!newEntry.end_time) {\n        setError('End time is required');\n        return;\n      }\n      console.log('Submitting new time entry:', newEntry);\n      const response = await axios.post('/api/time-entries', newEntry);\n      console.log('Time entry created:', response.data);\n      fetchTimeEntries();\n      handleClose();\n      setNewEntry({\n        project_id: '',\n        user_id: '',\n        start_time: '',\n        end_time: '',\n        description: ''\n      });\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error creating time entry:', error);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Failed to create time entry. Please try again.');\n    }\n  };\n  const calculateDuration = (startTime, endTime) => {\n    const start = new Date(startTime);\n    const end = new Date(endTime);\n    const diffInMilliseconds = end - start;\n    const hours = Math.floor(diffInMilliseconds / (1000 * 60 * 60));\n    const minutes = Math.floor(diffInMilliseconds % (1000 * 60 * 60) / (1000 * 60));\n    return `${hours}h ${minutes}m`;\n  };\n  const addProjectRow = () => {\n    setWeeklyEntries([...weeklyEntries, {\n      project_id: '',\n      user_id: '',\n      hours: {\n        mon: '',\n        tue: '',\n        wed: '',\n        thu: '',\n        fri: '',\n        sat: '',\n        sun: ''\n      }\n    }]);\n  };\n  const removeProjectRow = idx => {\n    setWeeklyEntries(weeklyEntries.filter((_, i) => i !== idx));\n  };\n  const handleWeeklyChange = (idx, field, value) => {\n    const updated = [...weeklyEntries];\n    updated[idx][field] = value;\n    setWeeklyEntries(updated);\n  };\n  const handleHourChange = (idx, day, value) => {\n    const updated = [...weeklyEntries];\n    updated[idx].hours[day] = value.replace(/[^0-9.]/g, '');\n    setWeeklyEntries(updated);\n  };\n  const dayTotals = daysOfWeek.map(day => weeklyEntries.reduce((sum, entry) => sum + (parseFloat(entry.hours[day.key]) || 0), 0));\n  const projectTotals = weeklyEntries.map(entry => daysOfWeek.reduce((sum, day) => sum + (parseFloat(entry.hours[day.key]) || 0), 0));\n  const requiredHoursTotal = requiredHoursPerDay * daysOfWeek.length;\n  const handleWeeklySubmit = async () => {\n    setError(null);\n    let hasError = false;\n    for (const entry of weeklyEntries) {\n      if (!entry.project_id || !entry.user_id) {\n        setError('Please select a project and user for each row.');\n        hasError = true;\n        break;\n      }\n    }\n    if (hasError) return;\n    const promises = [];\n    weeklyEntries.forEach(entry => {\n      daysOfWeek.forEach((day, i) => {\n        const hours = parseFloat(entry.hours[day.key]);\n        if (hours && hours > 0) {\n          const date = new Date(weekStart);\n          date.setDate(date.getDate() + i);\n          const start_time = new Date(date);\n          start_time.setHours(9, 0, 0, 0);\n          const end_time = new Date(start_time);\n          end_time.setHours(start_time.getHours() + hours);\n          promises.push(axios.post('/api/time-entries', {\n            project_id: entry.project_id,\n            user_id: entry.user_id,\n            start_time: start_time.toISOString(),\n            end_time: end_time.toISOString(),\n            description: ''\n          }));\n        }\n      });\n    });\n    try {\n      await Promise.all(promises);\n      fetchTimeEntries();\n      setWeeklyEntries([{\n        project_id: '',\n        user_id: '',\n        hours: {\n          mon: '',\n          tue: '',\n          wed: '',\n          thu: '',\n          fri: '',\n          sat: '',\n          sun: ''\n        }\n      }]);\n    } catch (error) {\n      setError('Failed to submit time entries.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      sx: {\n        mb: 2\n      },\n      children: \"Time Entries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      sx: {\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this), daysOfWeek.map((day, i) => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: format(new Date(weekStart.getTime() + i * 86400000), 'dd.MM')\n            }, day.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: [weeklyEntries.map((entry, idx) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                minWidth: 150\n              },\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                select: true,\n                size: \"small\",\n                value: entry.project_id,\n                onChange: e => handleWeeklyChange(idx, 'project_id', e.target.value),\n                fullWidth: true,\n                children: projects.map(project => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: project.id,\n                  children: project.name\n                }, project.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                minWidth: 120\n              },\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                select: true,\n                size: \"small\",\n                value: entry.user_id,\n                onChange: e => handleWeeklyChange(idx, 'user_id', e.target.value),\n                fullWidth: true,\n                children: users.map(user => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: user.id,\n                  children: user.name\n                }, user.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this), daysOfWeek.map(day => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                size: \"small\",\n                value: entry.hours[day.key],\n                onChange: e => handleHourChange(idx, day.key, e.target.value),\n                inputProps: {\n                  style: {\n                    textAlign: 'center'\n                  },\n                  min: 0,\n                  max: 24\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 21\n              }, this)\n            }, day.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              sx: {\n                fontWeight: 'bold'\n              },\n              children: projectTotals[idx]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => removeProjectRow(idx),\n                disabled: weeklyEntries.length === 1,\n                children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              colSpan: 2,\n              sx: {\n                fontWeight: 'bold'\n              },\n              children: \"Required Hours\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this), daysOfWeek.map(day => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              sx: {\n                color: 'gray'\n              },\n              children: requiredHoursPerDay\n            }, day.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              sx: {\n                color: 'gray',\n                fontWeight: 'bold'\n              },\n              children: requiredHoursTotal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              colSpan: 2,\n              sx: {\n                fontWeight: 'bold'\n              },\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this), dayTotals.map((total, i) => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              sx: {\n                color: total < requiredHoursPerDay ? 'red' : 'inherit'\n              },\n              children: total\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              sx: {\n                fontWeight: 'bold',\n                color: dayTotals.reduce((a, b) => a + b, 0) < requiredHoursTotal ? 'red' : 'inherit'\n              },\n              children: dayTotals.reduce((a, b) => a + b, 0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        gap: 2,\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        startIcon: /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 47\n        }, this),\n        onClick: addProjectRow,\n        children: \"Add Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleWeeklySubmit,\n        children: \"Submit Week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Time Entries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleOpen,\n        children: \"Add Time Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Start Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"End Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Duration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: timeEntries.map(entry => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: entry.project_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: entry.user_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: format(new Date(entry.start_time), 'PPpp')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: format(new Date(entry.end_time), 'PPpp')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: calculateDuration(entry.start_time, entry.end_time)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: entry.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 17\n            }, this)]\n          }, entry.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Add Time Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          select: true,\n          fullWidth: true,\n          margin: \"dense\",\n          label: \"Project\",\n          value: newEntry.project_id,\n          onChange: e => setNewEntry({\n            ...newEntry,\n            project_id: e.target.value\n          }),\n          error: !!error && !newEntry.project_id,\n          helperText: !newEntry.project_id ? 'Please select a project' : '',\n          children: projects.map(project => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: project.id,\n            children: project.name\n          }, project.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          select: true,\n          fullWidth: true,\n          margin: \"dense\",\n          label: \"User\",\n          value: newEntry.user_id,\n          onChange: e => setNewEntry({\n            ...newEntry,\n            user_id: e.target.value\n          }),\n          error: !!error && !newEntry.user_id,\n          helperText: !newEntry.user_id ? 'Please select a user' : '',\n          children: users.map(user => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: user.id,\n            children: user.name\n          }, user.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          margin: \"dense\",\n          label: \"Start Time\",\n          type: \"datetime-local\",\n          value: newEntry.start_time,\n          onChange: e => setNewEntry({\n            ...newEntry,\n            start_time: e.target.value\n          }),\n          InputLabelProps: {\n            shrink: true\n          },\n          error: !!error && !newEntry.start_time,\n          helperText: !newEntry.start_time ? 'Start time is required' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          margin: \"dense\",\n          label: \"End Time\",\n          type: \"datetime-local\",\n          value: newEntry.end_time,\n          onChange: e => setNewEntry({\n            ...newEntry,\n            end_time: e.target.value\n          }),\n          InputLabelProps: {\n            shrink: true\n          },\n          error: !!error && !newEntry.end_time,\n          helperText: !newEntry.end_time ? 'End time is required' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          margin: \"dense\",\n          label: \"Description\",\n          multiline: true,\n          rows: 4,\n          value: newEntry.description,\n          onChange: e => setNewEntry({\n            ...newEntry,\n            description: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit,\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Add Entry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 5\n  }, this);\n}\n_s(TimeEntries, \"UaEsgsH9Ms1wHqBox6Fm4i+0PwU=\");\n_c = TimeEntries;\nexport default TimeEntries;\nvar _c;\n$RefreshReg$(_c, \"TimeEntries\");","map":{"version":3,"names":["React","useState","useEffect","Box","Button","Typography","TextField","Dialog","DialogTitle","DialogContent","DialogActions","MenuItem","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Alert","IconButton","format","axios","Add","Delete","jsxDEV","_jsxDEV","daysOfWeek","key","label","requiredHoursPerDay","getMonday","d","Date","day","getDay","diff","getDate","setDate","TimeEntries","_s","timeEntries","setTimeEntries","projects","setProjects","users","setUsers","open","setOpen","error","setError","newEntry","setNewEntry","project_id","user_id","start_time","end_time","description","weeklyEntries","setWeeklyEntries","hours","mon","tue","wed","thu","fri","sat","sun","weekStart","setWeekStart","fetchTimeEntries","fetchProjects","fetchUsers","response","get","console","log","data","handleOpen","handleClose","handleSubmit","post","_error$response","_error$response$data","calculateDuration","startTime","endTime","start","end","diffInMilliseconds","Math","floor","minutes","addProjectRow","removeProjectRow","idx","filter","_","i","handleWeeklyChange","field","value","updated","handleHourChange","replace","dayTotals","map","reduce","sum","entry","parseFloat","projectTotals","requiredHoursTotal","length","handleWeeklySubmit","hasError","promises","forEach","date","setHours","getHours","push","toISOString","Promise","all","children","variant","sx","mb","fileName","_jsxFileName","lineNumber","columnNumber","component","size","align","getTime","minWidth","select","onChange","e","target","fullWidth","project","id","name","user","inputProps","style","textAlign","min","max","fontWeight","onClick","disabled","colSpan","color","total","a","b","display","gap","startIcon","severity","justifyContent","project_name","user_name","onClose","margin","helperText","type","InputLabelProps","shrink","multiline","rows","_c","$RefreshReg$"],"sources":["C:/Users/golun/TimeTracker/client/src/pages/TimeEntries.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Button,\n  Typography,\n  TextField,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  MenuItem,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Alert,\n  IconButton\n} from '@mui/material';\nimport { format } from 'date-fns';\nimport axios from 'axios';\nimport { Add, Delete } from '@mui/icons-material';\n\nconst daysOfWeek = [\n  { key: 'mon', label: 'Mon' },\n  { key: 'tue', label: 'Tue' },\n  { key: 'wed', label: 'Wed' },\n  { key: 'thu', label: 'Thu' },\n  { key: 'fri', label: 'Fri' },\n  { key: 'sat', label: 'Sat' },\n  { key: 'sun', label: 'Sun' },\n];\nconst requiredHoursPerDay = 8;\n\nfunction getMonday(d) {\n  d = new Date(d);\n  var day = d.getDay(),\n    diff = d.getDate() - day + (day === 0 ? -6 : 1); // adjust when day is sunday\n  return new Date(d.setDate(diff));\n}\n\nfunction TimeEntries() {\n  const [timeEntries, setTimeEntries] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [error, setError] = useState(null);\n  const [newEntry, setNewEntry] = useState({\n    project_id: '',\n    user_id: '',\n    start_time: '',\n    end_time: '',\n    description: '',\n  });\n  const [weeklyEntries, setWeeklyEntries] = useState([\n    {\n      project_id: '',\n      user_id: '',\n      hours: { mon: '', tue: '', wed: '', thu: '', fri: '', sat: '', sun: '' },\n    },\n  ]);\n  const [weekStart, setWeekStart] = useState(getMonday(new Date()));\n\n  useEffect(() => {\n    fetchTimeEntries();\n    fetchProjects();\n    fetchUsers();\n  }, []);\n\n  const fetchTimeEntries = async () => {\n    try {\n      const response = await axios.get('/api/time-entries');\n      console.log('Fetched time entries:', response.data);\n      setTimeEntries(response.data);\n    } catch (error) {\n      console.error('Error fetching time entries:', error);\n      setError('Failed to fetch time entries. Please try again.');\n    }\n  };\n\n  const fetchProjects = async () => {\n    try {\n      const response = await axios.get('/api/projects');\n      console.log('Fetched projects:', response.data);\n      setProjects(response.data);\n    } catch (error) {\n      console.error('Error fetching projects:', error);\n      setError('Failed to fetch projects. Please try again.');\n    }\n  };\n\n  const fetchUsers = async () => {\n    try {\n      const response = await axios.get('/api/users');\n      console.log('Fetched users:', response.data);\n      setUsers(response.data);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n      setError('Failed to fetch users. Please try again.');\n    }\n  };\n\n  const handleOpen = () => {\n    setError(null);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setError(null);\n    setOpen(false);\n  };\n\n  const handleSubmit = async () => {\n    try {\n      if (!newEntry.project_id) {\n        setError('Please select a project');\n        return;\n      }\n\n      if (!newEntry.user_id) {\n        setError('Please select a user');\n        return;\n      }\n\n      if (!newEntry.start_time) {\n        setError('Start time is required');\n        return;\n      }\n\n      if (!newEntry.end_time) {\n        setError('End time is required');\n        return;\n      }\n\n      console.log('Submitting new time entry:', newEntry);\n      const response = await axios.post('/api/time-entries', newEntry);\n      console.log('Time entry created:', response.data);\n      \n      fetchTimeEntries();\n      handleClose();\n      setNewEntry({\n        project_id: '',\n        user_id: '',\n        start_time: '',\n        end_time: '',\n        description: '',\n      });\n    } catch (error) {\n      console.error('Error creating time entry:', error);\n      setError(error.response?.data?.error || 'Failed to create time entry. Please try again.');\n    }\n  };\n\n  const calculateDuration = (startTime, endTime) => {\n    const start = new Date(startTime);\n    const end = new Date(endTime);\n    const diffInMilliseconds = end - start;\n    const hours = Math.floor(diffInMilliseconds / (1000 * 60 * 60));\n    const minutes = Math.floor((diffInMilliseconds % (1000 * 60 * 60)) / (1000 * 60));\n    return `${hours}h ${minutes}m`;\n  };\n\n  const addProjectRow = () => {\n    setWeeklyEntries([\n      ...weeklyEntries,\n      { project_id: '', user_id: '', hours: { mon: '', tue: '', wed: '', thu: '', fri: '', sat: '', sun: '' } },\n    ]);\n  };\n\n  const removeProjectRow = (idx) => {\n    setWeeklyEntries(weeklyEntries.filter((_, i) => i !== idx));\n  };\n\n  const handleWeeklyChange = (idx, field, value) => {\n    const updated = [...weeklyEntries];\n    updated[idx][field] = value;\n    setWeeklyEntries(updated);\n  };\n\n  const handleHourChange = (idx, day, value) => {\n    const updated = [...weeklyEntries];\n    updated[idx].hours[day] = value.replace(/[^0-9.]/g, '');\n    setWeeklyEntries(updated);\n  };\n\n  const dayTotals = daysOfWeek.map(day =>\n    weeklyEntries.reduce((sum, entry) => sum + (parseFloat(entry.hours[day.key]) || 0), 0)\n  );\n  const projectTotals = weeklyEntries.map(entry =>\n    daysOfWeek.reduce((sum, day) => sum + (parseFloat(entry.hours[day.key]) || 0), 0)\n  );\n  const requiredHoursTotal = requiredHoursPerDay * daysOfWeek.length;\n\n  const handleWeeklySubmit = async () => {\n    setError(null);\n    let hasError = false;\n    for (const entry of weeklyEntries) {\n      if (!entry.project_id || !entry.user_id) {\n        setError('Please select a project and user for each row.');\n        hasError = true;\n        break;\n      }\n    }\n    if (hasError) return;\n    const promises = [];\n    weeklyEntries.forEach((entry) => {\n      daysOfWeek.forEach((day, i) => {\n        const hours = parseFloat(entry.hours[day.key]);\n        if (hours && hours > 0) {\n          const date = new Date(weekStart);\n          date.setDate(date.getDate() + i);\n          const start_time = new Date(date);\n          start_time.setHours(9, 0, 0, 0);\n          const end_time = new Date(start_time);\n          end_time.setHours(start_time.getHours() + hours);\n          promises.push(\n            axios.post('/api/time-entries', {\n              project_id: entry.project_id,\n              user_id: entry.user_id,\n              start_time: start_time.toISOString(),\n              end_time: end_time.toISOString(),\n              description: '',\n            })\n          );\n        }\n      });\n    });\n    try {\n      await Promise.all(promises);\n      fetchTimeEntries();\n      setWeeklyEntries([\n        { project_id: '', user_id: '', hours: { mon: '', tue: '', wed: '', thu: '', fri: '', sat: '', sun: '' } },\n      ]);\n    } catch (error) {\n      setError('Failed to submit time entries.');\n    }\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h4\" sx={{ mb: 2 }}>Time Entries</Typography>\n      <TableContainer component={Paper} sx={{ mb: 3 }}>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Project</TableCell>\n              <TableCell>User</TableCell>\n              {daysOfWeek.map((day, i) => (\n                <TableCell key={day.key} align=\"center\">\n                  {format(new Date(weekStart.getTime() + i * 86400000), 'dd.MM')}\n                </TableCell>\n              ))}\n              <TableCell align=\"center\">Total</TableCell>\n              <TableCell></TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {weeklyEntries.map((entry, idx) => (\n              <TableRow key={idx}>\n                <TableCell sx={{ minWidth: 150 }}>\n                  <TextField\n                    select\n                    size=\"small\"\n                    value={entry.project_id}\n                    onChange={e => handleWeeklyChange(idx, 'project_id', e.target.value)}\n                    fullWidth\n                  >\n                    {projects.map(project => (\n                      <MenuItem key={project.id} value={project.id}>{project.name}</MenuItem>\n                    ))}\n                  </TextField>\n                </TableCell>\n                <TableCell sx={{ minWidth: 120 }}>\n                  <TextField\n                    select\n                    size=\"small\"\n                    value={entry.user_id}\n                    onChange={e => handleWeeklyChange(idx, 'user_id', e.target.value)}\n                    fullWidth\n                  >\n                    {users.map(user => (\n                      <MenuItem key={user.id} value={user.id}>{user.name}</MenuItem>\n                    ))}\n                  </TextField>\n                </TableCell>\n                {daysOfWeek.map(day => (\n                  <TableCell key={day.key} align=\"center\">\n                    <TextField\n                      size=\"small\"\n                      value={entry.hours[day.key]}\n                      onChange={e => handleHourChange(idx, day.key, e.target.value)}\n                      inputProps={{ style: { textAlign: 'center' }, min: 0, max: 24 }}\n                    />\n                  </TableCell>\n                ))}\n                <TableCell align=\"center\" sx={{ fontWeight: 'bold' }}>{projectTotals[idx]}</TableCell>\n                <TableCell>\n                  <IconButton onClick={() => removeProjectRow(idx)} disabled={weeklyEntries.length === 1}>\n                    <Delete />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n            <TableRow>\n              <TableCell colSpan={2} sx={{ fontWeight: 'bold' }}>Required Hours</TableCell>\n              {daysOfWeek.map(day => (\n                <TableCell key={day.key} align=\"center\" sx={{ color: 'gray' }}>{requiredHoursPerDay}</TableCell>\n              ))}\n              <TableCell align=\"center\" sx={{ color: 'gray', fontWeight: 'bold' }}>{requiredHoursTotal}</TableCell>\n              <TableCell></TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell colSpan={2} sx={{ fontWeight: 'bold' }}>Total</TableCell>\n              {dayTotals.map((total, i) => (\n                <TableCell key={i} align=\"center\" sx={{ color: total < requiredHoursPerDay ? 'red' : 'inherit' }}>{total}</TableCell>\n              ))}\n              <TableCell align=\"center\" sx={{ fontWeight: 'bold', color: dayTotals.reduce((a, b) => a + b, 0) < requiredHoursTotal ? 'red' : 'inherit' }}>{dayTotals.reduce((a, b) => a + b, 0)}</TableCell>\n              <TableCell></TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Box sx={{ display: 'flex', gap: 2, mb: 3 }}>\n        <Button variant=\"outlined\" startIcon={<Add />} onClick={addProjectRow}>Add Project</Button>\n        <Button variant=\"contained\" color=\"primary\" onClick={handleWeeklySubmit}>Submit Week</Button>\n      </Box>\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 2 }}>{error}</Alert>\n      )}\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 3 }}>\n        <Typography variant=\"h4\">Time Entries</Typography>\n        <Button variant=\"contained\" color=\"primary\" onClick={handleOpen}>\n          Add Time Entry\n        </Button>\n      </Box>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Project</TableCell>\n              <TableCell>User</TableCell>\n              <TableCell>Start Time</TableCell>\n              <TableCell>End Time</TableCell>\n              <TableCell>Duration</TableCell>\n              <TableCell>Description</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {timeEntries.map((entry) => (\n              <TableRow key={entry.id}>\n                <TableCell>{entry.project_name}</TableCell>\n                <TableCell>{entry.user_name}</TableCell>\n                <TableCell>\n                  {format(new Date(entry.start_time), 'PPpp')}\n                </TableCell>\n                <TableCell>\n                  {format(new Date(entry.end_time), 'PPpp')}\n                </TableCell>\n                <TableCell>\n                  {calculateDuration(entry.start_time, entry.end_time)}\n                </TableCell>\n                <TableCell>{entry.description}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>Add Time Entry</DialogTitle>\n        <DialogContent>\n          <TextField\n            select\n            fullWidth\n            margin=\"dense\"\n            label=\"Project\"\n            value={newEntry.project_id}\n            onChange={(e) => setNewEntry({ ...newEntry, project_id: e.target.value })}\n            error={!!error && !newEntry.project_id}\n            helperText={!newEntry.project_id ? 'Please select a project' : ''}\n          >\n            {projects.map((project) => (\n              <MenuItem key={project.id} value={project.id}>\n                {project.name}\n              </MenuItem>\n            ))}\n          </TextField>\n          <TextField\n            select\n            fullWidth\n            margin=\"dense\"\n            label=\"User\"\n            value={newEntry.user_id}\n            onChange={(e) => setNewEntry({ ...newEntry, user_id: e.target.value })}\n            error={!!error && !newEntry.user_id}\n            helperText={!newEntry.user_id ? 'Please select a user' : ''}\n          >\n            {users.map((user) => (\n              <MenuItem key={user.id} value={user.id}>\n                {user.name}\n              </MenuItem>\n            ))}\n          </TextField>\n          <TextField\n            fullWidth\n            margin=\"dense\"\n            label=\"Start Time\"\n            type=\"datetime-local\"\n            value={newEntry.start_time}\n            onChange={(e) => setNewEntry({ ...newEntry, start_time: e.target.value })}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            error={!!error && !newEntry.start_time}\n            helperText={!newEntry.start_time ? 'Start time is required' : ''}\n          />\n          <TextField\n            fullWidth\n            margin=\"dense\"\n            label=\"End Time\"\n            type=\"datetime-local\"\n            value={newEntry.end_time}\n            onChange={(e) => setNewEntry({ ...newEntry, end_time: e.target.value })}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            error={!!error && !newEntry.end_time}\n            helperText={!newEntry.end_time ? 'End time is required' : ''}\n          />\n          <TextField\n            fullWidth\n            margin=\"dense\"\n            label=\"Description\"\n            multiline\n            rows={4}\n            value={newEntry.description}\n            onChange={(e) => setNewEntry({ ...newEntry, description: e.target.value })}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleSubmit} variant=\"contained\" color=\"primary\">\n            Add Entry\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n}\n\nexport default TimeEntries; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}