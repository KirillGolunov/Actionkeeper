{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\golun\\\\TimeTracker\\\\client\\\\src\\\\pages\\\\Dashboards_new.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Card, CardContent, Typography, MenuItem, TextField, IconButton, Switch, FormControlLabel, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Menu } from '@mui/material';\nimport { PieChart, Pie, Cell, Tooltip, Legend, BarChart, Bar, XAxis, YAxis, CartesianGrid, ResponsiveContainer } from 'recharts';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport axios from 'axios';\nimport { startOfWeek, startOfMonth, startOfQuarter, startOfYear, format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8'];\nconst timeRanges = [{\n  value: 'week',\n  label: 'This Week'\n}, {\n  value: 'month',\n  label: 'This Month'\n}, {\n  value: 'quarter',\n  label: 'This Quarter'\n}, {\n  value: 'year',\n  label: 'This Year'\n}, {\n  value: 'all',\n  label: 'All Time'\n}];\nfunction DashboardsNew() {\n  _s();\n  const [timeRange, setTimeRange] = useState('month');\n  const [projectData, setProjectData] = useState([]);\n  const [userData, setUserData] = useState([]);\n  const [clientTypeData, setClientTypeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [expandedProjects, setExpandedProjects] = useState([]);\n  const [showProjectPercent, setShowProjectPercent] = useState(false);\n  const [viewByUser, setViewByUser] = useState(false);\n  const [menuAnchorEl, setMenuAnchorEl] = useState(null);\n  const [activeWidget, setActiveWidget] = useState(null);\n  const [rotateClientLabels, setRotateClientLabels] = useState(false);\n  const getDateRange = () => {\n    const now = new Date();\n    let startDate;\n    switch (timeRange) {\n      case 'week':\n        startDate = startOfWeek(now, {\n          weekStartsOn: 1\n        });\n        break;\n      case 'month':\n        startDate = startOfMonth(now);\n        break;\n      case 'quarter':\n        startDate = startOfQuarter(now);\n        break;\n      case 'year':\n        startDate = startOfYear(now);\n        break;\n      default:\n        startDate = null;\n    }\n    return {\n      startDate: startDate ? format(startDate, 'yyyy-MM-dd') + 'T00:00:00.000Z' : null,\n      endDate: format(now, 'yyyy-MM-dd') + 'T23:59:59.999Z'\n    };\n  };\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const {\n        startDate,\n        endDate\n      } = getDateRange();\n      const dateParams = startDate ? `?startDate=${startDate}&endDate=${endDate}` : '';\n      const [projectRes, userRes, clientTypeRes] = await Promise.all([axios.get(`/api/analytics/time-by-project${dateParams}`), axios.get(`/api/analytics/time-by-user${dateParams}`), axios.get(`/api/analytics/time-by-client-type${dateParams}`)]);\n      setProjectData(projectRes.data);\n      setUserData(userRes.data);\n      setClientTypeData(clientTypeRes.data);\n    } catch (err) {\n      setError('Failed to fetch analytics data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line\n  }, [timeRange]);\n  const formatHours = hours => Math.round(hours * 100) / 100;\n\n  // Pie Chart: Internal vs External Hours\n  const pieWidget = /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Internal vs External Hours\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: e => {\n            setMenuAnchorEl(e.currentTarget);\n            setActiveWidget('clientType');\n          },\n          children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          height: 300\n        },\n        children: clientTypeData.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: \"100%\",\n          children: /*#__PURE__*/_jsxDEV(PieChart, {\n            children: [/*#__PURE__*/_jsxDEV(Pie, {\n              data: clientTypeData,\n              dataKey: \"total_hours\",\n              nameKey: \"client_type\",\n              cx: \"50%\",\n              cy: \"50%\",\n              outerRadius: 100,\n              label: ({\n                client_type,\n                total_hours\n              }) => `${client_type}: ${formatHours(total_hours)}h`,\n              children: clientTypeData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                fill: COLORS[index % COLORS.length]\n              }, entry.client_type, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              formatter: value => formatHours(value) + ' hours'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"100%\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"text.secondary\",\n            children: \"No client type data available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n\n  // Bar Chart: Hours by Client\n  const barWidget = /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Hours by Client\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: e => {\n            setMenuAnchorEl(e.currentTarget);\n            setActiveWidget('hoursByClient');\n          },\n          children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          height: 300\n        },\n        children: projectData && projectData.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: \"100%\",\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: (() => {\n              const clientHours = {};\n              projectData.forEach(project => {\n                const client = project.client_name && project.client_name.trim() || 'Unassigned';\n                clientHours[client] = (clientHours[client] || 0) + project.total_hours;\n              });\n              console.log('BarChart clientHours:', clientHours);\n              return Object.entries(clientHours).map(([name, hours]) => ({\n                name,\n                hours: formatHours(hours)\n              }));\n            })(),\n            margin: {\n              top: 20,\n              right: 30,\n              left: 20,\n              bottom: 5\n            },\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"name\",\n              angle: rotateClientLabels ? -30 : 0,\n              textAnchor: rotateClientLabels ? 'end' : 'middle',\n              interval: rotateClientLabels ? 0 : 'preserveEnd'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              formatter: value => value + ' hours'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"hours\",\n              fill: \"#8884d8\",\n              name: \"Hours\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"100%\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"text.secondary\",\n            children: \"No client data available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n\n  // Table: Hours by Project/User\n  // Prepare users and projects arrays\n  const users = Array.from(new Set(userData.map(d => d.user_name)));\n  const projects = Array.from(new Set(userData.map(d => d.project_name)));\n  const totalSystemHours = projectData.reduce((sum, project) => sum + project.total_hours, 0);\n\n  // Table rows\n  let projectRows = [];\n  let userRows = [];\n  const handleExpandClick = name => {\n    setExpandedProjects(prev => prev.includes(name) ? prev.filter(n => n !== name) : [...prev, name]);\n  };\n  if (viewByUser) {\n    users.forEach(user => {\n      const isExpanded = expandedProjects.includes(user);\n      const userProjects = userData.filter(d => d.user_name === user && d.total_hours > 0).map(d => ({\n        project: d.project_name,\n        hours: d.total_hours\n      }));\n      const userTotalHours = userProjects.reduce((sum, p) => sum + p.hours, 0);\n      const percent = totalSystemHours > 0 ? userTotalHours / totalSystemHours * 100 : 0;\n      userRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          sx: {\n            fontWeight: 500\n          },\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            onClick: () => handleExpandClick(user),\n            children: isExpanded ? /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), user]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: showProjectPercent ? `${Math.round(percent)}%` : `${formatHours(userTotalHours)}h`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: '100%',\n              height: 16,\n              bgcolor: '#e3eafc',\n              borderRadius: 2,\n              position: 'relative'\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: `${percent}%`,\n                height: '100%',\n                bgcolor: '#1976d2',\n                borderRadius: 2,\n                transition: 'width 0.3s'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, user, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this));\n      if (isExpanded && userProjects.length > 0) {\n        userProjects.forEach(p => {\n          const projectPercent = p.hours / userTotalHours * 100;\n          userRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              bgcolor: '#f5f5f5'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                pl: 6\n              },\n              children: p.project\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: showProjectPercent ? `${Math.round(projectPercent)}%` : `${formatHours(p.hours)}h`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: '100%',\n                  height: 12,\n                  bgcolor: '#e3eafc',\n                  borderRadius: 2,\n                  position: 'relative'\n                },\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    width: `${projectPercent}%`,\n                    height: '100%',\n                    bgcolor: '#4caf50',\n                    borderRadius: 2,\n                    transition: 'width 0.3s'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this)]\n          }, user + '-' + p.project, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this));\n        });\n      }\n      if (isExpanded && userProjects.length === 0) {\n        userRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            bgcolor: '#f5f5f5'\n          },\n          children: /*#__PURE__*/_jsxDEV(TableCell, {\n            colSpan: 3,\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"text.secondary\",\n              children: \"No project data for this user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this)\n        }, user + '-no-projects', false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this));\n      }\n    });\n  } else {\n    projectData.forEach(project => {\n      const isExpanded = expandedProjects.includes(project.project_name);\n      const usersForProject = userData.filter(d => d.project_name === project.project_name && d.total_hours > 0).map(d => ({\n        user: d.user_name,\n        hours: d.total_hours\n      }));\n      const percent = totalSystemHours > 0 ? project.total_hours / totalSystemHours * 100 : 0;\n      projectRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          sx: {\n            fontWeight: 500\n          },\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            onClick: () => handleExpandClick(project.project_name),\n            children: isExpanded ? /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), project.project_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: showProjectPercent ? `${Math.round(percent)}%` : `${formatHours(project.total_hours)}h`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: '100%',\n              height: 16,\n              bgcolor: '#e3eafc',\n              borderRadius: 2,\n              position: 'relative'\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: `${percent}%`,\n                height: '100%',\n                bgcolor: '#1976d2',\n                borderRadius: 2,\n                transition: 'width 0.3s'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this)]\n      }, project.project_name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this));\n      if (isExpanded && usersForProject.length > 0) {\n        usersForProject.forEach(u => {\n          const userPercent = u.hours / project.total_hours * 100;\n          projectRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              bgcolor: '#f5f5f5'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                pl: 6\n              },\n              children: u.user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: showProjectPercent ? `${Math.round(userPercent)}%` : `${formatHours(u.hours)}h`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: '100%',\n                  height: 12,\n                  bgcolor: '#e3eafc',\n                  borderRadius: 2,\n                  position: 'relative'\n                },\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    width: `${userPercent}%`,\n                    height: '100%',\n                    bgcolor: '#4caf50',\n                    borderRadius: 2,\n                    transition: 'width 0.3s'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, this)]\n          }, project.project_name + '-' + u.user, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this));\n        });\n      }\n      if (isExpanded && usersForProject.length === 0) {\n        projectRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            bgcolor: '#f5f5f5'\n          },\n          children: /*#__PURE__*/_jsxDEV(TableCell, {\n            colSpan: 3,\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"text.secondary\",\n              children: \"No user data for this project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this)\n        }, project.project_name + '-no-users', false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this));\n      }\n    });\n  }\n  const tableRows = viewByUser ? userRows : projectRows;\n\n  // Layout: two widgets side by side, one wide below\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Dashboard (New)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        select: true,\n        value: timeRange,\n        onChange: e => setTimeRange(e.target.value),\n        sx: {\n          minWidth: 200\n        },\n        children: timeRanges.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: option.value,\n          children: option.label\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        gap: 2,\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flex: 1\n        },\n        children: pieWidget\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flex: 1\n        },\n        children: barWidget\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Hours by Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: e => {\n                setMenuAnchorEl(e.currentTarget);\n                setActiveWidget('projectHours');\n              },\n              children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              gap: 2,\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Switch, {\n                checked: viewByUser,\n                onChange: e => setViewByUser(e.target.checked),\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 19\n              }, this),\n              label: viewByUser ? \"View by User\" : \"View by Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Switch, {\n                checked: showProjectPercent,\n                onChange: e => setShowProjectPercent(e.target.checked),\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 19\n              }, this),\n              label: showProjectPercent ? 'Show: % of System Total' : 'Show: Hours'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n            component: Paper,\n            sx: {\n              boxShadow: 'none'\n            },\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              size: \"small\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      fontWeight: 600\n                    },\n                    children: viewByUser ? 'User' : 'Project'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 426,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      fontWeight: 600\n                    },\n                    children: \"Total Hours\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 427,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      fontWeight: 600\n                    },\n                    children: \"Load\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 428,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: tableRows.length > 0 ? tableRows : /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: /*#__PURE__*/_jsxDEV(TableCell, {\n                    colSpan: 3,\n                    align: \"center\",\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      color: \"text.secondary\",\n                      children: \"No project data available\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 435,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 434,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 433,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      anchorEl: menuAnchorEl,\n      open: Boolean(menuAnchorEl),\n      onClose: () => {\n        setMenuAnchorEl(null);\n        setActiveWidget(null);\n      },\n      children: [activeWidget === 'hoursByClient' && /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => {\n          setRotateClientLabels(v => !v);\n          setMenuAnchorEl(null);\n        },\n        children: [rotateClientLabels ? 'Disable' : 'Enable', \" X Axis Label Rotation\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        disabled: true,\n        children: \"Widget settings coming soon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 364,\n    columnNumber: 5\n  }, this);\n}\n_s(DashboardsNew, \"7yoMS3POXRqYwwSV5d1wlrqKkoQ=\");\n_c = DashboardsNew;\nexport default DashboardsNew;\nvar _c;\n$RefreshReg$(_c, \"DashboardsNew\");","map":{"version":3,"names":["React","useState","useEffect","Box","Card","CardContent","Typography","MenuItem","TextField","IconButton","Switch","FormControlLabel","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Menu","PieChart","Pie","Cell","Tooltip","Legend","BarChart","Bar","XAxis","YAxis","CartesianGrid","ResponsiveContainer","MoreVertIcon","AddIcon","RemoveIcon","axios","startOfWeek","startOfMonth","startOfQuarter","startOfYear","format","jsxDEV","_jsxDEV","COLORS","timeRanges","value","label","DashboardsNew","_s","timeRange","setTimeRange","projectData","setProjectData","userData","setUserData","clientTypeData","setClientTypeData","loading","setLoading","error","setError","expandedProjects","setExpandedProjects","showProjectPercent","setShowProjectPercent","viewByUser","setViewByUser","menuAnchorEl","setMenuAnchorEl","activeWidget","setActiveWidget","rotateClientLabels","setRotateClientLabels","getDateRange","now","Date","startDate","weekStartsOn","endDate","fetchData","dateParams","projectRes","userRes","clientTypeRes","Promise","all","get","data","err","formatHours","hours","Math","round","pieWidget","children","sx","display","justifyContent","alignItems","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onClick","e","currentTarget","height","length","width","dataKey","nameKey","cx","cy","outerRadius","client_type","total_hours","map","entry","index","fill","formatter","color","barWidget","clientHours","forEach","project","client","client_name","trim","console","log","Object","entries","name","margin","top","right","left","bottom","strokeDasharray","angle","textAnchor","interval","users","Array","from","Set","d","user_name","projects","project_name","totalSystemHours","reduce","sum","projectRows","userRows","handleExpandClick","prev","includes","filter","n","user","isExpanded","userProjects","userTotalHours","p","percent","push","fontWeight","size","bgcolor","borderRadius","position","transition","projectPercent","pl","colSpan","align","usersForProject","u","userPercent","tableRows","mb","select","onChange","target","minWidth","option","gap","flex","control","checked","component","boxShadow","anchorEl","open","Boolean","onClose","v","disabled","_c","$RefreshReg$"],"sources":["C:/Users/golun/TimeTracker/client/src/pages/Dashboards_new.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  MenuItem,\n  TextField,\n  IconButton,\n  Switch,\n  FormControlLabel,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Menu,\n} from '@mui/material';\nimport { PieChart, Pie, Cell, Tooltip, Legend, BarChart, Bar, XAxis, YAxis, CartesianGrid, ResponsiveContainer } from 'recharts';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport axios from 'axios';\nimport { startOfWeek, startOfMonth, startOfQuarter, startOfYear, format } from 'date-fns';\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8'];\n\nconst timeRanges = [\n  { value: 'week', label: 'This Week' },\n  { value: 'month', label: 'This Month' },\n  { value: 'quarter', label: 'This Quarter' },\n  { value: 'year', label: 'This Year' },\n  { value: 'all', label: 'All Time' },\n];\n\nfunction DashboardsNew() {\n  const [timeRange, setTimeRange] = useState('month');\n  const [projectData, setProjectData] = useState([]);\n  const [userData, setUserData] = useState([]);\n  const [clientTypeData, setClientTypeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [expandedProjects, setExpandedProjects] = useState([]);\n  const [showProjectPercent, setShowProjectPercent] = useState(false);\n  const [viewByUser, setViewByUser] = useState(false);\n  const [menuAnchorEl, setMenuAnchorEl] = useState(null);\n  const [activeWidget, setActiveWidget] = useState(null);\n  const [rotateClientLabels, setRotateClientLabels] = useState(false);\n\n  const getDateRange = () => {\n    const now = new Date();\n    let startDate;\n    switch (timeRange) {\n      case 'week':\n        startDate = startOfWeek(now, { weekStartsOn: 1 });\n        break;\n      case 'month':\n        startDate = startOfMonth(now);\n        break;\n      case 'quarter':\n        startDate = startOfQuarter(now);\n        break;\n      case 'year':\n        startDate = startOfYear(now);\n        break;\n      default:\n        startDate = null;\n    }\n    return {\n      startDate: startDate ? format(startDate, 'yyyy-MM-dd') + 'T00:00:00.000Z' : null,\n      endDate: format(now, 'yyyy-MM-dd') + 'T23:59:59.999Z',\n    };\n  };\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const { startDate, endDate } = getDateRange();\n      const dateParams = startDate ? `?startDate=${startDate}&endDate=${endDate}` : '';\n      const [projectRes, userRes, clientTypeRes] = await Promise.all([\n        axios.get(`/api/analytics/time-by-project${dateParams}`),\n        axios.get(`/api/analytics/time-by-user${dateParams}`),\n        axios.get(`/api/analytics/time-by-client-type${dateParams}`),\n      ]);\n      setProjectData(projectRes.data);\n      setUserData(userRes.data);\n      setClientTypeData(clientTypeRes.data);\n    } catch (err) {\n      setError('Failed to fetch analytics data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line\n  }, [timeRange]);\n\n  const formatHours = (hours) => Math.round(hours * 100) / 100;\n\n  // Pie Chart: Internal vs External Hours\n  const pieWidget = (\n    <Card>\n      <CardContent>\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n          <Typography variant=\"h6\" gutterBottom>\n            Internal vs External Hours\n          </Typography>\n          <IconButton onClick={(e) => { setMenuAnchorEl(e.currentTarget); setActiveWidget('clientType'); }}>\n            <MoreVertIcon />\n          </IconButton>\n        </Box>\n        <Box sx={{ height: 300 }}>\n          {clientTypeData.length > 0 ? (\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <PieChart>\n                <Pie\n                  data={clientTypeData}\n                  dataKey=\"total_hours\"\n                  nameKey=\"client_type\"\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  outerRadius={100}\n                  label={({ client_type, total_hours }) => `${client_type}: ${formatHours(total_hours)}h`}\n                >\n                  {clientTypeData.map((entry, index) => (\n                    <Cell key={entry.client_type} fill={COLORS[index % COLORS.length]} />\n                  ))}\n                </Pie>\n                <Tooltip formatter={(value) => formatHours(value) + ' hours'} />\n                <Legend />\n              </PieChart>\n            </ResponsiveContainer>\n          ) : (\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100%\">\n              <Typography color=\"text.secondary\">No client type data available</Typography>\n            </Box>\n          )}\n        </Box>\n      </CardContent>\n    </Card>\n  );\n\n  // Bar Chart: Hours by Client\n  const barWidget = (\n    <Card>\n      <CardContent>\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n          <Typography variant=\"h6\" gutterBottom>\n            Hours by Client\n          </Typography>\n          <IconButton onClick={(e) => { setMenuAnchorEl(e.currentTarget); setActiveWidget('hoursByClient'); }}>\n            <MoreVertIcon />\n          </IconButton>\n        </Box>\n        <Box sx={{ height: 300 }}>\n          {projectData && projectData.length > 0 ? (\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <BarChart\n                data={(() => {\n                  const clientHours = {};\n                  projectData.forEach(project => {\n                    const client = (project.client_name && project.client_name.trim()) || 'Unassigned';\n                    clientHours[client] = (clientHours[client] || 0) + project.total_hours;\n                  });\n                  console.log('BarChart clientHours:', clientHours);\n                  return Object.entries(clientHours).map(([name, hours]) => ({ name, hours: formatHours(hours) }));\n                })()}\n                margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" angle={rotateClientLabels ? -30 : 0} textAnchor={rotateClientLabels ? 'end' : 'middle'} interval={rotateClientLabels ? 0 : 'preserveEnd'} />\n                <YAxis />\n                <Tooltip formatter={value => value + ' hours'} />\n                <Legend />\n                <Bar dataKey=\"hours\" fill=\"#8884d8\" name=\"Hours\" />\n              </BarChart>\n            </ResponsiveContainer>\n          ) : (\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100%\">\n              <Typography color=\"text.secondary\">No client data available</Typography>\n            </Box>\n          )}\n        </Box>\n      </CardContent>\n    </Card>\n  );\n\n  // Table: Hours by Project/User\n  // Prepare users and projects arrays\n  const users = Array.from(new Set(userData.map(d => d.user_name)));\n  const projects = Array.from(new Set(userData.map(d => d.project_name)));\n  const totalSystemHours = projectData.reduce((sum, project) => sum + project.total_hours, 0);\n\n  // Table rows\n  let projectRows = [];\n  let userRows = [];\n\n  const handleExpandClick = (name) => {\n    setExpandedProjects((prev) =>\n      prev.includes(name)\n        ? prev.filter((n) => n !== name)\n        : [...prev, name]\n    );\n  };\n\n  if (viewByUser) {\n    users.forEach(user => {\n      const isExpanded = expandedProjects.includes(user);\n      const userProjects = userData\n        .filter(d => d.user_name === user && d.total_hours > 0)\n        .map(d => ({ project: d.project_name, hours: d.total_hours }));\n      const userTotalHours = userProjects.reduce((sum, p) => sum + p.hours, 0);\n      const percent = totalSystemHours > 0 ? (userTotalHours / totalSystemHours) * 100 : 0;\n      userRows.push(\n        <TableRow key={user}>\n          <TableCell sx={{ fontWeight: 500 }}>\n            <IconButton size=\"small\" onClick={() => handleExpandClick(user)}>\n              {isExpanded ? <RemoveIcon /> : <AddIcon />}\n            </IconButton>\n            {user}\n          </TableCell>\n          <TableCell>\n            {showProjectPercent\n              ? `${Math.round(percent)}%`\n              : `${formatHours(userTotalHours)}h`}\n          </TableCell>\n          <TableCell>\n            <Box sx={{ width: '100%', height: 16, bgcolor: '#e3eafc', borderRadius: 2, position: 'relative' }}>\n              <Box\n                sx={{\n                  width: `${percent}%`,\n                  height: '100%',\n                  bgcolor: '#1976d2',\n                  borderRadius: 2,\n                  transition: 'width 0.3s',\n                }}\n              />\n            </Box>\n          </TableCell>\n        </TableRow>\n      );\n      if (isExpanded && userProjects.length > 0) {\n        userProjects.forEach(p => {\n          const projectPercent = (p.hours / userTotalHours) * 100;\n          userRows.push(\n            <TableRow key={user + '-' + p.project} sx={{ bgcolor: '#f5f5f5' }}>\n              <TableCell sx={{ pl: 6 }}>{p.project}</TableCell>\n              <TableCell>\n                {showProjectPercent\n                  ? `${Math.round(projectPercent)}%`\n                  : `${formatHours(p.hours)}h`}\n              </TableCell>\n              <TableCell>\n                <Box sx={{ width: '100%', height: 12, bgcolor: '#e3eafc', borderRadius: 2, position: 'relative' }}>\n                  <Box\n                    sx={{\n                      width: `${projectPercent}%`,\n                      height: '100%',\n                      bgcolor: '#4caf50',\n                      borderRadius: 2,\n                      transition: 'width 0.3s',\n                    }}\n                  />\n                </Box>\n              </TableCell>\n            </TableRow>\n          );\n        });\n      }\n      if (isExpanded && userProjects.length === 0) {\n        userRows.push(\n          <TableRow key={user + '-no-projects'} sx={{ bgcolor: '#f5f5f5' }}>\n            <TableCell colSpan={3} align=\"center\">\n              <Typography color=\"text.secondary\">No project data for this user</Typography>\n            </TableCell>\n          </TableRow>\n        );\n      }\n    });\n  } else {\n    projectData.forEach(project => {\n      const isExpanded = expandedProjects.includes(project.project_name);\n      const usersForProject = userData\n        .filter(d => d.project_name === project.project_name && d.total_hours > 0)\n        .map(d => ({ user: d.user_name, hours: d.total_hours }));\n      const percent = totalSystemHours > 0 ? (project.total_hours / totalSystemHours) * 100 : 0;\n      projectRows.push(\n        <TableRow key={project.project_name}>\n          <TableCell sx={{ fontWeight: 500 }}>\n            <IconButton size=\"small\" onClick={() => handleExpandClick(project.project_name)}>\n              {isExpanded ? <RemoveIcon /> : <AddIcon />}\n            </IconButton>\n            {project.project_name}\n          </TableCell>\n          <TableCell>\n            {showProjectPercent\n              ? `${Math.round(percent)}%`\n              : `${formatHours(project.total_hours)}h`}\n          </TableCell>\n          <TableCell>\n            <Box sx={{ width: '100%', height: 16, bgcolor: '#e3eafc', borderRadius: 2, position: 'relative' }}>\n              <Box\n                sx={{\n                  width: `${percent}%`,\n                  height: '100%',\n                  bgcolor: '#1976d2',\n                  borderRadius: 2,\n                  transition: 'width 0.3s',\n                }}\n              />\n            </Box>\n          </TableCell>\n        </TableRow>\n      );\n      if (isExpanded && usersForProject.length > 0) {\n        usersForProject.forEach(u => {\n          const userPercent = (u.hours / project.total_hours) * 100;\n          projectRows.push(\n            <TableRow key={project.project_name + '-' + u.user} sx={{ bgcolor: '#f5f5f5' }}>\n              <TableCell sx={{ pl: 6 }}>{u.user}</TableCell>\n              <TableCell>\n                {showProjectPercent\n                  ? `${Math.round(userPercent)}%`\n                  : `${formatHours(u.hours)}h`}\n              </TableCell>\n              <TableCell>\n                <Box sx={{ width: '100%', height: 12, bgcolor: '#e3eafc', borderRadius: 2, position: 'relative' }}>\n                  <Box\n                    sx={{\n                      width: `${userPercent}%`,\n                      height: '100%',\n                      bgcolor: '#4caf50',\n                      borderRadius: 2,\n                      transition: 'width 0.3s',\n                    }}\n                  />\n                </Box>\n              </TableCell>\n            </TableRow>\n          );\n        });\n      }\n      if (isExpanded && usersForProject.length === 0) {\n        projectRows.push(\n          <TableRow key={project.project_name + '-no-users'} sx={{ bgcolor: '#f5f5f5' }}>\n            <TableCell colSpan={3} align=\"center\">\n              <Typography color=\"text.secondary\">No user data for this project</Typography>\n            </TableCell>\n          </TableRow>\n        );\n      }\n    });\n  }\n\n  const tableRows = viewByUser ? userRows : projectRows;\n\n  // Layout: two widgets side by side, one wide below\n  return (\n    <Box sx={{ p: 3 }}>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 3 }}>\n        <Typography variant=\"h4\">Dashboard (New)</Typography>\n        <TextField\n          select\n          value={timeRange}\n          onChange={(e) => setTimeRange(e.target.value)}\n          sx={{ minWidth: 200 }}\n        >\n          {timeRanges.map((option) => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n      </Box>\n      {error && (\n        <Box sx={{ mb: 2 }}>\n          <Typography color=\"error\">{error}</Typography>\n        </Box>\n      )}\n      <Box sx={{ display: 'flex', gap: 2, mb: 2 }}>\n        <Box sx={{ flex: 1 }}>{pieWidget}</Box>\n        <Box sx={{ flex: 1 }}>{barWidget}</Box>\n      </Box>\n      <Box>\n        <Card>\n          <CardContent>\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n              <Typography variant=\"h6\" gutterBottom>\n                Hours by Project\n              </Typography>\n              <IconButton onClick={(e) => { setMenuAnchorEl(e.currentTarget); setActiveWidget('projectHours'); }}>\n                <MoreVertIcon />\n              </IconButton>\n            </Box>\n            <Box sx={{ display: 'flex', gap: 2, mb: 2 }}>\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={viewByUser}\n                    onChange={e => setViewByUser(e.target.checked)}\n                    color=\"primary\"\n                  />\n                }\n                label={viewByUser ? \"View by User\" : \"View by Project\"}\n              />\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={showProjectPercent}\n                    onChange={e => setShowProjectPercent(e.target.checked)}\n                    color=\"primary\"\n                  />\n                }\n                label={showProjectPercent ? 'Show: % of System Total' : 'Show: Hours'}\n              />\n            </Box>\n            <TableContainer component={Paper} sx={{ boxShadow: 'none' }}>\n              <Table size=\"small\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell sx={{ fontWeight: 600 }}>{viewByUser ? 'User' : 'Project'}</TableCell>\n                    <TableCell sx={{ fontWeight: 600 }}>Total Hours</TableCell>\n                    <TableCell sx={{ fontWeight: 600 }}>Load</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {tableRows.length > 0 ? tableRows : (\n                    <TableRow>\n                      <TableCell colSpan={3} align=\"center\">\n                        <Typography color=\"text.secondary\">No project data available</Typography>\n                      </TableCell>\n                    </TableRow>\n                  )}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </CardContent>\n        </Card>\n      </Box>\n      <Menu\n        anchorEl={menuAnchorEl}\n        open={Boolean(menuAnchorEl)}\n        onClose={() => { setMenuAnchorEl(null); setActiveWidget(null); }}\n      >\n        {activeWidget === 'hoursByClient' && (\n          <MenuItem onClick={() => { setRotateClientLabels(v => !v); setMenuAnchorEl(null); }}>\n            {rotateClientLabels ? 'Disable' : 'Enable'} X Axis Label Rotation\n          </MenuItem>\n        )}\n        <MenuItem disabled>Widget settings coming soon</MenuItem>\n      </Menu>\n    </Box>\n  );\n}\n\nexport default DashboardsNew; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}