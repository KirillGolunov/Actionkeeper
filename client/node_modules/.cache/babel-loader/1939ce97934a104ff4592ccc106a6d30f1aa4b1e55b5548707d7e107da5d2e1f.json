{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\golun\\\\TimeTracker\\\\client\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Card, CardContent, Typography, MenuItem, TextField, CircularProgress, Alert, Switch, FormControlLabel, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, IconButton, Collapse, Menu } from '@mui/material';\nimport { BarChart, Bar, PieChart, Pie, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, HeatMap } from 'recharts';\nimport { startOfWeek, startOfMonth, startOfQuarter, startOfYear, format } from 'date-fns';\nimport axios from 'axios';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport { Responsive, WidthProvider } from 'react-grid-layout';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8'];\nconst timeRanges = [{\n  value: 'week',\n  label: 'This Week'\n}, {\n  value: 'month',\n  label: 'This Month'\n}, {\n  value: 'quarter',\n  label: 'This Quarter'\n}, {\n  value: 'year',\n  label: 'This Year'\n}, {\n  value: 'all',\n  label: 'All Time'\n}];\nconst ResponsiveGridLayout = WidthProvider(Responsive);\n_c = ResponsiveGridLayout;\nconst WIDGET_SIZES = {\n  SMALL: {\n    w: 6,\n    h: 6\n  },\n  SMALL: {\n    w: 6,\n    h: 4\n  },\n  WIDE: {\n    w: 12,\n    h: 4\n  }\n};\nconst WIDGET_POSITIONS = {\n  projectHours: {\n    x: 0,\n    y: 0\n  },\n  clientType: {\n    x: 6,\n    y: 0\n  },\n  hoursByClient: {\n    x: 0,\n    y: 4\n  }\n};\nconst GRID_COLUMNS = 12;\nconst GRID_ROWS = 12;\nconst STORAGE_KEY = 'dashboard_widget_settings';\nconst ROW_HEIGHT = 4;\nfunction Dashboard() {\n  _s();\n  const [timeRange, setTimeRange] = useState('month');\n  const [projectData, setProjectData] = useState([]);\n  const [userData, setUserData] = useState([]);\n  const [clientTypeData, setClientTypeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showPercent, setShowPercent] = useState(false);\n  const [expandedProjects, setExpandedProjects] = useState([]);\n  const [showProjectPercent, setShowProjectPercent] = useState(false);\n  const [viewByUser, setViewByUser] = useState(false);\n\n  // Load saved settings from localStorage\n  const loadSavedSettings = () => {\n    try {\n      const savedSettings = localStorage.getItem(STORAGE_KEY);\n      if (savedSettings) {\n        const parsed = JSON.parse(savedSettings);\n        return {\n          positions: parsed.positions || WIDGET_POSITIONS,\n          sizes: parsed.sizes || {\n            projectHours: WIDGET_SIZES.SMALL,\n            clientType: WIDGET_SIZES.SMALL,\n            hoursByClient: WIDGET_SIZES.WIDE\n          }\n        };\n      }\n    } catch (error) {\n      console.error('Error loading saved settings:', error);\n    }\n    return {\n      positions: WIDGET_POSITIONS,\n      sizes: {\n        projectHours: WIDGET_SIZES.SMALL,\n        clientType: WIDGET_SIZES.SMALL,\n        hoursByClient: WIDGET_SIZES.WIDE\n      }\n    };\n  };\n  const savedSettings = loadSavedSettings();\n  const [widgetState, setWidgetState] = useState({\n    positions: savedSettings.positions,\n    sizes: savedSettings.sizes\n  });\n  const [menuAnchorEl, setMenuAnchorEl] = useState(null);\n  const [activeWidget, setActiveWidget] = useState(null);\n\n  // Save settings to localStorage\n  const saveSettings = newState => {\n    try {\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(newState));\n    } catch (error) {\n      console.error('Error saving settings:', error);\n    }\n  };\n\n  // Update widget state and save\n  const updateWidgetState = newState => {\n    setWidgetState(newState);\n    saveSettings(newState);\n  };\n  const handleMenuClick = (event, widgetId) => {\n    setMenuAnchorEl(event.currentTarget);\n    setActiveWidget(widgetId);\n  };\n  const handleMenuClose = () => {\n    setMenuAnchorEl(null);\n    setActiveWidget(null);\n  };\n  const handleSizeChange = size => {\n    if (!activeWidget) return;\n    const newState = {\n      ...widgetState,\n      sizes: {\n        ...widgetState.sizes,\n        [activeWidget]: size\n      }\n    };\n    updateWidgetState(newState);\n    handleMenuClose();\n  };\n\n  // Helper function to find the next available row\n  const findNextAvailableRow = (widgetState, widgetId, newX) => {\n    let currentRow = 0;\n    while (true) {\n      const widgetsInRow = Object.entries(widgetState.positions).filter(([id, pos]) => id !== widgetId && pos.y === currentRow);\n      if (widgetsInRow.length === 0) {\n        return currentRow;\n      }\n      const leftWidget = widgetsInRow.find(([_, pos]) => pos.x === 0);\n      const rightWidget = widgetsInRow.find(([_, pos]) => pos.x === 6);\n      if (!leftWidget && newX === 0) {\n        return currentRow;\n      }\n      if (!rightWidget && newX === 6) {\n        return currentRow;\n      }\n      currentRow += 4;\n    }\n  };\n\n  // Helper to normalize the layout: pack widgets into rows, left to right, top to bottom\n  function normalizeLayout(widgetState, widgetOrder = null) {\n    // Get all widgets and their sizes\n    let widgets = Object.entries(widgetState.sizes).map(([id, size]) => ({\n      id,\n      size,\n      pos: widgetState.positions[id]\n    }));\n    // If a widgetOrder is provided, use that order; otherwise, sort by y/x\n    if (widgetOrder) {\n      widgets.sort((a, b) => widgetOrder.indexOf(a.id) - widgetOrder.indexOf(b.id));\n    } else {\n      widgets.sort((a, b) => a.pos.y - b.pos.y || a.pos.x - b.pos.x);\n    }\n    let newPositions = {};\n    let y = 0;\n    while (widgets.length > 0) {\n      // Try to fit a wide widget first\n      const wideIdx = widgets.findIndex(w => w.size.w === 12);\n      if (wideIdx === 0) {\n        // If the first widget in order is wide, place it\n        const [wide] = widgets.splice(0, 1);\n        newPositions[wide.id] = {\n          x: 0,\n          y\n        };\n        y += 6;\n        continue;\n      } else if (wideIdx > 0) {\n        // If a wide widget is next, but not first, place small widgets first\n        // (fall through to small widget logic)\n      }\n      // Otherwise, fit up to two small widgets in the row\n      const small1 = widgets.find(w => w.size.w === 6);\n      if (small1) {\n        newPositions[small1.id] = {\n          x: 0,\n          y\n        };\n        widgets.splice(widgets.indexOf(small1), 1);\n      }\n      const small2 = widgets.find(w => w.size.w === 6);\n      if (small2) {\n        newPositions[small2.id] = {\n          x: 6,\n          y\n        };\n        widgets.splice(widgets.indexOf(small2), 1);\n      }\n      y += 6;\n    }\n    return {\n      ...widgetState,\n      positions: newPositions\n    };\n  }\n  const handleMove = direction => {\n    if (!activeWidget || !widgetState.positions[activeWidget]) return;\n    const currentPos = widgetState.positions[activeWidget];\n    const newPos = {\n      ...currentPos\n    };\n    const widgetSize = widgetState.sizes[activeWidget];\n    const isWideWidget = widgetSize.w === 12;\n    let targetRow;\n    const widgetsBeforeMove = Object.keys(widgetState.positions);\n    let widgetOrder = [...widgetsBeforeMove];\n\n    // Helper to find the next available row for a small widget, skipping wide widget rows\n    function findNextSmallWidgetRow(startY, direction) {\n      let y = startY;\n      while (true) {\n        y += direction === 'down' ? 6 : -6;\n        if (y < 0) return null;\n        if (y >= GRID_ROWS * 6) return null;\n        const widgetsInRow = Object.entries(widgetState.positions).filter(([, pos]) => pos.y === y);\n        if (widgetsInRow.length === 0) return y;\n        if (widgetsInRow.length === 1 && widgetState.sizes[widgetsInRow[0][0]].w === 6) return y;\n        if (widgetsInRow.length === 2 && widgetState.sizes[widgetsInRow[0][0]].w === 6 && widgetState.sizes[widgetsInRow[1][0]].w === 6) return y;\n        // If wide widget, skip\n      }\n    }\n    switch (direction) {\n      case 'left':\n        newPos.x = 0;\n        break;\n      case 'right':\n        newPos.x = 6;\n        break;\n      case 'up':\n        if (!isWideWidget) {\n          // For small widget, skip wide widget rows\n          const nextRow = findNextSmallWidgetRow(currentPos.y, 'up');\n          if (nextRow === null) return;\n          newPos.y = nextRow;\n        } else {\n          targetRow = currentPos.y - 6;\n          if (targetRow < 0) return;\n          newPos.y = targetRow;\n        }\n        break;\n      case 'down':\n        if (!isWideWidget) {\n          // For small widget, skip wide widget rows\n          const nextRow = findNextSmallWidgetRow(currentPos.y, 'down');\n          if (nextRow === null) return;\n          newPos.y = nextRow;\n        } else {\n          targetRow = currentPos.y + 6;\n          if (targetRow >= GRID_ROWS * 6) return;\n          newPos.y = targetRow;\n        }\n        break;\n      default:\n        return;\n    }\n    let newState = {\n      ...widgetState\n    };\n    let swappedWidgetIds = [];\n    if ((direction === 'up' || direction === 'down') && !isWideWidget) {\n      // For small widget, check if target row has a small widget at the same x\n      const widgetsInTargetRow = Object.entries(widgetState.positions).filter(([id, pos]) => id !== activeWidget && pos.y === newPos.y);\n      const widgetAtTarget = widgetsInTargetRow.find(([_, pos]) => pos.x === newPos.x);\n      if (widgetAtTarget) {\n        // Swap\n        const [otherWidgetId] = widgetAtTarget;\n        swappedWidgetIds = [otherWidgetId];\n        newState = {\n          ...widgetState,\n          positions: {\n            ...widgetState.positions,\n            [activeWidget]: newPos,\n            [otherWidgetId]: currentPos\n          }\n        };\n        // New order: swap only the two involved widgets, preserve all others\n        const idxActive = widgetsBeforeMove.indexOf(activeWidget);\n        const idxOther = widgetsBeforeMove.indexOf(otherWidgetId);\n        widgetOrder = [...widgetsBeforeMove];\n        widgetOrder[idxActive] = otherWidgetId;\n        widgetOrder[idxOther] = activeWidget;\n      } else {\n        // Just move\n        newState = {\n          ...widgetState,\n          positions: {\n            ...widgetState.positions,\n            [activeWidget]: newPos\n          }\n        };\n        // New order: preserve left/right order\n        const otherSmall = widgetsBeforeMove.filter(id => id !== activeWidget && widgetState.sizes[id].w === 6 && widgetState.positions[id].y === currentPos.y)[0];\n        if (otherSmall) {\n          if (currentPos.x === 0) {\n            // If moving left widget, keep it before right widget\n            widgetOrder = widgetsBeforeMove.filter(id => id !== activeWidget);\n            const idx = widgetOrder.indexOf(otherSmall);\n            widgetOrder.splice(idx, 0, activeWidget);\n          } else {\n            // If moving right widget, keep it after left widget\n            widgetOrder = widgetsBeforeMove.filter(id => id !== activeWidget);\n            const idx = widgetOrder.indexOf(otherSmall);\n            widgetOrder.splice(idx + 1, 0, activeWidget);\n          }\n        } else {\n          widgetOrder = widgetsBeforeMove.filter(id => id !== activeWidget);\n          widgetOrder.push(activeWidget);\n        }\n      }\n      newState = normalizeLayout(newState, widgetOrder);\n      updateWidgetState(newState);\n      handleMenuClose();\n      return;\n    }\n\n    // Find widgets at the target position\n    const widgetsAtTarget = Object.entries(widgetState.positions).filter(([id, pos]) => id !== activeWidget && pos.y === newPos.y);\n    if (widgetsAtTarget.length === 0) {\n      // No widgets at target position, just move\n      newState = {\n        ...widgetState,\n        positions: {\n          ...widgetState.positions,\n          [activeWidget]: newPos\n        }\n      };\n      // New order: move activeWidget to end\n      widgetOrder = widgetsBeforeMove.filter(id => id !== activeWidget);\n      widgetOrder.push(activeWidget);\n    } else if (widgetsAtTarget.length === 1) {\n      const [otherWidgetId, otherPos] = widgetsAtTarget[0];\n      const otherSize = widgetState.sizes[otherWidgetId];\n      const isOtherWide = otherSize.w === 12;\n      if (isWideWidget && !isOtherWide) {\n        // Wide widget moving to position with one small widget\n        // Find next available row for the small widget\n        const nextRow = findNextAvailableRow(widgetState, otherWidgetId, otherPos.x);\n        newState = {\n          ...widgetState,\n          positions: {\n            ...widgetState.positions,\n            [activeWidget]: newPos,\n            [otherWidgetId]: {\n              ...otherPos,\n              y: nextRow\n            }\n          }\n        };\n        // New order: move activeWidget to end\n        widgetOrder = widgetsBeforeMove.filter(id => id !== activeWidget);\n        widgetOrder.push(activeWidget);\n      } else if (!isWideWidget && isOtherWide) {\n        // Small widget moving to position with wide widget\n        // Find next available row for the small widget\n        const nextRow = findNextAvailableRow(widgetState, activeWidget, newPos.x);\n        newPos.y = nextRow;\n        newState = {\n          ...widgetState,\n          positions: {\n            ...widgetState.positions,\n            [activeWidget]: newPos\n          }\n        };\n        // New order: move activeWidget to end\n        widgetOrder = widgetsBeforeMove.filter(id => id !== activeWidget);\n        widgetOrder.push(activeWidget);\n      } else {\n        // Both widgets are same size, swap positions\n        newState = {\n          ...widgetState,\n          positions: {\n            ...widgetState.positions,\n            [activeWidget]: newPos,\n            [otherWidgetId]: currentPos\n          }\n        };\n        // New order: keep all others, then otherWidget, activeWidget\n        widgetOrder = widgetsBeforeMove.filter(id => id !== activeWidget && id !== otherWidgetId);\n        widgetOrder.push(otherWidgetId, activeWidget);\n      }\n    } else if (widgetsAtTarget.length === 2) {\n      // Two small widgets at target position\n      if (isWideWidget) {\n        // Wide widget moving to position with two small widgets\n        // Move both small widgets to the wide widget's current position\n        const [leftWidgetId, leftPos] = widgetsAtTarget[0];\n        const [rightWidgetId, rightPos] = widgetsAtTarget[1];\n        newState = {\n          ...widgetState,\n          positions: {\n            ...widgetState.positions,\n            [activeWidget]: newPos,\n            [leftWidgetId]: {\n              ...currentPos,\n              x: 0\n            },\n            [rightWidgetId]: {\n              ...currentPos,\n              x: 6\n            }\n          }\n        };\n        // New order: keep all others, then left, right, activeWidget\n        widgetOrder = widgetsBeforeMove.filter(id => id !== activeWidget && id !== leftWidgetId && id !== rightWidgetId);\n        widgetOrder.push(leftWidgetId, rightWidgetId, activeWidget);\n      } else {\n        // Small widget moving to position with two small widgets\n        // Find next available row\n        const nextRow = findNextAvailableRow(widgetState, activeWidget, newPos.x);\n        newPos.y = nextRow;\n        newState = {\n          ...widgetState,\n          positions: {\n            ...widgetState.positions,\n            [activeWidget]: newPos\n          }\n        };\n        // New order: move activeWidget to end\n        widgetOrder = widgetsBeforeMove.filter(id => id !== activeWidget);\n        widgetOrder.push(activeWidget);\n      }\n    }\n    newState = normalizeLayout(newState, widgetOrder);\n    updateWidgetState(newState);\n    handleMenuClose();\n  };\n  const canMove = (widgetId, direction) => {\n    if (!widgetId || !widgetState.positions[widgetId]) return false;\n    const currentPos = widgetState.positions[widgetId];\n    const widgetSize = widgetState.sizes[widgetId];\n    const isWideWidget = widgetSize.w === 12;\n    let targetRow;\n    switch (direction) {\n      case 'left':\n        return currentPos.x !== 0;\n      case 'right':\n        return currentPos.x !== 6;\n      case 'up':\n        targetRow = currentPos.y - 6;\n        if (targetRow < 0) return false;\n        break;\n      case 'down':\n        targetRow = currentPos.y + 6;\n        if (targetRow >= GRID_ROWS * 6) return false;\n        break;\n      default:\n        return false;\n    }\n    if (direction === 'up' || direction === 'down') {\n      // Check if move is possible (always true, as we swap or move)\n      return true;\n    }\n    return false;\n  };\n  const getLayouts = () => {\n    return {\n      lg: [{\n        i: 'projectHours',\n        ...widgetState.positions.projectHours,\n        ...widgetState.sizes.projectHours,\n        static: true\n      }, {\n        i: 'clientType',\n        ...widgetState.positions.clientType,\n        ...widgetState.sizes.clientType,\n        static: true\n      }, {\n        i: 'hoursByClient',\n        ...widgetState.positions.hoursByClient,\n        ...widgetState.sizes.hoursByClient,\n        static: true\n      }]\n    };\n  };\n  const getDateRange = () => {\n    const now = new Date();\n    let startDate;\n    switch (timeRange) {\n      case 'week':\n        startDate = startOfWeek(now, {\n          weekStartsOn: 1\n        });\n        break;\n      case 'month':\n        startDate = startOfMonth(now);\n        break;\n      case 'quarter':\n        startDate = startOfQuarter(now);\n        break;\n      case 'year':\n        startDate = startOfYear(now);\n        break;\n      default:\n        startDate = null;\n    }\n    return {\n      startDate: startDate ? format(startDate, 'yyyy-MM-dd') + 'T00:00:00.000Z' : null,\n      endDate: format(now, 'yyyy-MM-dd') + 'T23:59:59.999Z'\n    };\n  };\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const {\n        startDate,\n        endDate\n      } = getDateRange();\n      const dateParams = startDate ? `?startDate=${startDate}&endDate=${endDate}` : '';\n      console.log('Fetching analytics data with params:', {\n        startDate,\n        endDate\n      });\n      const [projectRes, userRes, clientTypeRes] = await Promise.all([axios.get(`/api/analytics/time-by-project${dateParams}`), axios.get(`/api/analytics/time-by-user${dateParams}`), axios.get(`/api/analytics/time-by-client-type${dateParams}`)]);\n      console.log('Project data:', projectRes.data);\n      console.log('User data:', userRes.data);\n      console.log('Client type data:', clientTypeRes.data);\n      setProjectData(projectRes.data);\n      setUserData(userRes.data);\n      setClientTypeData(clientTypeRes.data);\n\n      // Log a sample of projectData after it is set\n      if (projectRes.data && projectRes.data.length > 0) {\n        console.log('Sample projectData object:', projectRes.data[0]);\n      }\n    } catch (err) {\n      console.error('Error fetching analytics:', err);\n      setError('Failed to fetch analytics data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, [timeRange]);\n  const formatHours = hours => {\n    return Math.round(hours * 100) / 100;\n  };\n\n  // Prepare users and projects arrays first so they are available for all calculations\n  const users = Array.from(new Set(userData.map(d => d.user_name)));\n  const projects = Array.from(new Set(userData.map(d => d.project_name)));\n\n  // Helper: count weekdays between two dates (inclusive)\n  function countWeekdays(start, end) {\n    let count = 0;\n    let current = new Date(start);\n    while (current <= end) {\n      const day = current.getDay();\n      if (day !== 0 && day !== 6) count++;\n      current.setDate(current.getDate() + 1);\n    }\n    return count;\n  }\n\n  // Calculate period start/end\n  const now = new Date();\n  let periodStart, periodEnd;\n  switch (timeRange) {\n    case 'week':\n      periodStart = startOfWeek(now);\n      periodEnd = now;\n      break;\n    case 'month':\n      periodStart = startOfMonth(now);\n      periodEnd = now;\n      break;\n    case 'quarter':\n      periodStart = startOfQuarter(now);\n      periodEnd = now;\n      break;\n    case 'year':\n      periodStart = startOfYear(now);\n      periodEnd = now;\n      break;\n    case 'all':\n    default:\n      // Use earliest and latest date in userData\n      const allDates = userData.map(d => new Date(d.start_time)).filter(Boolean);\n      periodStart = allDates.length ? new Date(Math.min(...allDates)) : now;\n      periodEnd = allDates.length ? new Date(Math.max(...allDates)) : now;\n      break;\n  }\n  const weekdays = countWeekdays(periodStart, periodEnd);\n  const userCapacity = users.map(() => weekdays * 8);\n  // Calculate total hours logged per user in the period\n  const userLogged = users.map(user => userData.filter(d => d.user_name === user).reduce((sum, d) => sum + d.total_hours, 0));\n  const userAvailable = userCapacity.map((cap, i) => Math.max(0, cap - userLogged[i]));\n\n  // Calculate total system hours across all projects\n  const totalSystemHours = projectData.reduce((sum, project) => sum + project.total_hours, 0);\n\n  // Build a matrix: rows = projects, cols = users\n  const heatMapData = [userAvailable,\n  // Capacity row\n  userLogged,\n  // Total load row\n  ...projects.map(project => users.map(user => {\n    const found = userData.find(d => d.user_name === user && d.project_name === project);\n    return found ? found.total_hours : 0;\n  }))];\n  const allProjectsWithCapacity = ['Capacity', 'Total load', ...projects];\n\n  // Set column width for heatmap (wider for wrapped names)\n  const colWidth = 100;\n  const cellWidth = 95;\n  const cellHeight = 35;\n  const xOffset = 100;\n  const yOffset = 60;\n  const heatmapRows = allProjectsWithCapacity.length;\n  const heatmapHeight = heatmapRows * cellHeight + yOffset + 40; // 40 for header padding\n\n  const handleExpandClick = projectName => {\n    setExpandedProjects(prev => prev.includes(projectName) ? prev.filter(name => name !== projectName) : [...prev, projectName]);\n  };\n\n  // Precompute table rows to avoid returning arrays or IIFEs in JSX\n  let projectRows = [];\n  let userRows = [];\n  if (viewByUser) {\n    const usersList = Array.from(new Set(userData.map(d => d.user_name)));\n    usersList.forEach(user => {\n      const isExpanded = expandedProjects.includes(user);\n      const userProjects = userData.filter(d => d.user_name === user && d.total_hours > 0).map(d => ({\n        project: d.project_name,\n        hours: d.total_hours\n      }));\n      const userTotalHours = userProjects.reduce((sum, p) => sum + p.hours, 0);\n      const percent = totalSystemHours > 0 ? userTotalHours / totalSystemHours * 100 : 0;\n      userRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          sx: {\n            fontWeight: 500\n          },\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            onClick: () => handleExpandClick(user),\n            children: isExpanded ? /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 697,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 697,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 13\n          }, this), user]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: showProjectPercent ? `${Math.round(percent)}%` : `${formatHours(userTotalHours)}h`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: '100%',\n              height: 16,\n              bgcolor: '#e3eafc',\n              borderRadius: 2,\n              position: 'relative'\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: `${percent}%`,\n                height: '100%',\n                bgcolor: '#1976d2',\n                borderRadius: 2,\n                transition: 'width 0.3s'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 708,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 11\n        }, this)]\n      }, user, true, {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 9\n      }, this));\n      if (isExpanded && userProjects.length > 0) {\n        userProjects.forEach(p => {\n          const projectPercent = p.hours / userTotalHours * 100;\n          userRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              bgcolor: '#f5f5f5'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                pl: 6\n              },\n              children: p.project\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 726,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: showProjectPercent ? `${Math.round(projectPercent)}%` : `${formatHours(p.hours)}h`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 727,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: '100%',\n                  height: 12,\n                  bgcolor: '#e3eafc',\n                  borderRadius: 2,\n                  position: 'relative'\n                },\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    width: `${projectPercent}%`,\n                    height: '100%',\n                    bgcolor: '#4caf50',\n                    borderRadius: 2,\n                    transition: 'width 0.3s'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 734,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 733,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 732,\n              columnNumber: 15\n            }, this)]\n          }, user + '-' + p.project, true, {\n            fileName: _jsxFileName,\n            lineNumber: 725,\n            columnNumber: 13\n          }, this));\n        });\n      }\n      if (isExpanded && userProjects.length === 0) {\n        userRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            bgcolor: '#f5f5f5'\n          },\n          children: /*#__PURE__*/_jsxDEV(TableCell, {\n            colSpan: 3,\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"text.secondary\",\n              children: \"No project data for this user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 753,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 752,\n            columnNumber: 13\n          }, this)\n        }, user + '-no-projects', false, {\n          fileName: _jsxFileName,\n          lineNumber: 751,\n          columnNumber: 11\n        }, this));\n      }\n    });\n  } else {\n    projectData.forEach(project => {\n      const isExpanded = expandedProjects.includes(project.project_name);\n      const usersForProject = userData.filter(d => d.project_name === project.project_name && d.total_hours > 0).map(d => ({\n        user: d.user_name,\n        hours: d.total_hours\n      }));\n      const percent = totalSystemHours > 0 ? project.total_hours / totalSystemHours * 100 : 0;\n      projectRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          sx: {\n            fontWeight: 500\n          },\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            onClick: () => handleExpandClick(project.project_name),\n            children: isExpanded ? /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 770,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 770,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 769,\n            columnNumber: 13\n          }, this), project.project_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 768,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: showProjectPercent ? `${Math.round(percent)}%` : `${formatHours(project.total_hours)}h`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 774,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: '100%',\n              height: 16,\n              bgcolor: '#e3eafc',\n              borderRadius: 2,\n              position: 'relative'\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: `${percent}%`,\n                height: '100%',\n                bgcolor: '#1976d2',\n                borderRadius: 2,\n                transition: 'width 0.3s'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 781,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 780,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 779,\n          columnNumber: 11\n        }, this)]\n      }, project.project_name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 767,\n        columnNumber: 9\n      }, this));\n      if (isExpanded && usersForProject.length > 0) {\n        usersForProject.forEach(u => {\n          const userPercent = u.hours / project.total_hours * 100;\n          projectRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              bgcolor: '#f5f5f5'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                pl: 6\n              },\n              children: u.user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 799,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: showProjectPercent ? `${Math.round(userPercent)}%` : `${formatHours(u.hours)}h`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 800,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: '100%',\n                  height: 12,\n                  bgcolor: '#e3eafc',\n                  borderRadius: 2,\n                  position: 'relative'\n                },\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    width: `${userPercent}%`,\n                    height: '100%',\n                    bgcolor: '#4caf50',\n                    borderRadius: 2,\n                    transition: 'width 0.3s'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 807,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 806,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 805,\n              columnNumber: 15\n            }, this)]\n          }, project.project_name + '-' + u.user, true, {\n            fileName: _jsxFileName,\n            lineNumber: 798,\n            columnNumber: 13\n          }, this));\n        });\n      }\n      if (isExpanded && usersForProject.length === 0) {\n        projectRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            bgcolor: '#f5f5f5'\n          },\n          children: /*#__PURE__*/_jsxDEV(TableCell, {\n            colSpan: 3,\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"text.secondary\",\n              children: \"No user data for this project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 826,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 825,\n            columnNumber: 13\n          }, this)\n        }, project.project_name + '-no-users', false, {\n          fileName: _jsxFileName,\n          lineNumber: 824,\n          columnNumber: 11\n        }, this));\n      }\n    });\n  }\n\n  // Always flatten the rows to avoid nested arrays\n  userRows = userRows.flat(Infinity);\n  projectRows = projectRows.flat(Infinity);\n\n  // Debug: log the full structure of the rows before rendering\n  try {\n    console.log('userRows (full):', JSON.stringify(userRows));\n  } catch (e) {\n    console.log('userRows (full):', userRows);\n  }\n  try {\n    console.log('projectRows (full):', JSON.stringify(projectRows));\n  } catch (e) {\n    console.log('projectRows (full):', projectRows);\n  }\n  let tableRows;\n  if (viewByUser) {\n    tableRows = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: userRows\n    }, void 0, false);\n  } else if (projectRows.length > 0) {\n    tableRows = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: projectRows\n    }, void 0, false);\n  } else {\n    tableRows = /*#__PURE__*/_jsxDEV(TableRow, {\n      children: /*#__PURE__*/_jsxDEV(TableCell, {\n        colSpan: 3,\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"text.secondary\",\n          children: \"No project data available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 859,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 858,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 857,\n      columnNumber: 7\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"60vh\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 868,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 867,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 876,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        select: true,\n        value: timeRange,\n        onChange: e => setTimeRange(e.target.value),\n        sx: {\n          minWidth: 200\n        },\n        children: timeRanges.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: option.value,\n          children: option.label\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 884,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 877,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 875,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 891,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(ResponsiveGridLayout, {\n        className: \"layout\",\n        layouts: getLayouts(),\n        breakpoints: {\n          lg: 1200,\n          md: 996,\n          sm: 768,\n          xs: 480,\n          xxs: 0\n        },\n        cols: {\n          lg: 12,\n          md: 10,\n          sm: 6,\n          xs: 4,\n          xxs: 2\n        },\n        rowHeight: 50,\n        margin: [16, 16],\n        containerPadding: [16, 16],\n        isDraggable: false,\n        isResizable: false,\n        style: {\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  gutterBottom: true,\n                  children: \"Hours by Project\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 912,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: e => handleMenuClick(e, 'projectHours'),\n                  children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 916,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 915,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 911,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    gap: 2,\n                    mb: 2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    control: /*#__PURE__*/_jsxDEV(Switch, {\n                      checked: viewByUser,\n                      onChange: e => setViewByUser(e.target.checked),\n                      color: \"primary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 923,\n                      columnNumber: 25\n                    }, this),\n                    label: viewByUser ? \"View by User\" : \"View by Project\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 921,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    control: /*#__PURE__*/_jsxDEV(Switch, {\n                      checked: showProjectPercent,\n                      onChange: e => setShowProjectPercent(e.target.checked),\n                      color: \"primary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 933,\n                      columnNumber: 25\n                    }, this),\n                    label: showProjectPercent ? 'Show: % of System Total' : 'Show: Hours'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 931,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 920,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n                  component: Paper,\n                  sx: {\n                    boxShadow: 'none'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Table, {\n                    size: \"small\",\n                    children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                      children: /*#__PURE__*/_jsxDEV(TableRow, {\n                        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                          sx: {\n                            fontWeight: 600\n                          },\n                          children: \"Project\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 946,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          sx: {\n                            fontWeight: 600\n                          },\n                          children: \"Total Hours\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 947,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          sx: {\n                            fontWeight: 600\n                          },\n                          children: \"Load\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 948,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 945,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 944,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                      children: tableRows\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 951,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 943,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 942,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 919,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 910,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 909,\n            columnNumber: 13\n          }, this)\n        }, \"projectHours\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 908,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  gutterBottom: true,\n                  children: \"Internal vs External Hours\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 964,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: e => handleMenuClick(e, 'clientType'),\n                  children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 968,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 967,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 963,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    height: 300\n                  },\n                  children: clientTypeData.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                    children: /*#__PURE__*/_jsxDEV(PieChart, {\n                      children: [/*#__PURE__*/_jsxDEV(Pie, {\n                        data: clientTypeData,\n                        dataKey: \"total_hours\",\n                        nameKey: \"client_type\",\n                        cx: \"50%\",\n                        cy: \"50%\",\n                        outerRadius: 100,\n                        label: ({\n                          client_type,\n                          total_hours\n                        }) => `${client_type}: ${formatHours(total_hours)}h`,\n                        children: clientTypeData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                          fill: COLORS[index % COLORS.length]\n                        }, entry.client_type, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 988,\n                          columnNumber: 31\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 976,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                        formatter: value => formatHours(value) + ' hours'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 991,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 992,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 975,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 974,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(Box, {\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    height: \"100%\",\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      color: \"text.secondary\",\n                      children: \"No client type data available\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 997,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 996,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 972,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 971,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 962,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 961,\n            columnNumber: 13\n          }, this)\n        }, \"clientType\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 960,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  gutterBottom: true,\n                  children: \"Hours by Client\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1009,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: e => handleMenuClick(e, 'hoursByClient'),\n                  children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1013,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1012,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1008,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  height: 300\n                },\n                children: projectData && projectData.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                  children: /*#__PURE__*/_jsxDEV(BarChart, {\n                    data: (() => {\n                      // Aggregate hours by client_name\n                      const clientHours = {};\n                      projectData.forEach(project => {\n                        const client = project.client_name || 'Unassigned';\n                        clientHours[client] = (clientHours[client] || 0) + project.total_hours;\n                      });\n                      // Convert to array for recharts\n                      return Object.entries(clientHours).map(([name, hours]) => ({\n                        name,\n                        hours: Math.round(hours * 100) / 100\n                      }));\n                    })(),\n                    margin: {\n                      top: 20,\n                      right: 30,\n                      left: 20,\n                      bottom: 5\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                      strokeDasharray: \"3 3\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1035,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                      dataKey: \"name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1036,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1037,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                      formatter: value => value + ' hours'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1038,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1039,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                      dataKey: \"hours\",\n                      fill: \"#8884d8\",\n                      name: \"Hours\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1040,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1019,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1018,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(Box, {\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  height: \"100%\",\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    color: \"text.secondary\",\n                    children: \"No client data available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1045,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1044,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1016,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1007,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1006,\n            columnNumber: 13\n          }, this)\n        }, \"hoursByClient\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 1005,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 896,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 895,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      anchorEl: menuAnchorEl,\n      open: Boolean(menuAnchorEl),\n      onClose: handleMenuClose,\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => handleSizeChange(WIDGET_SIZES.SMALL),\n        children: \"Small (Half Width)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1059,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => handleSizeChange(WIDGET_SIZES.WIDE),\n        children: \"Wide (Full Width)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1062,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => handleMove('left'),\n        disabled: !canMove(activeWidget, 'left'),\n        children: \"Move Left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1065,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => handleMove('right'),\n        disabled: !canMove(activeWidget, 'right'),\n        children: \"Move Right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1071,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => handleMove('up'),\n        disabled: !canMove(activeWidget, 'up'),\n        children: \"Move Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1077,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => handleMove('down'),\n        disabled: !canMove(activeWidget, 'down'),\n        children: \"Move Down\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1083,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1054,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 874,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"aHAW73/wH/atEUAgYkNmy48psac=\");\n_c2 = Dashboard;\nexport default Dashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"ResponsiveGridLayout\");\n$RefreshReg$(_c2, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Box","Card","CardContent","Typography","MenuItem","TextField","CircularProgress","Alert","Switch","FormControlLabel","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","IconButton","Collapse","Menu","BarChart","Bar","PieChart","Pie","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","HeatMap","startOfWeek","startOfMonth","startOfQuarter","startOfYear","format","axios","AddIcon","RemoveIcon","Responsive","WidthProvider","MoreVertIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","COLORS","timeRanges","value","label","ResponsiveGridLayout","_c","WIDGET_SIZES","SMALL","w","h","WIDE","WIDGET_POSITIONS","projectHours","x","y","clientType","hoursByClient","GRID_COLUMNS","GRID_ROWS","STORAGE_KEY","ROW_HEIGHT","Dashboard","_s","timeRange","setTimeRange","projectData","setProjectData","userData","setUserData","clientTypeData","setClientTypeData","loading","setLoading","error","setError","showPercent","setShowPercent","expandedProjects","setExpandedProjects","showProjectPercent","setShowProjectPercent","viewByUser","setViewByUser","loadSavedSettings","savedSettings","localStorage","getItem","parsed","JSON","parse","positions","sizes","console","widgetState","setWidgetState","menuAnchorEl","setMenuAnchorEl","activeWidget","setActiveWidget","saveSettings","newState","setItem","stringify","updateWidgetState","handleMenuClick","event","widgetId","currentTarget","handleMenuClose","handleSizeChange","size","findNextAvailableRow","newX","currentRow","widgetsInRow","Object","entries","filter","id","pos","length","leftWidget","find","_","rightWidget","normalizeLayout","widgetOrder","widgets","map","sort","a","b","indexOf","newPositions","wideIdx","findIndex","wide","splice","small1","small2","handleMove","direction","currentPos","newPos","widgetSize","isWideWidget","targetRow","widgetsBeforeMove","keys","findNextSmallWidgetRow","startY","nextRow","swappedWidgetIds","widgetsInTargetRow","widgetAtTarget","otherWidgetId","idxActive","idxOther","otherSmall","idx","push","widgetsAtTarget","otherPos","otherSize","isOtherWide","leftWidgetId","leftPos","rightWidgetId","rightPos","canMove","getLayouts","lg","i","static","getDateRange","now","Date","startDate","weekStartsOn","endDate","fetchData","dateParams","log","projectRes","userRes","clientTypeRes","Promise","all","get","data","err","formatHours","hours","Math","round","users","Array","from","Set","d","user_name","projects","project_name","countWeekdays","start","end","count","current","day","getDay","setDate","getDate","periodStart","periodEnd","allDates","start_time","Boolean","min","max","weekdays","userCapacity","userLogged","user","reduce","sum","total_hours","userAvailable","cap","totalSystemHours","project","heatMapData","found","allProjectsWithCapacity","colWidth","cellWidth","cellHeight","xOffset","yOffset","heatmapRows","heatmapHeight","handleExpandClick","projectName","prev","includes","name","projectRows","userRows","usersList","forEach","isExpanded","userProjects","userTotalHours","p","percent","children","sx","fontWeight","onClick","fileName","_jsxFileName","lineNumber","columnNumber","width","height","bgcolor","borderRadius","position","transition","projectPercent","pl","colSpan","align","color","usersForProject","u","userPercent","flat","Infinity","e","tableRows","display","justifyContent","alignItems","minHeight","mb","variant","select","onChange","target","minWidth","option","severity","className","layouts","breakpoints","md","sm","xs","xxs","cols","rowHeight","margin","containerPadding","isDraggable","isResizable","style","gutterBottom","gap","control","checked","component","boxShadow","dataKey","nameKey","cx","cy","outerRadius","client_type","entry","index","fill","formatter","clientHours","client","client_name","top","right","left","bottom","strokeDasharray","anchorEl","open","onClose","disabled","_c2","$RefreshReg$"],"sources":["C:/Users/golun/TimeTracker/client/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  MenuItem,\n  TextField,\n  CircularProgress,\n  Alert,\n  Switch,\n  FormControlLabel,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  IconButton,\n  Collapse,\n  Menu,\n} from '@mui/material';\nimport {\n  BarChart,\n  Bar,\n  PieChart,\n  Pie,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  HeatMap,\n} from 'recharts';\nimport { startOfWeek, startOfMonth, startOfQuarter, startOfYear, format } from 'date-fns';\nimport axios from 'axios';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport { Responsive, WidthProvider } from 'react-grid-layout';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8'];\n\nconst timeRanges = [\n  { value: 'week', label: 'This Week' },\n  { value: 'month', label: 'This Month' },\n  { value: 'quarter', label: 'This Quarter' },\n  { value: 'year', label: 'This Year' },\n  { value: 'all', label: 'All Time' },\n];\n\nconst ResponsiveGridLayout = WidthProvider(Responsive);\n\nconst WIDGET_SIZES = {\n  SMALL: { w: 6, h: 6 },\n  SMALL: { w: 6, h: 4 },\n  WIDE: { w: 12, h: 4 },\n};\n\nconst WIDGET_POSITIONS = {\n  projectHours: { x: 0, y: 0 },\n  clientType: { x: 6, y: 0 },\n  hoursByClient: { x: 0, y: 4 },\n};\n\nconst GRID_COLUMNS = 12;\nconst GRID_ROWS = 12;\n\nconst STORAGE_KEY = 'dashboard_widget_settings';\n\nconst ROW_HEIGHT = 4;\n\nfunction Dashboard() {\n  const [timeRange, setTimeRange] = useState('month');\n  const [projectData, setProjectData] = useState([]);\n  const [userData, setUserData] = useState([]);\n  const [clientTypeData, setClientTypeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showPercent, setShowPercent] = useState(false);\n  const [expandedProjects, setExpandedProjects] = useState([]);\n  const [showProjectPercent, setShowProjectPercent] = useState(false);\n  const [viewByUser, setViewByUser] = useState(false);\n\n  // Load saved settings from localStorage\n  const loadSavedSettings = () => {\n    try {\n      const savedSettings = localStorage.getItem(STORAGE_KEY);\n      if (savedSettings) {\n        const parsed = JSON.parse(savedSettings);\n        return {\n          positions: parsed.positions || WIDGET_POSITIONS,\n          sizes: parsed.sizes || {\n            projectHours: WIDGET_SIZES.SMALL,\n            clientType: WIDGET_SIZES.SMALL,\n            hoursByClient: WIDGET_SIZES.WIDE,\n          }\n        };\n      }\n    } catch (error) {\n      console.error('Error loading saved settings:', error);\n    }\n    return {\n      positions: WIDGET_POSITIONS,\n      sizes: {\n        projectHours: WIDGET_SIZES.SMALL,\n        clientType: WIDGET_SIZES.SMALL,\n        hoursByClient: WIDGET_SIZES.WIDE,\n      }\n    };\n  };\n\n  const savedSettings = loadSavedSettings();\n  const [widgetState, setWidgetState] = useState({\n    positions: savedSettings.positions,\n    sizes: savedSettings.sizes\n  });\n  const [menuAnchorEl, setMenuAnchorEl] = useState(null);\n  const [activeWidget, setActiveWidget] = useState(null);\n\n  // Save settings to localStorage\n  const saveSettings = (newState) => {\n    try {\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(newState));\n    } catch (error) {\n      console.error('Error saving settings:', error);\n    }\n  };\n\n  // Update widget state and save\n  const updateWidgetState = (newState) => {\n    setWidgetState(newState);\n    saveSettings(newState);\n  };\n\n  const handleMenuClick = (event, widgetId) => {\n    setMenuAnchorEl(event.currentTarget);\n    setActiveWidget(widgetId);\n  };\n\n  const handleMenuClose = () => {\n    setMenuAnchorEl(null);\n    setActiveWidget(null);\n  };\n\n  const handleSizeChange = (size) => {\n    if (!activeWidget) return;\n    \n    const newState = {\n      ...widgetState,\n      sizes: {\n        ...widgetState.sizes,\n        [activeWidget]: size,\n      }\n    };\n    updateWidgetState(newState);\n    handleMenuClose();\n  };\n\n  // Helper function to find the next available row\n  const findNextAvailableRow = (widgetState, widgetId, newX) => {\n    let currentRow = 0;\n    while (true) {\n      const widgetsInRow = Object.entries(widgetState.positions).filter(\n        ([id, pos]) => id !== widgetId && pos.y === currentRow\n      );\n      \n      if (widgetsInRow.length === 0) {\n        return currentRow;\n      }\n\n      const leftWidget = widgetsInRow.find(([_, pos]) => pos.x === 0);\n      const rightWidget = widgetsInRow.find(([_, pos]) => pos.x === 6);\n\n      if (!leftWidget && newX === 0) {\n        return currentRow;\n      }\n      if (!rightWidget && newX === 6) {\n        return currentRow;\n      }\n\n      currentRow += 4;\n    }\n  };\n\n  // Helper to normalize the layout: pack widgets into rows, left to right, top to bottom\n  function normalizeLayout(widgetState, widgetOrder = null) {\n    // Get all widgets and their sizes\n    let widgets = Object.entries(widgetState.sizes).map(([id, size]) => ({\n      id,\n      size,\n      pos: widgetState.positions[id],\n    }));\n    // If a widgetOrder is provided, use that order; otherwise, sort by y/x\n    if (widgetOrder) {\n      widgets.sort((a, b) => widgetOrder.indexOf(a.id) - widgetOrder.indexOf(b.id));\n    } else {\n      widgets.sort((a, b) => (a.pos.y - b.pos.y) || (a.pos.x - b.pos.x));\n    }\n\n    let newPositions = {};\n    let y = 0;\n    while (widgets.length > 0) {\n      // Try to fit a wide widget first\n      const wideIdx = widgets.findIndex(w => w.size.w === 12);\n      if (wideIdx === 0) {\n        // If the first widget in order is wide, place it\n        const [wide] = widgets.splice(0, 1);\n        newPositions[wide.id] = { x: 0, y };\n        y += 6;\n        continue;\n      } else if (wideIdx > 0) {\n        // If a wide widget is next, but not first, place small widgets first\n        // (fall through to small widget logic)\n      }\n      // Otherwise, fit up to two small widgets in the row\n      const small1 = widgets.find(w => w.size.w === 6);\n      if (small1) {\n        newPositions[small1.id] = { x: 0, y };\n        widgets.splice(widgets.indexOf(small1), 1);\n      }\n      const small2 = widgets.find(w => w.size.w === 6);\n      if (small2) {\n        newPositions[small2.id] = { x: 6, y };\n        widgets.splice(widgets.indexOf(small2), 1);\n      }\n      y += 6;\n    }\n    return {\n      ...widgetState,\n      positions: newPositions,\n    };\n  }\n\n  const handleMove = (direction) => {\n    if (!activeWidget || !widgetState.positions[activeWidget]) return;\n\n    const currentPos = widgetState.positions[activeWidget];\n    const newPos = { ...currentPos };\n    const widgetSize = widgetState.sizes[activeWidget];\n    const isWideWidget = widgetSize.w === 12;\n\n    let targetRow;\n    const widgetsBeforeMove = Object.keys(widgetState.positions);\n    let widgetOrder = [...widgetsBeforeMove];\n\n    // Helper to find the next available row for a small widget, skipping wide widget rows\n    function findNextSmallWidgetRow(startY, direction) {\n      let y = startY;\n      while (true) {\n        y += direction === 'down' ? 6 : -6;\n        if (y < 0) return null;\n        if (y >= GRID_ROWS * 6) return null;\n        const widgetsInRow = Object.entries(widgetState.positions).filter(([, pos]) => pos.y === y);\n        if (widgetsInRow.length === 0) return y;\n        if (widgetsInRow.length === 1 && widgetState.sizes[widgetsInRow[0][0]].w === 6) return y;\n        if (widgetsInRow.length === 2 && widgetState.sizes[widgetsInRow[0][0]].w === 6 && widgetState.sizes[widgetsInRow[1][0]].w === 6) return y;\n        // If wide widget, skip\n      }\n    }\n\n    switch (direction) {\n      case 'left':\n        newPos.x = 0;\n        break;\n      case 'right':\n        newPos.x = 6;\n        break;\n      case 'up':\n        if (!isWideWidget) {\n          // For small widget, skip wide widget rows\n          const nextRow = findNextSmallWidgetRow(currentPos.y, 'up');\n          if (nextRow === null) return;\n          newPos.y = nextRow;\n        } else {\n          targetRow = currentPos.y - 6;\n          if (targetRow < 0) return;\n          newPos.y = targetRow;\n        }\n        break;\n      case 'down':\n        if (!isWideWidget) {\n          // For small widget, skip wide widget rows\n          const nextRow = findNextSmallWidgetRow(currentPos.y, 'down');\n          if (nextRow === null) return;\n          newPos.y = nextRow;\n        } else {\n          targetRow = currentPos.y + 6;\n          if (targetRow >= GRID_ROWS * 6) return;\n          newPos.y = targetRow;\n        }\n        break;\n      default:\n        return;\n    }\n\n    let newState = { ...widgetState };\n    let swappedWidgetIds = [];\n    if ((direction === 'up' || direction === 'down') && !isWideWidget) {\n      // For small widget, check if target row has a small widget at the same x\n      const widgetsInTargetRow = Object.entries(widgetState.positions).filter(\n        ([id, pos]) => id !== activeWidget && pos.y === newPos.y\n      );\n      const widgetAtTarget = widgetsInTargetRow.find(([_, pos]) => pos.x === newPos.x);\n      if (widgetAtTarget) {\n        // Swap\n        const [otherWidgetId] = widgetAtTarget;\n        swappedWidgetIds = [otherWidgetId];\n        newState = {\n          ...widgetState,\n          positions: {\n            ...widgetState.positions,\n            [activeWidget]: newPos,\n            [otherWidgetId]: currentPos,\n          }\n        };\n        // New order: swap only the two involved widgets, preserve all others\n        const idxActive = widgetsBeforeMove.indexOf(activeWidget);\n        const idxOther = widgetsBeforeMove.indexOf(otherWidgetId);\n        widgetOrder = [...widgetsBeforeMove];\n        widgetOrder[idxActive] = otherWidgetId;\n        widgetOrder[idxOther] = activeWidget;\n      } else {\n        // Just move\n        newState = {\n          ...widgetState,\n          positions: {\n            ...widgetState.positions,\n            [activeWidget]: newPos,\n          }\n        };\n        // New order: preserve left/right order\n        const otherSmall = widgetsBeforeMove.filter(id => id !== activeWidget && widgetState.sizes[id].w === 6 && widgetState.positions[id].y === currentPos.y)[0];\n        if (otherSmall) {\n          if (currentPos.x === 0) {\n            // If moving left widget, keep it before right widget\n            widgetOrder = widgetsBeforeMove.filter(id => id !== activeWidget);\n            const idx = widgetOrder.indexOf(otherSmall);\n            widgetOrder.splice(idx, 0, activeWidget);\n          } else {\n            // If moving right widget, keep it after left widget\n            widgetOrder = widgetsBeforeMove.filter(id => id !== activeWidget);\n            const idx = widgetOrder.indexOf(otherSmall);\n            widgetOrder.splice(idx + 1, 0, activeWidget);\n          }\n        } else {\n          widgetOrder = widgetsBeforeMove.filter(id => id !== activeWidget);\n          widgetOrder.push(activeWidget);\n        }\n      }\n      newState = normalizeLayout(newState, widgetOrder);\n      updateWidgetState(newState);\n      handleMenuClose();\n      return;\n    }\n\n    // Find widgets at the target position\n    const widgetsAtTarget = Object.entries(widgetState.positions).filter(\n      ([id, pos]) => id !== activeWidget && pos.y === newPos.y\n    );\n\n    if (widgetsAtTarget.length === 0) {\n      // No widgets at target position, just move\n      newState = {\n        ...widgetState,\n        positions: {\n          ...widgetState.positions,\n          [activeWidget]: newPos,\n        }\n      };\n      // New order: move activeWidget to end\n      widgetOrder = widgetsBeforeMove.filter(id => id !== activeWidget);\n      widgetOrder.push(activeWidget);\n    } else if (widgetsAtTarget.length === 1) {\n      const [otherWidgetId, otherPos] = widgetsAtTarget[0];\n      const otherSize = widgetState.sizes[otherWidgetId];\n      const isOtherWide = otherSize.w === 12;\n\n      if (isWideWidget && !isOtherWide) {\n        // Wide widget moving to position with one small widget\n        // Find next available row for the small widget\n        const nextRow = findNextAvailableRow(widgetState, otherWidgetId, otherPos.x);\n        newState = {\n          ...widgetState,\n          positions: {\n            ...widgetState.positions,\n            [activeWidget]: newPos,\n            [otherWidgetId]: { ...otherPos, y: nextRow },\n          }\n        };\n        // New order: move activeWidget to end\n        widgetOrder = widgetsBeforeMove.filter(id => id !== activeWidget);\n        widgetOrder.push(activeWidget);\n      } else if (!isWideWidget && isOtherWide) {\n        // Small widget moving to position with wide widget\n        // Find next available row for the small widget\n        const nextRow = findNextAvailableRow(widgetState, activeWidget, newPos.x);\n        newPos.y = nextRow;\n        newState = {\n          ...widgetState,\n          positions: {\n            ...widgetState.positions,\n            [activeWidget]: newPos,\n          }\n        };\n        // New order: move activeWidget to end\n        widgetOrder = widgetsBeforeMove.filter(id => id !== activeWidget);\n        widgetOrder.push(activeWidget);\n      } else {\n        // Both widgets are same size, swap positions\n        newState = {\n          ...widgetState,\n          positions: {\n            ...widgetState.positions,\n            [activeWidget]: newPos,\n            [otherWidgetId]: currentPos,\n          }\n        };\n        // New order: keep all others, then otherWidget, activeWidget\n        widgetOrder = widgetsBeforeMove.filter(id => id !== activeWidget && id !== otherWidgetId);\n        widgetOrder.push(otherWidgetId, activeWidget);\n      }\n    } else if (widgetsAtTarget.length === 2) {\n      // Two small widgets at target position\n      if (isWideWidget) {\n        // Wide widget moving to position with two small widgets\n        // Move both small widgets to the wide widget's current position\n        const [leftWidgetId, leftPos] = widgetsAtTarget[0];\n        const [rightWidgetId, rightPos] = widgetsAtTarget[1];\n        newState = {\n          ...widgetState,\n          positions: {\n            ...widgetState.positions,\n            [activeWidget]: newPos,\n            [leftWidgetId]: { ...currentPos, x: 0 },\n            [rightWidgetId]: { ...currentPos, x: 6 },\n          }\n        };\n        // New order: keep all others, then left, right, activeWidget\n        widgetOrder = widgetsBeforeMove.filter(id => id !== activeWidget && id !== leftWidgetId && id !== rightWidgetId);\n        widgetOrder.push(leftWidgetId, rightWidgetId, activeWidget);\n      } else {\n        // Small widget moving to position with two small widgets\n        // Find next available row\n        const nextRow = findNextAvailableRow(widgetState, activeWidget, newPos.x);\n        newPos.y = nextRow;\n        newState = {\n          ...widgetState,\n          positions: {\n            ...widgetState.positions,\n            [activeWidget]: newPos,\n          }\n        };\n        // New order: move activeWidget to end\n        widgetOrder = widgetsBeforeMove.filter(id => id !== activeWidget);\n        widgetOrder.push(activeWidget);\n      }\n    }\n    newState = normalizeLayout(newState, widgetOrder);\n    updateWidgetState(newState);\n    handleMenuClose();\n  };\n\n  const canMove = (widgetId, direction) => {\n    if (!widgetId || !widgetState.positions[widgetId]) return false;\n    \n    const currentPos = widgetState.positions[widgetId];\n    const widgetSize = widgetState.sizes[widgetId];\n    const isWideWidget = widgetSize.w === 12;\n\n    let targetRow;\n    switch (direction) {\n      case 'left':\n        return currentPos.x !== 0;\n      case 'right':\n        return currentPos.x !== 6;\n      case 'up':\n        targetRow = currentPos.y - 6;\n        if (targetRow < 0) return false;\n        break;\n      case 'down':\n        targetRow = currentPos.y + 6;\n        if (targetRow >= GRID_ROWS * 6) return false;\n        break;\n      default:\n        return false;\n    }\n    if (direction === 'up' || direction === 'down') {\n      // Check if move is possible (always true, as we swap or move)\n      return true;\n    }\n    return false;\n  };\n\n  const getLayouts = () => {\n    return {\n      lg: [\n        { \n          i: 'projectHours', \n          ...widgetState.positions.projectHours,\n          ...widgetState.sizes.projectHours,\n          static: true \n        },\n        { \n          i: 'clientType', \n          ...widgetState.positions.clientType,\n          ...widgetState.sizes.clientType,\n          static: true \n        },\n        { \n          i: 'hoursByClient', \n          ...widgetState.positions.hoursByClient,\n          ...widgetState.sizes.hoursByClient,\n          static: true \n        },\n      ],\n    };\n  };\n\n  const getDateRange = () => {\n    const now = new Date();\n    let startDate;\n\n    switch (timeRange) {\n      case 'week':\n        startDate = startOfWeek(now, { weekStartsOn: 1 });\n        break;\n      case 'month':\n        startDate = startOfMonth(now);\n        break;\n      case 'quarter':\n        startDate = startOfQuarter(now);\n        break;\n      case 'year':\n        startDate = startOfYear(now);\n        break;\n      default:\n        startDate = null;\n    }\n\n    return {\n      startDate: startDate ? format(startDate, 'yyyy-MM-dd') + 'T00:00:00.000Z' : null,\n      endDate: format(now, 'yyyy-MM-dd') + 'T23:59:59.999Z',\n    };\n  };\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const { startDate, endDate } = getDateRange();\n      const dateParams = startDate ? `?startDate=${startDate}&endDate=${endDate}` : '';\n\n      console.log('Fetching analytics data with params:', { startDate, endDate });\n\n      const [projectRes, userRes, clientTypeRes] = await Promise.all([\n        axios.get(`/api/analytics/time-by-project${dateParams}`),\n        axios.get(`/api/analytics/time-by-user${dateParams}`),\n        axios.get(`/api/analytics/time-by-client-type${dateParams}`),\n      ]);\n\n      console.log('Project data:', projectRes.data);\n      console.log('User data:', userRes.data);\n      console.log('Client type data:', clientTypeRes.data);\n\n      setProjectData(projectRes.data);\n      setUserData(userRes.data);\n      setClientTypeData(clientTypeRes.data);\n\n      // Log a sample of projectData after it is set\n      if (projectRes.data && projectRes.data.length > 0) {\n        console.log('Sample projectData object:', projectRes.data[0]);\n      }\n    } catch (err) {\n      console.error('Error fetching analytics:', err);\n      setError('Failed to fetch analytics data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [timeRange]);\n\n  const formatHours = (hours) => {\n    return Math.round(hours * 100) / 100;\n  };\n\n  // Prepare users and projects arrays first so they are available for all calculations\n  const users = Array.from(new Set(userData.map(d => d.user_name)));\n  const projects = Array.from(new Set(userData.map(d => d.project_name)));\n\n  // Helper: count weekdays between two dates (inclusive)\n  function countWeekdays(start, end) {\n    let count = 0;\n    let current = new Date(start);\n    while (current <= end) {\n      const day = current.getDay();\n      if (day !== 0 && day !== 6) count++;\n      current.setDate(current.getDate() + 1);\n    }\n    return count;\n  }\n\n  // Calculate period start/end\n  const now = new Date();\n  let periodStart, periodEnd;\n  switch (timeRange) {\n    case 'week':\n      periodStart = startOfWeek(now);\n      periodEnd = now;\n      break;\n    case 'month':\n      periodStart = startOfMonth(now);\n      periodEnd = now;\n      break;\n    case 'quarter':\n      periodStart = startOfQuarter(now);\n      periodEnd = now;\n      break;\n    case 'year':\n      periodStart = startOfYear(now);\n      periodEnd = now;\n      break;\n    case 'all':\n    default:\n      // Use earliest and latest date in userData\n      const allDates = userData.map(d => new Date(d.start_time)).filter(Boolean);\n      periodStart = allDates.length ? new Date(Math.min(...allDates)) : now;\n      periodEnd = allDates.length ? new Date(Math.max(...allDates)) : now;\n      break;\n  }\n  const weekdays = countWeekdays(periodStart, periodEnd);\n  const userCapacity = users.map(() => weekdays * 8);\n  // Calculate total hours logged per user in the period\n  const userLogged = users.map(user =>\n    userData.filter(d => d.user_name === user).reduce((sum, d) => sum + d.total_hours, 0)\n  );\n  const userAvailable = userCapacity.map((cap, i) => Math.max(0, cap - userLogged[i]));\n\n  // Calculate total system hours across all projects\n  const totalSystemHours = projectData.reduce((sum, project) => sum + project.total_hours, 0);\n\n  // Build a matrix: rows = projects, cols = users\n  const heatMapData = [\n    userAvailable, // Capacity row\n    userLogged,   // Total load row\n    ...projects.map(project =>\n      users.map(user => {\n        const found = userData.find(d => d.user_name === user && d.project_name === project);\n        return found ? found.total_hours : 0;\n      })\n    )\n  ];\n  const allProjectsWithCapacity = ['Capacity', 'Total load', ...projects];\n\n  // Set column width for heatmap (wider for wrapped names)\n  const colWidth = 100;\n  const cellWidth = 95;\n  const cellHeight = 35;\n  const xOffset = 100;\n  const yOffset = 60;\n  const heatmapRows = allProjectsWithCapacity.length;\n  const heatmapHeight = heatmapRows * cellHeight + yOffset + 40; // 40 for header padding\n\n  const handleExpandClick = (projectName) => {\n    setExpandedProjects((prev) =>\n      prev.includes(projectName)\n        ? prev.filter((name) => name !== projectName)\n        : [...prev, projectName]\n    );\n  };\n\n  // Precompute table rows to avoid returning arrays or IIFEs in JSX\n  let projectRows = [];\n  let userRows = [];\n\n  if (viewByUser) {\n    const usersList = Array.from(new Set(userData.map(d => d.user_name)));\n    usersList.forEach(user => {\n      const isExpanded = expandedProjects.includes(user);\n      const userProjects = userData\n        .filter(d => d.user_name === user && d.total_hours > 0)\n        .map(d => ({ project: d.project_name, hours: d.total_hours }));\n      const userTotalHours = userProjects.reduce((sum, p) => sum + p.hours, 0);\n      const percent = totalSystemHours > 0 ? (userTotalHours / totalSystemHours) * 100 : 0;\n      userRows.push(\n        <TableRow key={user}>\n          <TableCell sx={{ fontWeight: 500 }}>\n            <IconButton size=\"small\" onClick={() => handleExpandClick(user)}>\n              {isExpanded ? <RemoveIcon /> : <AddIcon />}\n            </IconButton>\n            {user}\n          </TableCell>\n          <TableCell>\n            {showProjectPercent\n              ? `${Math.round(percent)}%`\n              : `${formatHours(userTotalHours)}h`}\n          </TableCell>\n          <TableCell>\n            <Box sx={{ width: '100%', height: 16, bgcolor: '#e3eafc', borderRadius: 2, position: 'relative' }}>\n              <Box\n                sx={{\n                  width: `${percent}%`,\n                  height: '100%',\n                  bgcolor: '#1976d2',\n                  borderRadius: 2,\n                  transition: 'width 0.3s',\n                }}\n              />\n            </Box>\n          </TableCell>\n        </TableRow>\n      );\n      if (isExpanded && userProjects.length > 0) {\n        userProjects.forEach(p => {\n          const projectPercent = (p.hours / userTotalHours) * 100;\n          userRows.push(\n            <TableRow key={user + '-' + p.project} sx={{ bgcolor: '#f5f5f5' }}>\n              <TableCell sx={{ pl: 6 }}>{p.project}</TableCell>\n              <TableCell>\n                {showProjectPercent\n                  ? `${Math.round(projectPercent)}%`\n                  : `${formatHours(p.hours)}h`}\n              </TableCell>\n              <TableCell>\n                <Box sx={{ width: '100%', height: 12, bgcolor: '#e3eafc', borderRadius: 2, position: 'relative' }}>\n                  <Box\n                    sx={{\n                      width: `${projectPercent}%`,\n                      height: '100%',\n                      bgcolor: '#4caf50',\n                      borderRadius: 2,\n                      transition: 'width 0.3s',\n                    }}\n                  />\n                </Box>\n              </TableCell>\n            </TableRow>\n          );\n        });\n      }\n      if (isExpanded && userProjects.length === 0) {\n        userRows.push(\n          <TableRow key={user + '-no-projects'} sx={{ bgcolor: '#f5f5f5' }}>\n            <TableCell colSpan={3} align=\"center\">\n              <Typography color=\"text.secondary\">No project data for this user</Typography>\n            </TableCell>\n          </TableRow>\n        );\n      }\n    });\n  } else {\n    projectData.forEach(project => {\n      const isExpanded = expandedProjects.includes(project.project_name);\n      const usersForProject = userData\n        .filter(d => d.project_name === project.project_name && d.total_hours > 0)\n        .map(d => ({ user: d.user_name, hours: d.total_hours }));\n      const percent = totalSystemHours > 0 ? (project.total_hours / totalSystemHours) * 100 : 0;\n      projectRows.push(\n        <TableRow key={project.project_name}>\n          <TableCell sx={{ fontWeight: 500 }}>\n            <IconButton size=\"small\" onClick={() => handleExpandClick(project.project_name)}>\n              {isExpanded ? <RemoveIcon /> : <AddIcon />}\n            </IconButton>\n            {project.project_name}\n          </TableCell>\n          <TableCell>\n            {showProjectPercent\n              ? `${Math.round(percent)}%`\n              : `${formatHours(project.total_hours)}h`}\n          </TableCell>\n          <TableCell>\n            <Box sx={{ width: '100%', height: 16, bgcolor: '#e3eafc', borderRadius: 2, position: 'relative' }}>\n              <Box\n                sx={{\n                  width: `${percent}%`,\n                  height: '100%',\n                  bgcolor: '#1976d2',\n                  borderRadius: 2,\n                  transition: 'width 0.3s',\n                }}\n              />\n            </Box>\n          </TableCell>\n        </TableRow>\n      );\n      if (isExpanded && usersForProject.length > 0) {\n        usersForProject.forEach(u => {\n          const userPercent = (u.hours / project.total_hours) * 100;\n          projectRows.push(\n            <TableRow key={project.project_name + '-' + u.user} sx={{ bgcolor: '#f5f5f5' }}>\n              <TableCell sx={{ pl: 6 }}>{u.user}</TableCell>\n              <TableCell>\n                {showProjectPercent\n                  ? `${Math.round(userPercent)}%`\n                  : `${formatHours(u.hours)}h`}\n              </TableCell>\n              <TableCell>\n                <Box sx={{ width: '100%', height: 12, bgcolor: '#e3eafc', borderRadius: 2, position: 'relative' }}>\n                  <Box\n                    sx={{\n                      width: `${userPercent}%`,\n                      height: '100%',\n                      bgcolor: '#4caf50',\n                      borderRadius: 2,\n                      transition: 'width 0.3s',\n                    }}\n                  />\n                </Box>\n              </TableCell>\n            </TableRow>\n          );\n        });\n      }\n      if (isExpanded && usersForProject.length === 0) {\n        projectRows.push(\n          <TableRow key={project.project_name + '-no-users'} sx={{ bgcolor: '#f5f5f5' }}>\n            <TableCell colSpan={3} align=\"center\">\n              <Typography color=\"text.secondary\">No user data for this project</Typography>\n            </TableCell>\n          </TableRow>\n        );\n      }\n    });\n  }\n\n  // Always flatten the rows to avoid nested arrays\n  userRows = userRows.flat(Infinity);\n  projectRows = projectRows.flat(Infinity);\n\n  // Debug: log the full structure of the rows before rendering\n  try {\n    console.log('userRows (full):', JSON.stringify(userRows));\n  } catch (e) {\n    console.log('userRows (full):', userRows);\n  }\n  try {\n    console.log('projectRows (full):', JSON.stringify(projectRows));\n  } catch (e) {\n    console.log('projectRows (full):', projectRows);\n  }\n\n  let tableRows;\n  if (viewByUser) {\n    tableRows = <>{userRows}</>;\n  } else if (projectRows.length > 0) {\n    tableRows = <>{projectRows}</>;\n  } else {\n    tableRows = (\n      <TableRow>\n        <TableCell colSpan={3} align=\"center\">\n          <Typography color=\"text.secondary\">No project data available</Typography>\n        </TableCell>\n      </TableRow>\n    );\n  }\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"60vh\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  return (\n    <Box>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 3 }}>\n        <Typography variant=\"h4\">Dashboard</Typography>\n        <TextField\n          select\n          value={timeRange}\n          onChange={(e) => setTimeRange(e.target.value)}\n          sx={{ minWidth: 200 }}\n        >\n          {timeRanges.map((option) => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n      </Box>\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\n          {error}\n        </Alert>\n      )}\n      <Box sx={{ width: '100%' }}>\n        <ResponsiveGridLayout\n          className=\"layout\"\n          layouts={getLayouts()}\n          breakpoints={{ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 }}\n          cols={{ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }}\n          rowHeight={50}\n          margin={[16, 16]}\n          containerPadding={[16, 16]}\n          isDraggable={false}\n          isResizable={false}\n          style={{ width: '100%' }}\n        >\n          <div key=\"projectHours\">\n            <Card>\n              <CardContent>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                  <Typography variant=\"h6\" gutterBottom>\n                    Hours by Project\n                  </Typography>\n                  <IconButton onClick={(e) => handleMenuClick(e, 'projectHours')}>\n                    <MoreVertIcon />\n                  </IconButton>\n                </Box>\n                <Box>\n                  <Box sx={{ display: 'flex', gap: 2, mb: 2 }}>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={viewByUser}\n                          onChange={e => setViewByUser(e.target.checked)}\n                          color=\"primary\"\n                        />\n                      }\n                      label={viewByUser ? \"View by User\" : \"View by Project\"}\n                    />\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={showProjectPercent}\n                          onChange={e => setShowProjectPercent(e.target.checked)}\n                          color=\"primary\"\n                        />\n                      }\n                      label={showProjectPercent ? 'Show: % of System Total' : 'Show: Hours'}\n                    />\n                  </Box>\n                  <TableContainer component={Paper} sx={{ boxShadow: 'none' }}>\n                    <Table size=\"small\">\n                      <TableHead>\n                        <TableRow>\n                          <TableCell sx={{ fontWeight: 600 }}>Project</TableCell>\n                          <TableCell sx={{ fontWeight: 600 }}>Total Hours</TableCell>\n                          <TableCell sx={{ fontWeight: 600 }}>Load</TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {tableRows}\n                      </TableBody>\n                    </Table>\n                  </TableContainer>\n                </Box>\n              </CardContent>\n            </Card>\n          </div>\n          <div key=\"clientType\">\n            <Card>\n              <CardContent>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                  <Typography variant=\"h6\" gutterBottom>\n                    Internal vs External Hours\n                  </Typography>\n                  <IconButton onClick={(e) => handleMenuClick(e, 'clientType')}>\n                    <MoreVertIcon />\n                  </IconButton>\n                </Box>\n                <Box>\n                  <Box sx={{ height: 300 }}>\n                    {clientTypeData.length > 0 ? (\n                      <ResponsiveContainer>\n                        <PieChart>\n                          <Pie\n                            data={clientTypeData}\n                            dataKey=\"total_hours\"\n                            nameKey=\"client_type\"\n                            cx=\"50%\"\n                            cy=\"50%\"\n                            outerRadius={100}\n                            label={({ client_type, total_hours }) => \n                              `${client_type}: ${formatHours(total_hours)}h`\n                            }\n                          >\n                            {clientTypeData.map((entry, index) => (\n                              <Cell key={entry.client_type} fill={COLORS[index % COLORS.length]} />\n                            ))}\n                          </Pie>\n                          <Tooltip formatter={(value) => formatHours(value) + ' hours'} />\n                          <Legend />\n                        </PieChart>\n                      </ResponsiveContainer>\n                    ) : (\n                      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100%\">\n                        <Typography color=\"text.secondary\">No client type data available</Typography>\n                      </Box>\n                    )}\n                  </Box>\n                </Box>\n              </CardContent>\n            </Card>\n          </div>\n          <div key=\"hoursByClient\">\n            <Card>\n              <CardContent>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                  <Typography variant=\"h6\" gutterBottom>\n                    Hours by Client\n                  </Typography>\n                  <IconButton onClick={(e) => handleMenuClick(e, 'hoursByClient')}>\n                    <MoreVertIcon />\n                  </IconButton>\n                </Box>\n                <Box sx={{ height: 300 }}>\n                  {projectData && projectData.length > 0 ? (\n                    <ResponsiveContainer>\n                      <BarChart\n                        data={(() => {\n                          // Aggregate hours by client_name\n                          const clientHours = {};\n                          projectData.forEach(project => {\n                            const client = project.client_name || 'Unassigned';\n                            clientHours[client] = (clientHours[client] || 0) + project.total_hours;\n                          });\n                          // Convert to array for recharts\n                          return Object.entries(clientHours).map(([name, hours]) => ({\n                            name,\n                            hours: Math.round(hours * 100) / 100\n                          }));\n                        })()}\n                        margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n                      >\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"name\" />\n                        <YAxis />\n                        <Tooltip formatter={value => value + ' hours'} />\n                        <Legend />\n                        <Bar dataKey=\"hours\" fill=\"#8884d8\" name=\"Hours\" />\n                      </BarChart>\n                    </ResponsiveContainer>\n                  ) : (\n                    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100%\">\n                      <Typography color=\"text.secondary\">No client data available</Typography>\n                    </Box>\n                  )}\n                </Box>\n              </CardContent>\n            </Card>\n          </div>\n        </ResponsiveGridLayout>\n      </Box>\n      <Menu\n        anchorEl={menuAnchorEl}\n        open={Boolean(menuAnchorEl)}\n        onClose={handleMenuClose}\n      >\n        <MenuItem onClick={() => handleSizeChange(WIDGET_SIZES.SMALL)}>\n          Small (Half Width)\n        </MenuItem>\n        <MenuItem onClick={() => handleSizeChange(WIDGET_SIZES.WIDE)}>\n          Wide (Full Width)\n        </MenuItem>\n        <MenuItem \n          onClick={() => handleMove('left')}\n          disabled={!canMove(activeWidget, 'left')}\n        >\n          Move Left\n        </MenuItem>\n        <MenuItem \n          onClick={() => handleMove('right')}\n          disabled={!canMove(activeWidget, 'right')}\n        >\n          Move Right\n        </MenuItem>\n        <MenuItem \n          onClick={() => handleMove('up')}\n          disabled={!canMove(activeWidget, 'up')}\n        >\n          Move Up\n        </MenuItem>\n        <MenuItem \n          onClick={() => handleMove('down')}\n          disabled={!canMove(activeWidget, 'down')}\n        >\n          Move Down\n        </MenuItem>\n      </Menu>\n    </Box>\n  );\n}\n\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}