{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\golun\\\\TimeTracker\\\\client\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Card, CardContent, Typography, MenuItem, TextField, CircularProgress, Alert, Switch, FormControlLabel, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, IconButton, Collapse } from '@mui/material';\nimport { BarChart, Bar, PieChart, Pie, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, HeatMap } from 'recharts';\nimport { startOfWeek, startOfMonth, startOfQuarter, startOfYear, format } from 'date-fns';\nimport axios from 'axios';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport { Responsive, WidthProvider } from 'react-grid-layout';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8'];\nconst timeRanges = [{\n  value: 'week',\n  label: 'This Week'\n}, {\n  value: 'month',\n  label: 'This Month'\n}, {\n  value: 'quarter',\n  label: 'This Quarter'\n}, {\n  value: 'year',\n  label: 'This Year'\n}, {\n  value: 'all',\n  label: 'All Time'\n}];\nconst ResponsiveGridLayout = WidthProvider(Responsive);\n_c = ResponsiveGridLayout;\nfunction Dashboard() {\n  _s();\n  const [timeRange, setTimeRange] = useState('month');\n  const [projectData, setProjectData] = useState([]);\n  const [userData, setUserData] = useState([]);\n  const [clientTypeData, setClientTypeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showPercent, setShowPercent] = useState(false);\n  const [expandedProjects, setExpandedProjects] = useState([]);\n  const [showProjectPercent, setShowProjectPercent] = useState(false);\n  const [viewByUser, setViewByUser] = useState(false);\n  const getDateRange = () => {\n    const now = new Date();\n    let startDate;\n    switch (timeRange) {\n      case 'week':\n        startDate = startOfWeek(now, {\n          weekStartsOn: 1\n        });\n        break;\n      case 'month':\n        startDate = startOfMonth(now);\n        break;\n      case 'quarter':\n        startDate = startOfQuarter(now);\n        break;\n      case 'year':\n        startDate = startOfYear(now);\n        break;\n      default:\n        startDate = null;\n    }\n    return {\n      startDate: startDate ? format(startDate, 'yyyy-MM-dd') + 'T00:00:00.000Z' : null,\n      endDate: format(now, 'yyyy-MM-dd') + 'T23:59:59.999Z'\n    };\n  };\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const {\n        startDate,\n        endDate\n      } = getDateRange();\n      const dateParams = startDate ? `?startDate=${startDate}&endDate=${endDate}` : '';\n      console.log('Fetching analytics data with params:', {\n        startDate,\n        endDate\n      });\n      const [projectRes, userRes, clientTypeRes] = await Promise.all([axios.get(`/api/analytics/time-by-project${dateParams}`), axios.get(`/api/analytics/time-by-user${dateParams}`), axios.get(`/api/analytics/time-by-client-type${dateParams}`)]);\n      console.log('Project data:', projectRes.data);\n      console.log('User data:', userRes.data);\n      console.log('Client type data:', clientTypeRes.data);\n      setProjectData(projectRes.data);\n      setUserData(userRes.data);\n      setClientTypeData(clientTypeRes.data);\n    } catch (err) {\n      console.error('Error fetching analytics:', err);\n      setError('Failed to fetch analytics data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, [timeRange]);\n  const formatHours = hours => {\n    return Math.round(hours * 100) / 100;\n  };\n\n  // Prepare users and projects arrays first so they are available for all calculations\n  const users = Array.from(new Set(userData.map(d => d.user_name)));\n  const projects = Array.from(new Set(userData.map(d => d.project_name)));\n\n  // Helper: count weekdays between two dates (inclusive)\n  function countWeekdays(start, end) {\n    let count = 0;\n    let current = new Date(start);\n    while (current <= end) {\n      const day = current.getDay();\n      if (day !== 0 && day !== 6) count++;\n      current.setDate(current.getDate() + 1);\n    }\n    return count;\n  }\n\n  // Calculate period start/end\n  const now = new Date();\n  let periodStart, periodEnd;\n  switch (timeRange) {\n    case 'week':\n      periodStart = startOfWeek(now);\n      periodEnd = now;\n      break;\n    case 'month':\n      periodStart = startOfMonth(now);\n      periodEnd = now;\n      break;\n    case 'quarter':\n      periodStart = startOfQuarter(now);\n      periodEnd = now;\n      break;\n    case 'year':\n      periodStart = startOfYear(now);\n      periodEnd = now;\n      break;\n    case 'all':\n    default:\n      // Use earliest and latest date in userData\n      const allDates = userData.map(d => new Date(d.start_time)).filter(Boolean);\n      periodStart = allDates.length ? new Date(Math.min(...allDates)) : now;\n      periodEnd = allDates.length ? new Date(Math.max(...allDates)) : now;\n      break;\n  }\n  const weekdays = countWeekdays(periodStart, periodEnd);\n  const userCapacity = users.map(() => weekdays * 8);\n  // Calculate total hours logged per user in the period\n  const userLogged = users.map(user => userData.filter(d => d.user_name === user).reduce((sum, d) => sum + d.total_hours, 0));\n  const userAvailable = userCapacity.map((cap, i) => Math.max(0, cap - userLogged[i]));\n\n  // Calculate total system hours across all projects\n  const totalSystemHours = projectData.reduce((sum, project) => sum + project.total_hours, 0);\n\n  // Build a matrix: rows = projects, cols = users\n  const heatMapData = [userAvailable,\n  // Capacity row\n  userLogged,\n  // Total load row\n  ...projects.map(project => users.map(user => {\n    const found = userData.find(d => d.user_name === user && d.project_name === project);\n    return found ? found.total_hours : 0;\n  }))];\n  const allProjectsWithCapacity = ['Capacity', 'Total load', ...projects];\n\n  // Set column width for heatmap (wider for wrapped names)\n  const colWidth = 100;\n  const cellWidth = 95;\n  const cellHeight = 35;\n  const xOffset = 100;\n  const yOffset = 60;\n  const heatmapRows = allProjectsWithCapacity.length;\n  const heatmapHeight = heatmapRows * cellHeight + yOffset + 40; // 40 for header padding\n\n  const handleExpandClick = projectName => {\n    setExpandedProjects(prev => prev.includes(projectName) ? prev.filter(name => name !== projectName) : [...prev, projectName]);\n  };\n\n  // Precompute table rows to avoid returning arrays or IIFEs in JSX\n  let projectRows = [];\n  let userRows = [];\n  if (viewByUser) {\n    const usersList = Array.from(new Set(userData.map(d => d.user_name)));\n    usersList.forEach(user => {\n      const isExpanded = expandedProjects.includes(user);\n      const userProjects = userData.filter(d => d.user_name === user && d.total_hours > 0).map(d => ({\n        project: d.project_name,\n        hours: d.total_hours\n      }));\n      const userTotalHours = userProjects.reduce((sum, p) => sum + p.hours, 0);\n      const percent = totalSystemHours > 0 ? userTotalHours / totalSystemHours * 100 : 0;\n      userRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          sx: {\n            fontWeight: 500\n          },\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            onClick: () => handleExpandClick(user),\n            children: isExpanded ? /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), user]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: showProjectPercent ? `${Math.round(percent)}%` : `${formatHours(userTotalHours)}h`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: '100%',\n              height: 16,\n              bgcolor: '#e3eafc',\n              borderRadius: 2,\n              position: 'relative'\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: `${percent}%`,\n                height: '100%',\n                bgcolor: '#1976d2',\n                borderRadius: 2,\n                transition: 'width 0.3s'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, user, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this));\n      if (isExpanded && userProjects.length > 0) {\n        userProjects.forEach(p => {\n          const projectPercent = p.hours / userTotalHours * 100;\n          userRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                pl: 6\n              },\n              children: p.project\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: showProjectPercent ? `${Math.round(projectPercent)}%` : `${formatHours(p.hours)}h`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: '100%',\n                  height: 12,\n                  bgcolor: '#e3eafc',\n                  borderRadius: 2,\n                  position: 'relative'\n                },\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    width: `${projectPercent}%`,\n                    height: '100%',\n                    bgcolor: '#1976d2',\n                    borderRadius: 2,\n                    transition: 'width 0.3s'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this)]\n          }, user + '-' + p.project, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this));\n        });\n      }\n      if (isExpanded && userProjects.length === 0) {\n        userRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n          children: /*#__PURE__*/_jsxDEV(TableCell, {\n            colSpan: 3,\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"text.secondary\",\n              children: \"No project data for this user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this)\n        }, user + '-no-projects', false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this));\n      }\n    });\n  } else {\n    projectData.forEach(project => {\n      const isExpanded = expandedProjects.includes(project.project_name);\n      const usersForProject = userData.filter(d => d.project_name === project.project_name && d.total_hours > 0).map(d => ({\n        user: d.user_name,\n        hours: d.total_hours\n      }));\n      const percent = totalSystemHours > 0 ? project.total_hours / totalSystemHours * 100 : 0;\n      projectRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          sx: {\n            fontWeight: 500\n          },\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            onClick: () => handleExpandClick(project.project_name),\n            children: isExpanded ? /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), project.project_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: showProjectPercent ? `${Math.round(percent)}%` : `${formatHours(project.total_hours)}h`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: '100%',\n              height: 16,\n              bgcolor: '#e3eafc',\n              borderRadius: 2,\n              position: 'relative'\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: `${percent}%`,\n                height: '100%',\n                bgcolor: '#1976d2',\n                borderRadius: 2,\n                transition: 'width 0.3s'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this)]\n      }, project.project_name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this));\n      if (isExpanded && usersForProject.length > 0) {\n        usersForProject.forEach(u => {\n          const userPercent = u.hours / project.total_hours * 100;\n          projectRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                pl: 6\n              },\n              children: u.user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: showProjectPercent ? `${Math.round(userPercent)}%` : `${formatHours(u.hours)}h`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: '100%',\n                  height: 12,\n                  bgcolor: '#e3eafc',\n                  borderRadius: 2,\n                  position: 'relative'\n                },\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    width: `${userPercent}%`,\n                    height: '100%',\n                    bgcolor: '#1976d2',\n                    borderRadius: 2,\n                    transition: 'width 0.3s'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 15\n            }, this)]\n          }, project.project_name + '-' + u.user, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this));\n        });\n      }\n      if (isExpanded && usersForProject.length === 0) {\n        projectRows.push(/*#__PURE__*/_jsxDEV(TableRow, {\n          children: /*#__PURE__*/_jsxDEV(TableCell, {\n            colSpan: 3,\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"text.secondary\",\n              children: \"No user data for this project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this)\n        }, project.project_name + '-no-users', false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this));\n      }\n    });\n  }\n\n  // Always flatten the rows to avoid nested arrays\n  userRows = userRows.flat(Infinity);\n  projectRows = projectRows.flat(Infinity);\n\n  // Debug: log the full structure of the rows before rendering\n  try {\n    console.log('userRows (full):', JSON.stringify(userRows));\n  } catch (e) {\n    console.log('userRows (full):', userRows);\n  }\n  try {\n    console.log('projectRows (full):', JSON.stringify(projectRows));\n  } catch (e) {\n    console.log('projectRows (full):', projectRows);\n  }\n  let tableRows;\n  if (viewByUser) {\n    tableRows = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: userRows\n    }, void 0, false);\n  } else if (projectRows.length > 0) {\n    tableRows = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: projectRows\n    }, void 0, false);\n  } else {\n    tableRows = /*#__PURE__*/_jsxDEV(TableRow, {\n      children: /*#__PURE__*/_jsxDEV(TableCell, {\n        colSpan: 3,\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"text.secondary\",\n          children: \"No project data available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 7\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"60vh\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(ResponsiveGridLayout, {\n    className: \"layout\",\n    layouts: {\n      lg: [{\n        i: 'projectHours',\n        x: 0,\n        y: 0,\n        w: 6,\n        h: 6\n      }, {\n        i: 'clientType',\n        x: 6,\n        y: 0,\n        w: 6,\n        h: 6\n      }, {\n        i: 'hoursByClient',\n        x: 0,\n        y: 6,\n        w: 12,\n        h: 6\n      }]\n    },\n    breakpoints: {\n      lg: 1200,\n      md: 996,\n      sm: 768,\n      xs: 480,\n      xxs: 0\n    },\n    cols: {\n      lg: 12,\n      md: 10,\n      sm: 6,\n      xs: 4,\n      xxs: 2\n    },\n    rowHeight: 50,\n    draggableHandle: \".MuiCardContent-root\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Hours by Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                gap: 2,\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Switch, {\n                  checked: viewByUser,\n                  onChange: e => setViewByUser(e.target.checked),\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 21\n                }, this),\n                label: viewByUser ? \"View by User\" : \"View by Project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Switch, {\n                  checked: showProjectPercent,\n                  onChange: e => setShowProjectPercent(e.target.checked),\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 21\n                }, this),\n                label: showProjectPercent ? 'Show: % of System Total' : 'Show: Hours'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n              component: Paper,\n              sx: {\n                boxShadow: 'none'\n              },\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                size: \"small\",\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      sx: {\n                        fontWeight: 600\n                      },\n                      children: \"Project\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 458,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      sx: {\n                        fontWeight: 600\n                      },\n                      children: \"Total Hours\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 459,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      sx: {\n                        fontWeight: 600\n                      },\n                      children: \"Load\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 460,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 457,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: tableRows\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this)\n    }, \"projectHours\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Internal vs External Hours\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                height: 300\n              },\n              children: clientTypeData.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                children: /*#__PURE__*/_jsxDEV(PieChart, {\n                  children: [/*#__PURE__*/_jsxDEV(Pie, {\n                    data: clientTypeData,\n                    dataKey: \"total_hours\",\n                    nameKey: \"client_type\",\n                    cx: \"50%\",\n                    cy: \"50%\",\n                    outerRadius: 100,\n                    label: ({\n                      client_type,\n                      total_hours\n                    }) => `${client_type}: ${formatHours(total_hours)}h`,\n                    children: clientTypeData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                      fill: COLORS[index % COLORS.length]\n                    }, entry.client_type, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 495,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 483,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    formatter: value => formatHours(value) + ' hours'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 498,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 499,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 482,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                height: \"100%\",\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  color: \"text.secondary\",\n                  children: \"No client type data available\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 504,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this)\n    }, \"clientType\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Hours by Client\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                height: 300\n              },\n              children: projectData && projectData.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                children: /*#__PURE__*/_jsxDEV(BarChart, {\n                  data: (() => {\n                    const clientData = projectData.reduce((acc, project) => {\n                      if (!project || typeof project !== 'object') return acc;\n                      const clientName = project.client_name || 'Unassigned';\n                      const existingClient = acc.find(c => c.name === clientName);\n                      if (existingClient) {\n                        existingClient.hours += project.total_hours;\n                      } else {\n                        acc.push({\n                          name: clientName,\n                          hours: project.total_hours\n                        });\n                      }\n                      return acc;\n                    }, []);\n                    return clientData.filter(c => typeof c.name === 'string' && typeof c.hours === 'number');\n                  })(),\n                  margin: {\n                    top: 20,\n                    right: 30,\n                    left: 20,\n                    bottom: 5\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                    strokeDasharray: \"3 3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 539,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                    dataKey: \"name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 540,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 541,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    formatter: value => formatHours(value) + ' hours'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 542,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 543,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                    dataKey: \"hours\",\n                    fill: \"#8884d8\",\n                    name: \"Hours\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 544,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 522,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                height: \"100%\",\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  color: \"text.secondary\",\n                  children: \"No client data available\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 549,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 9\n      }, this)\n    }, \"hoursByClient\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 413,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"G1goW1lS/Fp/Ud/42176lDpiqXk=\");\n_c2 = Dashboard;\nexport default Dashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"ResponsiveGridLayout\");\n$RefreshReg$(_c2, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Box","Card","CardContent","Typography","MenuItem","TextField","CircularProgress","Alert","Switch","FormControlLabel","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","IconButton","Collapse","BarChart","Bar","PieChart","Pie","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","HeatMap","startOfWeek","startOfMonth","startOfQuarter","startOfYear","format","axios","AddIcon","RemoveIcon","Responsive","WidthProvider","jsxDEV","_jsxDEV","Fragment","_Fragment","COLORS","timeRanges","value","label","ResponsiveGridLayout","_c","Dashboard","_s","timeRange","setTimeRange","projectData","setProjectData","userData","setUserData","clientTypeData","setClientTypeData","loading","setLoading","error","setError","showPercent","setShowPercent","expandedProjects","setExpandedProjects","showProjectPercent","setShowProjectPercent","viewByUser","setViewByUser","getDateRange","now","Date","startDate","weekStartsOn","endDate","fetchData","dateParams","console","log","projectRes","userRes","clientTypeRes","Promise","all","get","data","err","formatHours","hours","Math","round","users","Array","from","Set","map","d","user_name","projects","project_name","countWeekdays","start","end","count","current","day","getDay","setDate","getDate","periodStart","periodEnd","allDates","start_time","filter","Boolean","length","min","max","weekdays","userCapacity","userLogged","user","reduce","sum","total_hours","userAvailable","cap","i","totalSystemHours","project","heatMapData","found","find","allProjectsWithCapacity","colWidth","cellWidth","cellHeight","xOffset","yOffset","heatmapRows","heatmapHeight","handleExpandClick","projectName","prev","includes","name","projectRows","userRows","usersList","forEach","isExpanded","userProjects","userTotalHours","p","percent","push","children","sx","fontWeight","size","onClick","fileName","_jsxFileName","lineNumber","columnNumber","width","height","bgcolor","borderRadius","position","transition","projectPercent","pl","colSpan","align","color","usersForProject","u","userPercent","flat","Infinity","JSON","stringify","e","tableRows","display","justifyContent","alignItems","minHeight","className","layouts","lg","x","y","w","h","breakpoints","md","sm","xs","xxs","cols","rowHeight","draggableHandle","variant","gutterBottom","gap","mb","control","checked","onChange","target","component","boxShadow","dataKey","nameKey","cx","cy","outerRadius","client_type","entry","index","fill","formatter","clientData","acc","clientName","client_name","existingClient","c","margin","top","right","left","bottom","strokeDasharray","_c2","$RefreshReg$"],"sources":["C:/Users/golun/TimeTracker/client/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  MenuItem,\n  TextField,\n  CircularProgress,\n  Alert,\n  Switch,\n  FormControlLabel,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  IconButton,\n  Collapse,\n} from '@mui/material';\nimport {\n  BarChart,\n  Bar,\n  PieChart,\n  Pie,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  HeatMap,\n} from 'recharts';\nimport { startOfWeek, startOfMonth, startOfQuarter, startOfYear, format } from 'date-fns';\nimport axios from 'axios';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport { Responsive, WidthProvider } from 'react-grid-layout';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8'];\n\nconst timeRanges = [\n  { value: 'week', label: 'This Week' },\n  { value: 'month', label: 'This Month' },\n  { value: 'quarter', label: 'This Quarter' },\n  { value: 'year', label: 'This Year' },\n  { value: 'all', label: 'All Time' },\n];\n\nconst ResponsiveGridLayout = WidthProvider(Responsive);\n\nfunction Dashboard() {\n  const [timeRange, setTimeRange] = useState('month');\n  const [projectData, setProjectData] = useState([]);\n  const [userData, setUserData] = useState([]);\n  const [clientTypeData, setClientTypeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showPercent, setShowPercent] = useState(false);\n  const [expandedProjects, setExpandedProjects] = useState([]);\n  const [showProjectPercent, setShowProjectPercent] = useState(false);\n  const [viewByUser, setViewByUser] = useState(false);\n\n  const getDateRange = () => {\n    const now = new Date();\n    let startDate;\n\n    switch (timeRange) {\n      case 'week':\n        startDate = startOfWeek(now, { weekStartsOn: 1 });\n        break;\n      case 'month':\n        startDate = startOfMonth(now);\n        break;\n      case 'quarter':\n        startDate = startOfQuarter(now);\n        break;\n      case 'year':\n        startDate = startOfYear(now);\n        break;\n      default:\n        startDate = null;\n    }\n\n    return {\n      startDate: startDate ? format(startDate, 'yyyy-MM-dd') + 'T00:00:00.000Z' : null,\n      endDate: format(now, 'yyyy-MM-dd') + 'T23:59:59.999Z',\n    };\n  };\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const { startDate, endDate } = getDateRange();\n      const dateParams = startDate ? `?startDate=${startDate}&endDate=${endDate}` : '';\n\n      console.log('Fetching analytics data with params:', { startDate, endDate });\n\n      const [projectRes, userRes, clientTypeRes] = await Promise.all([\n        axios.get(`/api/analytics/time-by-project${dateParams}`),\n        axios.get(`/api/analytics/time-by-user${dateParams}`),\n        axios.get(`/api/analytics/time-by-client-type${dateParams}`),\n      ]);\n\n      console.log('Project data:', projectRes.data);\n      console.log('User data:', userRes.data);\n      console.log('Client type data:', clientTypeRes.data);\n\n      setProjectData(projectRes.data);\n      setUserData(userRes.data);\n      setClientTypeData(clientTypeRes.data);\n    } catch (err) {\n      console.error('Error fetching analytics:', err);\n      setError('Failed to fetch analytics data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [timeRange]);\n\n  const formatHours = (hours) => {\n    return Math.round(hours * 100) / 100;\n  };\n\n  // Prepare users and projects arrays first so they are available for all calculations\n  const users = Array.from(new Set(userData.map(d => d.user_name)));\n  const projects = Array.from(new Set(userData.map(d => d.project_name)));\n\n  // Helper: count weekdays between two dates (inclusive)\n  function countWeekdays(start, end) {\n    let count = 0;\n    let current = new Date(start);\n    while (current <= end) {\n      const day = current.getDay();\n      if (day !== 0 && day !== 6) count++;\n      current.setDate(current.getDate() + 1);\n    }\n    return count;\n  }\n\n  // Calculate period start/end\n  const now = new Date();\n  let periodStart, periodEnd;\n  switch (timeRange) {\n    case 'week':\n      periodStart = startOfWeek(now);\n      periodEnd = now;\n      break;\n    case 'month':\n      periodStart = startOfMonth(now);\n      periodEnd = now;\n      break;\n    case 'quarter':\n      periodStart = startOfQuarter(now);\n      periodEnd = now;\n      break;\n    case 'year':\n      periodStart = startOfYear(now);\n      periodEnd = now;\n      break;\n    case 'all':\n    default:\n      // Use earliest and latest date in userData\n      const allDates = userData.map(d => new Date(d.start_time)).filter(Boolean);\n      periodStart = allDates.length ? new Date(Math.min(...allDates)) : now;\n      periodEnd = allDates.length ? new Date(Math.max(...allDates)) : now;\n      break;\n  }\n  const weekdays = countWeekdays(periodStart, periodEnd);\n  const userCapacity = users.map(() => weekdays * 8);\n  // Calculate total hours logged per user in the period\n  const userLogged = users.map(user =>\n    userData.filter(d => d.user_name === user).reduce((sum, d) => sum + d.total_hours, 0)\n  );\n  const userAvailable = userCapacity.map((cap, i) => Math.max(0, cap - userLogged[i]));\n\n  // Calculate total system hours across all projects\n  const totalSystemHours = projectData.reduce((sum, project) => sum + project.total_hours, 0);\n\n  // Build a matrix: rows = projects, cols = users\n  const heatMapData = [\n    userAvailable, // Capacity row\n    userLogged,   // Total load row\n    ...projects.map(project =>\n      users.map(user => {\n        const found = userData.find(d => d.user_name === user && d.project_name === project);\n        return found ? found.total_hours : 0;\n      })\n    )\n  ];\n  const allProjectsWithCapacity = ['Capacity', 'Total load', ...projects];\n\n  // Set column width for heatmap (wider for wrapped names)\n  const colWidth = 100;\n  const cellWidth = 95;\n  const cellHeight = 35;\n  const xOffset = 100;\n  const yOffset = 60;\n  const heatmapRows = allProjectsWithCapacity.length;\n  const heatmapHeight = heatmapRows * cellHeight + yOffset + 40; // 40 for header padding\n\n  const handleExpandClick = (projectName) => {\n    setExpandedProjects((prev) =>\n      prev.includes(projectName)\n        ? prev.filter((name) => name !== projectName)\n        : [...prev, projectName]\n    );\n  };\n\n  // Precompute table rows to avoid returning arrays or IIFEs in JSX\n  let projectRows = [];\n  let userRows = [];\n\n  if (viewByUser) {\n    const usersList = Array.from(new Set(userData.map(d => d.user_name)));\n    usersList.forEach(user => {\n      const isExpanded = expandedProjects.includes(user);\n      const userProjects = userData\n        .filter(d => d.user_name === user && d.total_hours > 0)\n        .map(d => ({ project: d.project_name, hours: d.total_hours }));\n      const userTotalHours = userProjects.reduce((sum, p) => sum + p.hours, 0);\n      const percent = totalSystemHours > 0 ? (userTotalHours / totalSystemHours) * 100 : 0;\n      userRows.push(\n        <TableRow key={user}>\n          <TableCell sx={{ fontWeight: 500 }}>\n            <IconButton size=\"small\" onClick={() => handleExpandClick(user)}>\n              {isExpanded ? <RemoveIcon /> : <AddIcon />}\n            </IconButton>\n            {user}\n          </TableCell>\n          <TableCell>\n            {showProjectPercent\n              ? `${Math.round(percent)}%`\n              : `${formatHours(userTotalHours)}h`}\n          </TableCell>\n          <TableCell>\n            <Box sx={{ width: '100%', height: 16, bgcolor: '#e3eafc', borderRadius: 2, position: 'relative' }}>\n              <Box\n                sx={{\n                  width: `${percent}%`,\n                  height: '100%',\n                  bgcolor: '#1976d2',\n                  borderRadius: 2,\n                  transition: 'width 0.3s',\n                }}\n              />\n            </Box>\n          </TableCell>\n        </TableRow>\n      );\n      if (isExpanded && userProjects.length > 0) {\n        userProjects.forEach(p => {\n          const projectPercent = (p.hours / userTotalHours) * 100;\n          userRows.push(\n            <TableRow key={user + '-' + p.project}>\n              <TableCell sx={{ pl: 6 }}>{p.project}</TableCell>\n              <TableCell>\n                {showProjectPercent\n                  ? `${Math.round(projectPercent)}%`\n                  : `${formatHours(p.hours)}h`}\n              </TableCell>\n              <TableCell>\n                <Box sx={{ width: '100%', height: 12, bgcolor: '#e3eafc', borderRadius: 2, position: 'relative' }}>\n                  <Box\n                    sx={{\n                      width: `${projectPercent}%`,\n                      height: '100%',\n                      bgcolor: '#1976d2',\n                      borderRadius: 2,\n                      transition: 'width 0.3s',\n                    }}\n                  />\n                </Box>\n              </TableCell>\n            </TableRow>\n          );\n        });\n      }\n      if (isExpanded && userProjects.length === 0) {\n        userRows.push(\n          <TableRow key={user + '-no-projects'}>\n            <TableCell colSpan={3} align=\"center\">\n              <Typography color=\"text.secondary\">No project data for this user</Typography>\n            </TableCell>\n          </TableRow>\n        );\n      }\n    });\n  } else {\n    projectData.forEach(project => {\n      const isExpanded = expandedProjects.includes(project.project_name);\n      const usersForProject = userData\n        .filter(d => d.project_name === project.project_name && d.total_hours > 0)\n        .map(d => ({ user: d.user_name, hours: d.total_hours }));\n      const percent = totalSystemHours > 0 ? (project.total_hours / totalSystemHours) * 100 : 0;\n      projectRows.push(\n        <TableRow key={project.project_name}>\n          <TableCell sx={{ fontWeight: 500 }}>\n            <IconButton size=\"small\" onClick={() => handleExpandClick(project.project_name)}>\n              {isExpanded ? <RemoveIcon /> : <AddIcon />}\n            </IconButton>\n            {project.project_name}\n          </TableCell>\n          <TableCell>\n            {showProjectPercent\n              ? `${Math.round(percent)}%`\n              : `${formatHours(project.total_hours)}h`}\n          </TableCell>\n          <TableCell>\n            <Box sx={{ width: '100%', height: 16, bgcolor: '#e3eafc', borderRadius: 2, position: 'relative' }}>\n              <Box\n                sx={{\n                  width: `${percent}%`,\n                  height: '100%',\n                  bgcolor: '#1976d2',\n                  borderRadius: 2,\n                  transition: 'width 0.3s',\n                }}\n              />\n            </Box>\n          </TableCell>\n        </TableRow>\n      );\n      if (isExpanded && usersForProject.length > 0) {\n        usersForProject.forEach(u => {\n          const userPercent = (u.hours / project.total_hours) * 100;\n          projectRows.push(\n            <TableRow key={project.project_name + '-' + u.user}>\n              <TableCell sx={{ pl: 6 }}>{u.user}</TableCell>\n              <TableCell>\n                {showProjectPercent\n                  ? `${Math.round(userPercent)}%`\n                  : `${formatHours(u.hours)}h`}\n              </TableCell>\n              <TableCell>\n                <Box sx={{ width: '100%', height: 12, bgcolor: '#e3eafc', borderRadius: 2, position: 'relative' }}>\n                  <Box\n                    sx={{\n                      width: `${userPercent}%`,\n                      height: '100%',\n                      bgcolor: '#1976d2',\n                      borderRadius: 2,\n                      transition: 'width 0.3s',\n                    }}\n                  />\n                </Box>\n              </TableCell>\n            </TableRow>\n          );\n        });\n      }\n      if (isExpanded && usersForProject.length === 0) {\n        projectRows.push(\n          <TableRow key={project.project_name + '-no-users'}>\n            <TableCell colSpan={3} align=\"center\">\n              <Typography color=\"text.secondary\">No user data for this project</Typography>\n            </TableCell>\n          </TableRow>\n        );\n      }\n    });\n  }\n\n  // Always flatten the rows to avoid nested arrays\n  userRows = userRows.flat(Infinity);\n  projectRows = projectRows.flat(Infinity);\n\n  // Debug: log the full structure of the rows before rendering\n  try {\n    console.log('userRows (full):', JSON.stringify(userRows));\n  } catch (e) {\n    console.log('userRows (full):', userRows);\n  }\n  try {\n    console.log('projectRows (full):', JSON.stringify(projectRows));\n  } catch (e) {\n    console.log('projectRows (full):', projectRows);\n  }\n\n  let tableRows;\n  if (viewByUser) {\n    tableRows = <>{userRows}</>;\n  } else if (projectRows.length > 0) {\n    tableRows = <>{projectRows}</>;\n  } else {\n    tableRows = (\n      <TableRow>\n        <TableCell colSpan={3} align=\"center\">\n          <Typography color=\"text.secondary\">No project data available</Typography>\n        </TableCell>\n      </TableRow>\n    );\n  }\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"60vh\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  return (\n    <ResponsiveGridLayout\n      className=\"layout\"\n      layouts={{ lg: [\n        { i: 'projectHours', x: 0, y: 0, w: 6, h: 6 },\n        { i: 'clientType', x: 6, y: 0, w: 6, h: 6 },\n        { i: 'hoursByClient', x: 0, y: 6, w: 12, h: 6 },\n      ] }}\n      breakpoints={{ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 }}\n      cols={{ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }}\n      rowHeight={50}\n      draggableHandle=\".MuiCardContent-root\"\n    >\n      <div key=\"projectHours\">\n        <Card>\n          <CardContent>\n            <Box>\n              <Typography variant=\"h6\" gutterBottom>\n                Hours by Project\n              </Typography>\n              <Box sx={{ display: 'flex', gap: 2, mb: 2 }}>\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={viewByUser}\n                      onChange={e => setViewByUser(e.target.checked)}\n                      color=\"primary\"\n                    />\n                  }\n                  label={viewByUser ? \"View by User\" : \"View by Project\"}\n                />\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={showProjectPercent}\n                      onChange={e => setShowProjectPercent(e.target.checked)}\n                      color=\"primary\"\n                    />\n                  }\n                  label={showProjectPercent ? 'Show: % of System Total' : 'Show: Hours'}\n                />\n              </Box>\n              <TableContainer component={Paper} sx={{ boxShadow: 'none' }}>\n                <Table size=\"small\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell sx={{ fontWeight: 600 }}>Project</TableCell>\n                      <TableCell sx={{ fontWeight: 600 }}>Total Hours</TableCell>\n                      <TableCell sx={{ fontWeight: 600 }}>Load</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {tableRows}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </Box>\n          </CardContent>\n        </Card>\n      </div>\n      <div key=\"clientType\">\n        <Card>\n          <CardContent>\n            <Box>\n              <Typography variant=\"h6\" gutterBottom>\n                Internal vs External Hours\n              </Typography>\n              <Box sx={{ height: 300 }}>\n                {clientTypeData.length > 0 ? (\n                  <ResponsiveContainer>\n                    <PieChart>\n                      <Pie\n                        data={clientTypeData}\n                        dataKey=\"total_hours\"\n                        nameKey=\"client_type\"\n                        cx=\"50%\"\n                        cy=\"50%\"\n                        outerRadius={100}\n                        label={({ client_type, total_hours }) => \n                          `${client_type}: ${formatHours(total_hours)}h`\n                        }\n                      >\n                        {clientTypeData.map((entry, index) => (\n                          <Cell key={entry.client_type} fill={COLORS[index % COLORS.length]} />\n                        ))}\n                      </Pie>\n                      <Tooltip formatter={(value) => formatHours(value) + ' hours'} />\n                      <Legend />\n                    </PieChart>\n                  </ResponsiveContainer>\n                ) : (\n                  <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100%\">\n                    <Typography color=\"text.secondary\">No client type data available</Typography>\n                  </Box>\n                )}\n              </Box>\n            </Box>\n          </CardContent>\n        </Card>\n      </div>\n      <div key=\"hoursByClient\">\n        <Card>\n          <CardContent>\n            <Box>\n              <Typography variant=\"h6\" gutterBottom>\n                Hours by Client\n              </Typography>\n              <Box sx={{ height: 300 }}>\n                {projectData && projectData.length > 0 ? (\n                  <ResponsiveContainer>\n                    <BarChart\n                      data={(() => {\n                        const clientData = projectData.reduce((acc, project) => {\n                          if (!project || typeof project !== 'object') return acc;\n                          const clientName = project.client_name || 'Unassigned';\n                          const existingClient = acc.find(c => c.name === clientName);\n                          if (existingClient) {\n                            existingClient.hours += project.total_hours;\n                          } else {\n                            acc.push({ name: clientName, hours: project.total_hours });\n                          }\n                          return acc;\n                        }, []);\n                        return clientData.filter(c => typeof c.name === 'string' && typeof c.hours === 'number');\n                      })()}\n                      margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n                    >\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey=\"name\" />\n                      <YAxis />\n                      <Tooltip formatter={(value) => formatHours(value) + ' hours'} />\n                      <Legend />\n                      <Bar dataKey=\"hours\" fill=\"#8884d8\" name=\"Hours\" />\n                    </BarChart>\n                  </ResponsiveContainer>\n                ) : (\n                  <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100%\">\n                    <Typography color=\"text.secondary\">No client data available</Typography>\n                  </Box>\n                )}\n              </Box>\n            </Box>\n          </CardContent>\n        </Card>\n      </div>\n    </ResponsiveGridLayout>\n  );\n}\n\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}