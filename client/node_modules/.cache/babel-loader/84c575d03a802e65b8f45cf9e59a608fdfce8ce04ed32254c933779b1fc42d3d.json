{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\golun\\\\TimeTracker\\\\client\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Card, CardContent, Grid, Typography, MenuItem, TextField, CircularProgress, Alert, Switch, FormControlLabel, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, IconButton, Collapse } from '@mui/material';\nimport { BarChart, Bar, PieChart, Pie, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, HeatMap } from 'recharts';\nimport { startOfWeek, startOfMonth, startOfQuarter, startOfYear, format } from 'date-fns';\nimport axios from 'axios';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8'];\nconst timeRanges = [{\n  value: 'week',\n  label: 'This Week'\n}, {\n  value: 'month',\n  label: 'This Month'\n}, {\n  value: 'quarter',\n  label: 'This Quarter'\n}, {\n  value: 'year',\n  label: 'This Year'\n}, {\n  value: 'all',\n  label: 'All Time'\n}];\nfunction Dashboard() {\n  _s();\n  const [timeRange, setTimeRange] = useState('month');\n  const [projectData, setProjectData] = useState([]);\n  const [userData, setUserData] = useState([]);\n  const [clientTypeData, setClientTypeData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showPercent, setShowPercent] = useState(false);\n  const [expandedProjects, setExpandedProjects] = useState([]);\n  const [showProjectPercent, setShowProjectPercent] = useState(false);\n  const getDateRange = () => {\n    const now = new Date();\n    let startDate;\n    switch (timeRange) {\n      case 'week':\n        startDate = startOfWeek(now);\n        break;\n      case 'month':\n        startDate = startOfMonth(now);\n        break;\n      case 'quarter':\n        startDate = startOfQuarter(now);\n        break;\n      case 'year':\n        startDate = startOfYear(now);\n        break;\n      default:\n        startDate = null;\n    }\n    return {\n      startDate: startDate ? format(startDate, 'yyyy-MM-dd') : null,\n      endDate: format(now, 'yyyy-MM-dd')\n    };\n  };\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const {\n        startDate,\n        endDate\n      } = getDateRange();\n      const dateParams = startDate ? `?startDate=${startDate}&endDate=${endDate}` : '';\n      console.log('Fetching analytics data with params:', {\n        startDate,\n        endDate\n      });\n      const [projectRes, userRes, clientTypeRes] = await Promise.all([axios.get(`/api/analytics/time-by-project${dateParams}`), axios.get(`/api/analytics/time-by-user${dateParams}`), axios.get(`/api/analytics/time-by-client-type${dateParams}`)]);\n      console.log('Project data:', projectRes.data);\n      console.log('User data:', userRes.data);\n      console.log('Client type data:', clientTypeRes.data);\n      setProjectData(projectRes.data);\n      setUserData(userRes.data);\n      setClientTypeData(clientTypeRes.data);\n    } catch (err) {\n      console.error('Error fetching analytics:', err);\n      setError('Failed to fetch analytics data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, [timeRange]);\n  const formatHours = hours => {\n    return Math.round(hours * 100) / 100;\n  };\n\n  // Prepare users and projects arrays first so they are available for all calculations\n  const users = Array.from(new Set(userData.map(d => d.user_name)));\n  const projects = Array.from(new Set(userData.map(d => d.project_name)));\n\n  // Helper: count weekdays between two dates (inclusive)\n  function countWeekdays(start, end) {\n    let count = 0;\n    let current = new Date(start);\n    while (current <= end) {\n      const day = current.getDay();\n      if (day !== 0 && day !== 6) count++;\n      current.setDate(current.getDate() + 1);\n    }\n    return count;\n  }\n\n  // Calculate period start/end\n  const now = new Date();\n  let periodStart, periodEnd;\n  switch (timeRange) {\n    case 'week':\n      periodStart = startOfWeek(now);\n      periodEnd = now;\n      break;\n    case 'month':\n      periodStart = startOfMonth(now);\n      periodEnd = now;\n      break;\n    case 'quarter':\n      periodStart = startOfQuarter(now);\n      periodEnd = now;\n      break;\n    case 'year':\n      periodStart = startOfYear(now);\n      periodEnd = now;\n      break;\n    case 'all':\n    default:\n      // Use earliest and latest date in userData\n      const allDates = userData.map(d => new Date(d.start_time)).filter(Boolean);\n      periodStart = allDates.length ? new Date(Math.min(...allDates)) : now;\n      periodEnd = allDates.length ? new Date(Math.max(...allDates)) : now;\n      break;\n  }\n  const weekdays = countWeekdays(periodStart, periodEnd);\n  const userCapacity = users.map(() => weekdays * 8);\n  // Calculate total hours logged per user in the period\n  const userLogged = users.map(user => userData.filter(d => d.user_name === user).reduce((sum, d) => sum + d.total_hours, 0));\n  const userAvailable = userCapacity.map((cap, i) => Math.max(0, cap - userLogged[i]));\n\n  // Build a matrix: rows = projects, cols = users\n  const heatMapData = [userAvailable,\n  // Capacity row\n  userLogged,\n  // Total load row\n  ...projects.map(project => users.map(user => {\n    const found = userData.find(d => d.user_name === user && d.project_name === project);\n    return found ? found.total_hours : 0;\n  }))];\n  const allProjectsWithCapacity = ['Capacity', 'Total load', ...projects];\n\n  // Set column width for heatmap (wider for wrapped names)\n  const colWidth = 100;\n  const cellWidth = 95;\n  const cellHeight = 35;\n  const xOffset = 100;\n  const yOffset = 60;\n  const heatmapRows = allProjectsWithCapacity.length;\n  const heatmapHeight = heatmapRows * cellHeight + yOffset + 40; // 40 for header padding\n\n  const handleExpandClick = projectName => {\n    setExpandedProjects(prev => prev.includes(projectName) ? prev.filter(name => name !== projectName) : [...prev, projectName]);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"60vh\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        select: true,\n        value: timeRange,\n        onChange: e => setTimeRange(e.target.value),\n        sx: {\n          minWidth: 200\n        },\n        children: timeRanges.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: option.value,\n          children: option.label\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Hours by Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Switch, {\n                checked: showProjectPercent,\n                onChange: e => setShowProjectPercent(e.target.checked),\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 19\n              }, this),\n              label: showProjectPercent ? 'Show: % of Max Project' : 'Show: Hours',\n              sx: {\n                mb: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n              component: Paper,\n              sx: {\n                boxShadow: 'none'\n              },\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                size: \"small\",\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      sx: {\n                        fontWeight: 600\n                      },\n                      children: \"Project\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 266,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      sx: {\n                        fontWeight: 600\n                      },\n                      children: \"Total Hours\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 267,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      sx: {\n                        fontWeight: 600\n                      },\n                      children: \"Load\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 268,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: projectData.length > 0 ? (() => {\n                    const maxHours = Math.max(...projectData.map(p => p.total_hours));\n                    return projectData.flatMap(project => {\n                      const isExpanded = expandedProjects.includes(project.project_name);\n                      // Get user breakdown for this project\n                      const usersForProject = userData.filter(d => d.project_name === project.project_name && d.total_hours > 0).map(d => ({\n                        user: d.user_name,\n                        hours: d.total_hours\n                      }));\n                      return [/*#__PURE__*/_jsxDEV(TableRow, {\n                        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                          sx: {\n                            fontWeight: 500\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                            size: \"small\",\n                            onClick: () => handleExpandClick(project.project_name),\n                            children: isExpanded ? /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 285,\n                              columnNumber: 49\n                            }, this) : /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 285,\n                              columnNumber: 66\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 284,\n                            columnNumber: 33\n                          }, this), project.project_name]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 283,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          children: showProjectPercent ? '100%' : `${formatHours(project.total_hours)}h`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 289,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          children: /*#__PURE__*/_jsxDEV(Box, {\n                            sx: {\n                              width: '100%',\n                              height: 16,\n                              bgcolor: '#e3eafc',\n                              borderRadius: 2,\n                              position: 'relative'\n                            },\n                            children: /*#__PURE__*/_jsxDEV(Box, {\n                              sx: {\n                                width: '100%',\n                                height: '100%',\n                                bgcolor: '#1976d2',\n                                borderRadius: 2,\n                                transition: 'width 0.3s'\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 296,\n                              columnNumber: 35\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 295,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 294,\n                          columnNumber: 31\n                        }, this)]\n                      }, project.project_name, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 282,\n                        columnNumber: 29\n                      }, this), isExpanded && usersForProject.length > 0 && usersForProject.map(u => {\n                        const userPercent = u.hours / project.total_hours * 100;\n                        return /*#__PURE__*/_jsxDEV(TableRow, {\n                          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                            sx: {\n                              pl: 6\n                            },\n                            children: u.user\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 312,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                            children: showProjectPercent ? `${Math.round(userPercent)}%` : `${formatHours(u.hours)}h`\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 313,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                            children: /*#__PURE__*/_jsxDEV(Box, {\n                              sx: {\n                                width: '100%',\n                                height: 12,\n                                bgcolor: '#e3eafc',\n                                borderRadius: 2,\n                                position: 'relative'\n                              },\n                              children: /*#__PURE__*/_jsxDEV(Box, {\n                                sx: {\n                                  width: `${userPercent}%`,\n                                  height: '100%',\n                                  bgcolor: '#1976d2',\n                                  borderRadius: 2,\n                                  transition: 'width 0.3s'\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 320,\n                                columnNumber: 39\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 319,\n                              columnNumber: 37\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 318,\n                            columnNumber: 35\n                          }, this)]\n                        }, project.project_name + '-' + u.user, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 311,\n                          columnNumber: 33\n                        }, this);\n                      }), isExpanded && usersForProject.length === 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n                        children: /*#__PURE__*/_jsxDEV(TableCell, {\n                          colSpan: 3,\n                          align: \"center\",\n                          children: /*#__PURE__*/_jsxDEV(Typography, {\n                            color: \"text.secondary\",\n                            children: \"No user data for this project\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 337,\n                            columnNumber: 35\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 336,\n                          columnNumber: 33\n                        }, this)\n                      }, project.project_name + '-no-users', false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 335,\n                        columnNumber: 31\n                      }, this)];\n                    });\n                  })() : /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: /*#__PURE__*/_jsxDEV(TableCell, {\n                      colSpan: 3,\n                      align: \"center\",\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        color: \"text.secondary\",\n                        children: \"No project data available\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 347,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 346,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 345,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Internal vs External Hours\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                height: 300\n              },\n              children: clientTypeData.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                children: /*#__PURE__*/_jsxDEV(PieChart, {\n                  children: [/*#__PURE__*/_jsxDEV(Pie, {\n                    data: clientTypeData,\n                    dataKey: \"total_hours\",\n                    nameKey: \"client_type\",\n                    cx: \"50%\",\n                    cy: \"50%\",\n                    outerRadius: 100,\n                    label: ({\n                      client_type,\n                      total_hours\n                    }) => `${client_type}: ${formatHours(total_hours)}h`,\n                    children: clientTypeData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                      fill: COLORS[index % COLORS.length]\n                    }, entry.client_type, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 381,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    formatter: value => formatHours(value) + ' hours'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 384,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 385,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                height: \"100%\",\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  color: \"text.secondary\",\n                  children: \"No client type data available\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Hours by User and Project (Heat Map)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Switch, {\n                checked: showPercent,\n                onChange: e => setShowPercent(e.target.checked),\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 19\n              }, this),\n              label: showPercent ? 'Show: % of Capacity' : 'Show: Hours',\n              sx: {\n                mb: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                height: heatmapHeight\n              },\n              children: userData.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                width: \"100%\",\n                height: heatmapHeight,\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  width: \"100%\",\n                  height: \"100%\",\n                  viewBox: `0 0 ${users.length * colWidth + 100} ${heatmapHeight}`,\n                  children: [users.map((user, i) => {\n                    const words = user.split(' ');\n                    const lineHeight = 18;\n                    // The last line should be at y=55, so the first line is at y=55 - (words.length-1)*lineHeight\n                    const startY = 55 - (words.length - 1) * lineHeight;\n                    return /*#__PURE__*/_jsxDEV(\"text\", {\n                      x: i * colWidth + xOffset + cellWidth / 2,\n                      y: startY,\n                      textAnchor: \"middle\",\n                      fontSize: \"14\",\n                      children: words.map((word, idx) => /*#__PURE__*/_jsxDEV(\"tspan\", {\n                        x: i * colWidth + xOffset + cellWidth / 2,\n                        dy: idx === 0 ? 0 : lineHeight,\n                        children: word\n                      }, word + idx, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 436,\n                        columnNumber: 31\n                      }, this))\n                    }, user, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 428,\n                      columnNumber: 27\n                    }, this);\n                  }), allProjectsWithCapacity.map((project, j) => /*#__PURE__*/_jsxDEV(\"text\", {\n                    x: xOffset - 20,\n                    y: j * cellHeight + yOffset + cellHeight / 2,\n                    textAnchor: \"end\",\n                    fontSize: \"14\",\n                    alignmentBaseline: \"middle\",\n                    children: project\n                  }, project, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 449,\n                    columnNumber: 25\n                  }, this)), heatMapData.map((row, j) => row.map((value, i) => {\n                    // For percent mode, calculate percent of capacity\n                    let displayValue = '';\n                    let percentValue = 0;\n                    if (showPercent) {\n                      if (j === 0) {\n                        // Capacity row\n                        percentValue = 100;\n                      } else {\n                        // All other rows\n                        percentValue = userCapacity[i] > 0 ? value / userCapacity[i] * 100 : 0;\n                      }\n                      displayValue = percentValue > 0 ? `${Math.round(percentValue)}%` : '';\n                    } else {\n                      displayValue = value > 0 ? formatHours(value) : '';\n                    }\n                    // Color scale: 0 = #f0f0f0, max = #1976d2\n                    const max = Math.max(...heatMapData.flat());\n                    const min = 0;\n                    const percent = max === min ? 0 : (value - min) / (max - min);\n                    const color = `rgb(${240 - percent * 63}, ${240 - percent * 111}, ${240 - percent * 210})`;\n                    return /*#__PURE__*/_jsxDEV(\"g\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n                        x: i * colWidth + xOffset,\n                        y: j * cellHeight + yOffset,\n                        width: cellWidth,\n                        height: cellHeight,\n                        fill: color,\n                        stroke: \"#ccc\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 476,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                        x: i * colWidth + xOffset + cellWidth / 2,\n                        y: j * cellHeight + yOffset + cellHeight / 2,\n                        textAnchor: \"middle\",\n                        alignmentBaseline: \"middle\",\n                        fontSize: \"16\",\n                        fill: value > max / 2 ? '#fff' : '#333',\n                        children: displayValue\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 484,\n                        columnNumber: 31\n                      }, this)]\n                    }, i + '-' + j, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 475,\n                      columnNumber: 29\n                    }, this);\n                  }))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                height: \"100%\",\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  color: \"text.secondary\",\n                  children: \"No user/project data available\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"42iLKxnf1sXeVIjsQs19C7hX6G4=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Box","Card","CardContent","Grid","Typography","MenuItem","TextField","CircularProgress","Alert","Switch","FormControlLabel","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","IconButton","Collapse","BarChart","Bar","PieChart","Pie","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","HeatMap","startOfWeek","startOfMonth","startOfQuarter","startOfYear","format","axios","AddIcon","RemoveIcon","jsxDEV","_jsxDEV","COLORS","timeRanges","value","label","Dashboard","_s","timeRange","setTimeRange","projectData","setProjectData","userData","setUserData","clientTypeData","setClientTypeData","loading","setLoading","error","setError","showPercent","setShowPercent","expandedProjects","setExpandedProjects","showProjectPercent","setShowProjectPercent","getDateRange","now","Date","startDate","endDate","fetchData","dateParams","console","log","projectRes","userRes","clientTypeRes","Promise","all","get","data","err","formatHours","hours","Math","round","users","Array","from","Set","map","d","user_name","projects","project_name","countWeekdays","start","end","count","current","day","getDay","setDate","getDate","periodStart","periodEnd","allDates","start_time","filter","Boolean","length","min","max","weekdays","userCapacity","userLogged","user","reduce","sum","total_hours","userAvailable","cap","i","heatMapData","project","found","find","allProjectsWithCapacity","colWidth","cellWidth","cellHeight","xOffset","yOffset","heatmapRows","heatmapHeight","handleExpandClick","projectName","prev","includes","name","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","mb","variant","select","onChange","e","target","minWidth","option","severity","container","spacing","item","xs","md","gutterBottom","control","checked","color","component","boxShadow","size","fontWeight","maxHours","p","flatMap","isExpanded","usersForProject","onClick","width","height","bgcolor","borderRadius","position","transition","u","userPercent","pl","colSpan","align","dataKey","nameKey","cx","cy","outerRadius","client_type","entry","index","fill","formatter","viewBox","words","split","lineHeight","startY","x","y","textAnchor","fontSize","word","idx","dy","j","alignmentBaseline","row","displayValue","percentValue","flat","percent","stroke","_c","$RefreshReg$"],"sources":["C:/Users/golun/TimeTracker/client/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  MenuItem,\r\n  TextField,\r\n  CircularProgress,\r\n  Alert,\r\n  Switch,\r\n  FormControlLabel,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  IconButton,\r\n  Collapse,\r\n} from '@mui/material';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  HeatMap,\r\n} from 'recharts';\r\nimport { startOfWeek, startOfMonth, startOfQuarter, startOfYear, format } from 'date-fns';\r\nimport axios from 'axios';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport RemoveIcon from '@mui/icons-material/Remove';\r\n\r\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8'];\r\n\r\nconst timeRanges = [\r\n  { value: 'week', label: 'This Week' },\r\n  { value: 'month', label: 'This Month' },\r\n  { value: 'quarter', label: 'This Quarter' },\r\n  { value: 'year', label: 'This Year' },\r\n  { value: 'all', label: 'All Time' },\r\n];\r\n\r\nfunction Dashboard() {\r\n  const [timeRange, setTimeRange] = useState('month');\r\n  const [projectData, setProjectData] = useState([]);\r\n  const [userData, setUserData] = useState([]);\r\n  const [clientTypeData, setClientTypeData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [showPercent, setShowPercent] = useState(false);\r\n  const [expandedProjects, setExpandedProjects] = useState([]);\r\n  const [showProjectPercent, setShowProjectPercent] = useState(false);\r\n\r\n  const getDateRange = () => {\r\n    const now = new Date();\r\n    let startDate;\r\n\r\n    switch (timeRange) {\r\n      case 'week':\r\n        startDate = startOfWeek(now);\r\n        break;\r\n      case 'month':\r\n        startDate = startOfMonth(now);\r\n        break;\r\n      case 'quarter':\r\n        startDate = startOfQuarter(now);\r\n        break;\r\n      case 'year':\r\n        startDate = startOfYear(now);\r\n        break;\r\n      default:\r\n        startDate = null;\r\n    }\r\n\r\n    return {\r\n      startDate: startDate ? format(startDate, 'yyyy-MM-dd') : null,\r\n      endDate: format(now, 'yyyy-MM-dd'),\r\n    };\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const { startDate, endDate } = getDateRange();\r\n      const dateParams = startDate ? `?startDate=${startDate}&endDate=${endDate}` : '';\r\n\r\n      console.log('Fetching analytics data with params:', { startDate, endDate });\r\n\r\n      const [projectRes, userRes, clientTypeRes] = await Promise.all([\r\n        axios.get(`/api/analytics/time-by-project${dateParams}`),\r\n        axios.get(`/api/analytics/time-by-user${dateParams}`),\r\n        axios.get(`/api/analytics/time-by-client-type${dateParams}`),\r\n      ]);\r\n\r\n      console.log('Project data:', projectRes.data);\r\n      console.log('User data:', userRes.data);\r\n      console.log('Client type data:', clientTypeRes.data);\r\n\r\n      setProjectData(projectRes.data);\r\n      setUserData(userRes.data);\r\n      setClientTypeData(clientTypeRes.data);\r\n    } catch (err) {\r\n      console.error('Error fetching analytics:', err);\r\n      setError('Failed to fetch analytics data. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [timeRange]);\r\n\r\n  const formatHours = (hours) => {\r\n    return Math.round(hours * 100) / 100;\r\n  };\r\n\r\n  // Prepare users and projects arrays first so they are available for all calculations\r\n  const users = Array.from(new Set(userData.map(d => d.user_name)));\r\n  const projects = Array.from(new Set(userData.map(d => d.project_name)));\r\n\r\n  // Helper: count weekdays between two dates (inclusive)\r\n  function countWeekdays(start, end) {\r\n    let count = 0;\r\n    let current = new Date(start);\r\n    while (current <= end) {\r\n      const day = current.getDay();\r\n      if (day !== 0 && day !== 6) count++;\r\n      current.setDate(current.getDate() + 1);\r\n    }\r\n    return count;\r\n  }\r\n\r\n  // Calculate period start/end\r\n  const now = new Date();\r\n  let periodStart, periodEnd;\r\n  switch (timeRange) {\r\n    case 'week':\r\n      periodStart = startOfWeek(now);\r\n      periodEnd = now;\r\n      break;\r\n    case 'month':\r\n      periodStart = startOfMonth(now);\r\n      periodEnd = now;\r\n      break;\r\n    case 'quarter':\r\n      periodStart = startOfQuarter(now);\r\n      periodEnd = now;\r\n      break;\r\n    case 'year':\r\n      periodStart = startOfYear(now);\r\n      periodEnd = now;\r\n      break;\r\n    case 'all':\r\n    default:\r\n      // Use earliest and latest date in userData\r\n      const allDates = userData.map(d => new Date(d.start_time)).filter(Boolean);\r\n      periodStart = allDates.length ? new Date(Math.min(...allDates)) : now;\r\n      periodEnd = allDates.length ? new Date(Math.max(...allDates)) : now;\r\n      break;\r\n  }\r\n  const weekdays = countWeekdays(periodStart, periodEnd);\r\n  const userCapacity = users.map(() => weekdays * 8);\r\n  // Calculate total hours logged per user in the period\r\n  const userLogged = users.map(user =>\r\n    userData.filter(d => d.user_name === user).reduce((sum, d) => sum + d.total_hours, 0)\r\n  );\r\n  const userAvailable = userCapacity.map((cap, i) => Math.max(0, cap - userLogged[i]));\r\n\r\n  // Build a matrix: rows = projects, cols = users\r\n  const heatMapData = [\r\n    userAvailable, // Capacity row\r\n    userLogged,   // Total load row\r\n    ...projects.map(project =>\r\n      users.map(user => {\r\n        const found = userData.find(d => d.user_name === user && d.project_name === project);\r\n        return found ? found.total_hours : 0;\r\n      })\r\n    )\r\n  ];\r\n  const allProjectsWithCapacity = ['Capacity', 'Total load', ...projects];\r\n\r\n  // Set column width for heatmap (wider for wrapped names)\r\n  const colWidth = 100;\r\n  const cellWidth = 95;\r\n  const cellHeight = 35;\r\n  const xOffset = 100;\r\n  const yOffset = 60;\r\n  const heatmapRows = allProjectsWithCapacity.length;\r\n  const heatmapHeight = heatmapRows * cellHeight + yOffset + 40; // 40 for header padding\r\n\r\n  const handleExpandClick = (projectName) => {\r\n    setExpandedProjects((prev) =>\r\n      prev.includes(projectName)\r\n        ? prev.filter((name) => name !== projectName)\r\n        : [...prev, projectName]\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"60vh\">\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 3 }}>\r\n        <Typography variant=\"h4\">Dashboard</Typography>\r\n        <TextField\r\n          select\r\n          value={timeRange}\r\n          onChange={(e) => setTimeRange(e.target.value)}\r\n          sx={{ minWidth: 200 }}\r\n        >\r\n          {timeRanges.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Box>\r\n\r\n      {error && (\r\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n          {error}\r\n        </Alert>\r\n      )}\r\n\r\n      <Grid container spacing={3}>\r\n        {/* Project Hours (Table) */}\r\n        <Grid item xs={12} md={6}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Hours by Project\r\n              </Typography>\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch\r\n                    checked={showProjectPercent}\r\n                    onChange={e => setShowProjectPercent(e.target.checked)}\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label={showProjectPercent ? 'Show: % of Max Project' : 'Show: Hours'}\r\n                sx={{ mb: 2 }}\r\n              />\r\n              <TableContainer component={Paper} sx={{ boxShadow: 'none' }}>\r\n                <Table size=\"small\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell sx={{ fontWeight: 600 }}>Project</TableCell>\r\n                      <TableCell sx={{ fontWeight: 600 }}>Total Hours</TableCell>\r\n                      <TableCell sx={{ fontWeight: 600 }}>Load</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {projectData.length > 0 ? (\r\n                      (() => {\r\n                        const maxHours = Math.max(...projectData.map(p => p.total_hours));\r\n                        return projectData.flatMap((project) => {\r\n                          const isExpanded = expandedProjects.includes(project.project_name);\r\n                          // Get user breakdown for this project\r\n                          const usersForProject = userData\r\n                            .filter(d => d.project_name === project.project_name && d.total_hours > 0)\r\n                            .map(d => ({ user: d.user_name, hours: d.total_hours }));\r\n                          return [\r\n                            <TableRow key={project.project_name}>\r\n                              <TableCell sx={{ fontWeight: 500 }}>\r\n                                <IconButton size=\"small\" onClick={() => handleExpandClick(project.project_name)}>\r\n                                  {isExpanded ? <RemoveIcon /> : <AddIcon />}\r\n                                </IconButton>\r\n                                {project.project_name}\r\n                              </TableCell>\r\n                              <TableCell>\r\n                                {showProjectPercent\r\n                                  ? '100%'\r\n                                  : `${formatHours(project.total_hours)}h`}\r\n                              </TableCell>\r\n                              <TableCell>\r\n                                <Box sx={{ width: '100%', height: 16, bgcolor: '#e3eafc', borderRadius: 2, position: 'relative' }}>\r\n                                  <Box\r\n                                    sx={{\r\n                                      width: '100%',\r\n                                      height: '100%',\r\n                                      bgcolor: '#1976d2',\r\n                                      borderRadius: 2,\r\n                                      transition: 'width 0.3s',\r\n                                    }}\r\n                                  />\r\n                                </Box>\r\n                              </TableCell>\r\n                            </TableRow>,\r\n                            isExpanded && usersForProject.length > 0 && usersForProject.map((u) => {\r\n                              const userPercent = (u.hours / project.total_hours) * 100;\r\n                              return (\r\n                                <TableRow key={project.project_name + '-' + u.user}>\r\n                                  <TableCell sx={{ pl: 6 }}>{u.user}</TableCell>\r\n                                  <TableCell>\r\n                                    {showProjectPercent\r\n                                      ? `${Math.round(userPercent)}%`\r\n                                      : `${formatHours(u.hours)}h`}\r\n                                  </TableCell>\r\n                                  <TableCell>\r\n                                    <Box sx={{ width: '100%', height: 12, bgcolor: '#e3eafc', borderRadius: 2, position: 'relative' }}>\r\n                                      <Box\r\n                                        sx={{\r\n                                          width: `${userPercent}%`,\r\n                                          height: '100%',\r\n                                          bgcolor: '#1976d2',\r\n                                          borderRadius: 2,\r\n                                          transition: 'width 0.3s',\r\n                                        }}\r\n                                      />\r\n                                    </Box>\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              );\r\n                            }),\r\n                            isExpanded && usersForProject.length === 0 && (\r\n                              <TableRow key={project.project_name + '-no-users'}>\r\n                                <TableCell colSpan={3} align=\"center\">\r\n                                  <Typography color=\"text.secondary\">No user data for this project</Typography>\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            )\r\n                          ];\r\n                        });\r\n                      })()\r\n                    ) : (\r\n                      <TableRow>\r\n                        <TableCell colSpan={3} align=\"center\">\r\n                          <Typography color=\"text.secondary\">No project data available</Typography>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    )}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        {/* Client Type Distribution */}\r\n        <Grid item xs={12} md={6}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Internal vs External Hours\r\n              </Typography>\r\n              <Box sx={{ height: 300 }}>\r\n                {clientTypeData.length > 0 ? (\r\n                  <ResponsiveContainer>\r\n                    <PieChart>\r\n                      <Pie\r\n                        data={clientTypeData}\r\n                        dataKey=\"total_hours\"\r\n                        nameKey=\"client_type\"\r\n                        cx=\"50%\"\r\n                        cy=\"50%\"\r\n                        outerRadius={100}\r\n                        label={({ client_type, total_hours }) => \r\n                          `${client_type}: ${formatHours(total_hours)}h`\r\n                        }\r\n                      >\r\n                        {clientTypeData.map((entry, index) => (\r\n                          <Cell key={entry.client_type} fill={COLORS[index % COLORS.length]} />\r\n                        ))}\r\n                      </Pie>\r\n                      <Tooltip formatter={(value) => formatHours(value) + ' hours'} />\r\n                      <Legend />\r\n                    </PieChart>\r\n                  </ResponsiveContainer>\r\n                ) : (\r\n                  <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100%\">\r\n                    <Typography color=\"text.secondary\">No client type data available</Typography>\r\n                  </Box>\r\n                )}\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        {/* User Hours as Heat Map */}\r\n        <Grid item xs={12}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Hours by User and Project (Heat Map)\r\n              </Typography>\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch\r\n                    checked={showPercent}\r\n                    onChange={e => setShowPercent(e.target.checked)}\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label={showPercent ? 'Show: % of Capacity' : 'Show: Hours'}\r\n                sx={{ mb: 2 }}\r\n              />\r\n              <Box sx={{ height: heatmapHeight }}>\r\n                {userData.length > 0 ? (\r\n                  <ResponsiveContainer width=\"100%\" height={heatmapHeight}>\r\n                    {/* recharts does not have a built-in HeatMap, so we use a custom SVG grid */}\r\n                    <svg width=\"100%\" height=\"100%\" viewBox={`0 0 ${users.length * colWidth + 100} ${heatmapHeight}`}>\r\n                      {/* X Axis (Users) */}\r\n                      {users.map((user, i) => {\r\n                        const words = user.split(' ');\r\n                        const lineHeight = 18;\r\n                        // The last line should be at y=55, so the first line is at y=55 - (words.length-1)*lineHeight\r\n                        const startY = 55 - (words.length - 1) * lineHeight;\r\n                        return (\r\n                          <text\r\n                            key={user}\r\n                            x={i * colWidth + xOffset + cellWidth / 2}\r\n                            y={startY}\r\n                            textAnchor=\"middle\"\r\n                            fontSize=\"14\"\r\n                          >\r\n                            {words.map((word, idx) => (\r\n                              <tspan\r\n                                key={word + idx}\r\n                                x={i * colWidth + xOffset + cellWidth / 2}\r\n                                dy={idx === 0 ? 0 : lineHeight}\r\n                              >\r\n                                {word}\r\n                              </tspan>\r\n                            ))}\r\n                          </text>\r\n                        );\r\n                      })}\r\n                      {/* Y Axis (Projects) */}\r\n                      {allProjectsWithCapacity.map((project, j) => (\r\n                        <text key={project} x={xOffset - 20} y={j * cellHeight + yOffset + cellHeight / 2} textAnchor=\"end\" fontSize=\"14\" alignmentBaseline=\"middle\">{project}</text>\r\n                      ))}\r\n                      {/* Heatmap cells */}\r\n                      {heatMapData.map((row, j) =>\r\n                        row.map((value, i) => {\r\n                          // For percent mode, calculate percent of capacity\r\n                          let displayValue = '';\r\n                          let percentValue = 0;\r\n                          if (showPercent) {\r\n                            if (j === 0) {\r\n                              // Capacity row\r\n                              percentValue = 100;\r\n                            } else {\r\n                              // All other rows\r\n                              percentValue = userCapacity[i] > 0 ? (value / userCapacity[i]) * 100 : 0;\r\n                            }\r\n                            displayValue = percentValue > 0 ? `${Math.round(percentValue)}%` : '';\r\n                          } else {\r\n                            displayValue = value > 0 ? formatHours(value) : '';\r\n                          }\r\n                          // Color scale: 0 = #f0f0f0, max = #1976d2\r\n                          const max = Math.max(...heatMapData.flat());\r\n                          const min = 0;\r\n                          const percent = max === min ? 0 : (value - min) / (max - min);\r\n                          const color = `rgb(${240 - percent * 63}, ${240 - percent * 111}, ${240 - percent * 210})`;\r\n                          return (\r\n                            <g key={i + '-' + j}>\r\n                              <rect\r\n                                x={i * colWidth + xOffset}\r\n                                y={j * cellHeight + yOffset}\r\n                                width={cellWidth}\r\n                                height={cellHeight}\r\n                                fill={color}\r\n                                stroke=\"#ccc\"\r\n                              />\r\n                              <text\r\n                                x={i * colWidth + xOffset + cellWidth / 2}\r\n                                y={j * cellHeight + yOffset + cellHeight / 2}\r\n                                textAnchor=\"middle\"\r\n                                alignmentBaseline=\"middle\"\r\n                                fontSize=\"16\"\r\n                                fill={value > (max / 2) ? '#fff' : '#333'}\r\n                              >\r\n                                {displayValue}\r\n                              </text>\r\n                            </g>\r\n                          );\r\n                        })\r\n                      )}\r\n                    </svg>\r\n                  </ResponsiveContainer>\r\n                ) : (\r\n                  <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100%\">\r\n                    <Typography color=\"text.secondary\">No user/project data available</Typography>\r\n                  </Box>\r\n                )}\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Dashboard; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,GAAG,EACHC,IAAI,EACJC,WAAW,EACXC,IAAI,EACJC,UAAU,EACVC,QAAQ,EACRC,SAAS,EACTC,gBAAgB,EAChBC,KAAK,EACLC,MAAM,EACNC,gBAAgB,EAChBC,KAAK,EACLC,SAAS,EACTC,SAAS,EACTC,cAAc,EACdC,SAAS,EACTC,QAAQ,EACRC,KAAK,EACLC,UAAU,EACVC,QAAQ,QACH,eAAe;AACtB,SACEC,QAAQ,EACRC,GAAG,EACHC,QAAQ,EACRC,GAAG,EACHC,IAAI,EACJC,KAAK,EACLC,KAAK,EACLC,aAAa,EACbC,OAAO,EACPC,MAAM,EACNC,mBAAmB,EACnBC,OAAO,QACF,UAAU;AACjB,SAASC,WAAW,EAAEC,YAAY,EAAEC,cAAc,EAAEC,WAAW,EAAEC,MAAM,QAAQ,UAAU;AACzF,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,UAAU,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAEtE,MAAMC,UAAU,GAAG,CACjB;EAAEC,KAAK,EAAE,MAAM;EAAEC,KAAK,EAAE;AAAY,CAAC,EACrC;EAAED,KAAK,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAa,CAAC,EACvC;EAAED,KAAK,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAe,CAAC,EAC3C;EAAED,KAAK,EAAE,MAAM;EAAEC,KAAK,EAAE;AAAY,CAAC,EACrC;EAAED,KAAK,EAAE,KAAK;EAAEC,KAAK,EAAE;AAAW,CAAC,CACpC;AAED,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGnD,QAAQ,CAAC,OAAO,CAAC;EACnD,MAAM,CAACoD,WAAW,EAAEC,cAAc,CAAC,GAAGrD,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACsD,QAAQ,EAAEC,WAAW,CAAC,GAAGvD,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACwD,cAAc,EAAEC,iBAAiB,CAAC,GAAGzD,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC0D,OAAO,EAAEC,UAAU,CAAC,GAAG3D,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC4D,KAAK,EAAEC,QAAQ,CAAC,GAAG7D,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC8D,WAAW,EAAEC,cAAc,CAAC,GAAG/D,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACgE,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGjE,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACkE,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGnE,QAAQ,CAAC,KAAK,CAAC;EAEnE,MAAMoE,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;IACtB,IAAIC,SAAS;IAEb,QAAQrB,SAAS;MACf,KAAK,MAAM;QACTqB,SAAS,GAAGrC,WAAW,CAACmC,GAAG,CAAC;QAC5B;MACF,KAAK,OAAO;QACVE,SAAS,GAAGpC,YAAY,CAACkC,GAAG,CAAC;QAC7B;MACF,KAAK,SAAS;QACZE,SAAS,GAAGnC,cAAc,CAACiC,GAAG,CAAC;QAC/B;MACF,KAAK,MAAM;QACTE,SAAS,GAAGlC,WAAW,CAACgC,GAAG,CAAC;QAC5B;MACF;QACEE,SAAS,GAAG,IAAI;IACpB;IAEA,OAAO;MACLA,SAAS,EAAEA,SAAS,GAAGjC,MAAM,CAACiC,SAAS,EAAE,YAAY,CAAC,GAAG,IAAI;MAC7DC,OAAO,EAAElC,MAAM,CAAC+B,GAAG,EAAE,YAAY;IACnC,CAAC;EACH,CAAC;EAED,MAAMI,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACFd,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MACd,MAAM;QAAEU,SAAS;QAAEC;MAAQ,CAAC,GAAGJ,YAAY,CAAC,CAAC;MAC7C,MAAMM,UAAU,GAAGH,SAAS,GAAG,cAAcA,SAAS,YAAYC,OAAO,EAAE,GAAG,EAAE;MAEhFG,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAE;QAAEL,SAAS;QAAEC;MAAQ,CAAC,CAAC;MAE3E,MAAM,CAACK,UAAU,EAAEC,OAAO,EAAEC,aAAa,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAC7D1C,KAAK,CAAC2C,GAAG,CAAC,iCAAiCR,UAAU,EAAE,CAAC,EACxDnC,KAAK,CAAC2C,GAAG,CAAC,8BAA8BR,UAAU,EAAE,CAAC,EACrDnC,KAAK,CAAC2C,GAAG,CAAC,qCAAqCR,UAAU,EAAE,CAAC,CAC7D,CAAC;MAEFC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEC,UAAU,CAACM,IAAI,CAAC;MAC7CR,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEE,OAAO,CAACK,IAAI,CAAC;MACvCR,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEG,aAAa,CAACI,IAAI,CAAC;MAEpD9B,cAAc,CAACwB,UAAU,CAACM,IAAI,CAAC;MAC/B5B,WAAW,CAACuB,OAAO,CAACK,IAAI,CAAC;MACzB1B,iBAAiB,CAACsB,aAAa,CAACI,IAAI,CAAC;IACvC,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZT,OAAO,CAACf,KAAK,CAAC,2BAA2B,EAAEwB,GAAG,CAAC;MAC/CvB,QAAQ,CAAC,mDAAmD,CAAC;IAC/D,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED1D,SAAS,CAAC,MAAM;IACdwE,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACvB,SAAS,CAAC,CAAC;EAEf,MAAMmC,WAAW,GAAIC,KAAK,IAAK;IAC7B,OAAOC,IAAI,CAACC,KAAK,CAACF,KAAK,GAAG,GAAG,CAAC,GAAG,GAAG;EACtC,CAAC;;EAED;EACA,MAAMG,KAAK,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAACtC,QAAQ,CAACuC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,SAAS,CAAC,CAAC,CAAC;EACjE,MAAMC,QAAQ,GAAGN,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAACtC,QAAQ,CAACuC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACG,YAAY,CAAC,CAAC,CAAC;;EAEvE;EACA,SAASC,aAAaA,CAACC,KAAK,EAAEC,GAAG,EAAE;IACjC,IAAIC,KAAK,GAAG,CAAC;IACb,IAAIC,OAAO,GAAG,IAAIhC,IAAI,CAAC6B,KAAK,CAAC;IAC7B,OAAOG,OAAO,IAAIF,GAAG,EAAE;MACrB,MAAMG,GAAG,GAAGD,OAAO,CAACE,MAAM,CAAC,CAAC;MAC5B,IAAID,GAAG,KAAK,CAAC,IAAIA,GAAG,KAAK,CAAC,EAAEF,KAAK,EAAE;MACnCC,OAAO,CAACG,OAAO,CAACH,OAAO,CAACI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;IACxC;IACA,OAAOL,KAAK;EACd;;EAEA;EACA,MAAMhC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;EACtB,IAAIqC,WAAW,EAAEC,SAAS;EAC1B,QAAQ1D,SAAS;IACf,KAAK,MAAM;MACTyD,WAAW,GAAGzE,WAAW,CAACmC,GAAG,CAAC;MAC9BuC,SAAS,GAAGvC,GAAG;MACf;IACF,KAAK,OAAO;MACVsC,WAAW,GAAGxE,YAAY,CAACkC,GAAG,CAAC;MAC/BuC,SAAS,GAAGvC,GAAG;MACf;IACF,KAAK,SAAS;MACZsC,WAAW,GAAGvE,cAAc,CAACiC,GAAG,CAAC;MACjCuC,SAAS,GAAGvC,GAAG;MACf;IACF,KAAK,MAAM;MACTsC,WAAW,GAAGtE,WAAW,CAACgC,GAAG,CAAC;MAC9BuC,SAAS,GAAGvC,GAAG;MACf;IACF,KAAK,KAAK;IACV;MACE;MACA,MAAMwC,QAAQ,GAAGvD,QAAQ,CAACuC,GAAG,CAACC,CAAC,IAAI,IAAIxB,IAAI,CAACwB,CAAC,CAACgB,UAAU,CAAC,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC;MAC1EL,WAAW,GAAGE,QAAQ,CAACI,MAAM,GAAG,IAAI3C,IAAI,CAACiB,IAAI,CAAC2B,GAAG,CAAC,GAAGL,QAAQ,CAAC,CAAC,GAAGxC,GAAG;MACrEuC,SAAS,GAAGC,QAAQ,CAACI,MAAM,GAAG,IAAI3C,IAAI,CAACiB,IAAI,CAAC4B,GAAG,CAAC,GAAGN,QAAQ,CAAC,CAAC,GAAGxC,GAAG;MACnE;EACJ;EACA,MAAM+C,QAAQ,GAAGlB,aAAa,CAACS,WAAW,EAAEC,SAAS,CAAC;EACtD,MAAMS,YAAY,GAAG5B,KAAK,CAACI,GAAG,CAAC,MAAMuB,QAAQ,GAAG,CAAC,CAAC;EAClD;EACA,MAAME,UAAU,GAAG7B,KAAK,CAACI,GAAG,CAAC0B,IAAI,IAC/BjE,QAAQ,CAACyD,MAAM,CAACjB,CAAC,IAAIA,CAAC,CAACC,SAAS,KAAKwB,IAAI,CAAC,CAACC,MAAM,CAAC,CAACC,GAAG,EAAE3B,CAAC,KAAK2B,GAAG,GAAG3B,CAAC,CAAC4B,WAAW,EAAE,CAAC,CACtF,CAAC;EACD,MAAMC,aAAa,GAAGN,YAAY,CAACxB,GAAG,CAAC,CAAC+B,GAAG,EAAEC,CAAC,KAAKtC,IAAI,CAAC4B,GAAG,CAAC,CAAC,EAAES,GAAG,GAAGN,UAAU,CAACO,CAAC,CAAC,CAAC,CAAC;;EAEpF;EACA,MAAMC,WAAW,GAAG,CAClBH,aAAa;EAAE;EACfL,UAAU;EAAI;EACd,GAAGtB,QAAQ,CAACH,GAAG,CAACkC,OAAO,IACrBtC,KAAK,CAACI,GAAG,CAAC0B,IAAI,IAAI;IAChB,MAAMS,KAAK,GAAG1E,QAAQ,CAAC2E,IAAI,CAACnC,CAAC,IAAIA,CAAC,CAACC,SAAS,KAAKwB,IAAI,IAAIzB,CAAC,CAACG,YAAY,KAAK8B,OAAO,CAAC;IACpF,OAAOC,KAAK,GAAGA,KAAK,CAACN,WAAW,GAAG,CAAC;EACtC,CAAC,CACH,CAAC,CACF;EACD,MAAMQ,uBAAuB,GAAG,CAAC,UAAU,EAAE,YAAY,EAAE,GAAGlC,QAAQ,CAAC;;EAEvE;EACA,MAAMmC,QAAQ,GAAG,GAAG;EACpB,MAAMC,SAAS,GAAG,EAAE;EACpB,MAAMC,UAAU,GAAG,EAAE;EACrB,MAAMC,OAAO,GAAG,GAAG;EACnB,MAAMC,OAAO,GAAG,EAAE;EAClB,MAAMC,WAAW,GAAGN,uBAAuB,CAACjB,MAAM;EAClD,MAAMwB,aAAa,GAAGD,WAAW,GAAGH,UAAU,GAAGE,OAAO,GAAG,EAAE,CAAC,CAAC;;EAE/D,MAAMG,iBAAiB,GAAIC,WAAW,IAAK;IACzC1E,mBAAmB,CAAE2E,IAAI,IACvBA,IAAI,CAACC,QAAQ,CAACF,WAAW,CAAC,GACtBC,IAAI,CAAC7B,MAAM,CAAE+B,IAAI,IAAKA,IAAI,KAAKH,WAAW,CAAC,GAC3C,CAAC,GAAGC,IAAI,EAAED,WAAW,CAC3B,CAAC;EACH,CAAC;EAED,IAAIjF,OAAO,EAAE;IACX,oBACEf,OAAA,CAACzC,GAAG;MAAC6I,OAAO,EAAC,MAAM;MAACC,cAAc,EAAC,QAAQ;MAACC,UAAU,EAAC,QAAQ;MAACC,SAAS,EAAC,MAAM;MAAAC,QAAA,eAC9ExG,OAAA,CAAClC,gBAAgB;QAAA2I,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAEV;EAEA,oBACE5G,OAAA,CAACzC,GAAG;IAAAiJ,QAAA,gBACFxG,OAAA,CAACzC,GAAG;MAACsJ,EAAE,EAAE;QAAET,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,eAAe;QAAES,EAAE,EAAE;MAAE,CAAE;MAAAN,QAAA,gBACnExG,OAAA,CAACrC,UAAU;QAACoJ,OAAO,EAAC,IAAI;QAAAP,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAC/C5G,OAAA,CAACnC,SAAS;QACRmJ,MAAM;QACN7G,KAAK,EAAEI,SAAU;QACjB0G,QAAQ,EAAGC,CAAC,IAAK1G,YAAY,CAAC0G,CAAC,CAACC,MAAM,CAAChH,KAAK,CAAE;QAC9C0G,EAAE,EAAE;UAAEO,QAAQ,EAAE;QAAI,CAAE;QAAAZ,QAAA,EAErBtG,UAAU,CAACgD,GAAG,CAAEmE,MAAM,iBACrBrH,OAAA,CAACpC,QAAQ;UAAoBuC,KAAK,EAAEkH,MAAM,CAAClH,KAAM;UAAAqG,QAAA,EAC9Ca,MAAM,CAACjH;QAAK,GADAiH,MAAM,CAAClH,KAAK;UAAAsG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEjB,CACX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,EAEL3F,KAAK,iBACJjB,OAAA,CAACjC,KAAK;MAACuJ,QAAQ,EAAC,OAAO;MAACT,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAN,QAAA,EACnCvF;IAAK;MAAAwF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACR,eAED5G,OAAA,CAACtC,IAAI;MAAC6J,SAAS;MAACC,OAAO,EAAE,CAAE;MAAAhB,QAAA,gBAEzBxG,OAAA,CAACtC,IAAI;QAAC+J,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAAnB,QAAA,eACvBxG,OAAA,CAACxC,IAAI;UAAAgJ,QAAA,eACHxG,OAAA,CAACvC,WAAW;YAAA+I,QAAA,gBACVxG,OAAA,CAACrC,UAAU;cAACoJ,OAAO,EAAC,IAAI;cAACa,YAAY;cAAApB,QAAA,EAAC;YAEtC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACb5G,OAAA,CAAC/B,gBAAgB;cACf4J,OAAO,eACL7H,OAAA,CAAChC,MAAM;gBACL8J,OAAO,EAAEvG,kBAAmB;gBAC5B0F,QAAQ,EAAEC,CAAC,IAAI1F,qBAAqB,CAAC0F,CAAC,CAACC,MAAM,CAACW,OAAO,CAAE;gBACvDC,KAAK,EAAC;cAAS;gBAAAtB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChB,CACF;cACDxG,KAAK,EAAEmB,kBAAkB,GAAG,wBAAwB,GAAG,aAAc;cACrEsF,EAAE,EAAE;gBAAEC,EAAE,EAAE;cAAE;YAAE;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACf,CAAC,eACF5G,OAAA,CAAC3B,cAAc;cAAC2J,SAAS,EAAExJ,KAAM;cAACqI,EAAE,EAAE;gBAAEoB,SAAS,EAAE;cAAO,CAAE;cAAAzB,QAAA,eAC1DxG,OAAA,CAAC9B,KAAK;gBAACgK,IAAI,EAAC,OAAO;gBAAA1B,QAAA,gBACjBxG,OAAA,CAAC1B,SAAS;kBAAAkI,QAAA,eACRxG,OAAA,CAACzB,QAAQ;oBAAAiI,QAAA,gBACPxG,OAAA,CAAC5B,SAAS;sBAACyI,EAAE,EAAE;wBAAEsB,UAAU,EAAE;sBAAI,CAAE;sBAAA3B,QAAA,EAAC;oBAAO;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAW,CAAC,eACvD5G,OAAA,CAAC5B,SAAS;sBAACyI,EAAE,EAAE;wBAAEsB,UAAU,EAAE;sBAAI,CAAE;sBAAA3B,QAAA,EAAC;oBAAW;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAW,CAAC,eAC3D5G,OAAA,CAAC5B,SAAS;sBAACyI,EAAE,EAAE;wBAAEsB,UAAU,EAAE;sBAAI,CAAE;sBAAA3B,QAAA,EAAC;oBAAI;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAW,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC5C;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACF,CAAC,eACZ5G,OAAA,CAAC7B,SAAS;kBAAAqI,QAAA,EACP/F,WAAW,CAAC6D,MAAM,GAAG,CAAC,GACrB,CAAC,MAAM;oBACL,MAAM8D,QAAQ,GAAGxF,IAAI,CAAC4B,GAAG,CAAC,GAAG/D,WAAW,CAACyC,GAAG,CAACmF,CAAC,IAAIA,CAAC,CAACtD,WAAW,CAAC,CAAC;oBACjE,OAAOtE,WAAW,CAAC6H,OAAO,CAAElD,OAAO,IAAK;sBACtC,MAAMmD,UAAU,GAAGlH,gBAAgB,CAAC6E,QAAQ,CAACd,OAAO,CAAC9B,YAAY,CAAC;sBAClE;sBACA,MAAMkF,eAAe,GAAG7H,QAAQ,CAC7ByD,MAAM,CAACjB,CAAC,IAAIA,CAAC,CAACG,YAAY,KAAK8B,OAAO,CAAC9B,YAAY,IAAIH,CAAC,CAAC4B,WAAW,GAAG,CAAC,CAAC,CACzE7B,GAAG,CAACC,CAAC,KAAK;wBAAEyB,IAAI,EAAEzB,CAAC,CAACC,SAAS;wBAAET,KAAK,EAAEQ,CAAC,CAAC4B;sBAAY,CAAC,CAAC,CAAC;sBAC1D,OAAO,cACL/E,OAAA,CAACzB,QAAQ;wBAAAiI,QAAA,gBACPxG,OAAA,CAAC5B,SAAS;0BAACyI,EAAE,EAAE;4BAAEsB,UAAU,EAAE;0BAAI,CAAE;0BAAA3B,QAAA,gBACjCxG,OAAA,CAACvB,UAAU;4BAACyJ,IAAI,EAAC,OAAO;4BAACO,OAAO,EAAEA,CAAA,KAAM1C,iBAAiB,CAACX,OAAO,CAAC9B,YAAY,CAAE;4BAAAkD,QAAA,EAC7E+B,UAAU,gBAAGvI,OAAA,CAACF,UAAU;8BAAA2G,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OAAE,CAAC,gBAAG5G,OAAA,CAACH,OAAO;8BAAA4G,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OAAE;0BAAC;4BAAAH,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAChC,CAAC,EACZxB,OAAO,CAAC9B,YAAY;wBAAA;0BAAAmD,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACZ,CAAC,eACZ5G,OAAA,CAAC5B,SAAS;0BAAAoI,QAAA,EACPjF,kBAAkB,GACf,MAAM,GACN,GAAGmB,WAAW,CAAC0C,OAAO,CAACL,WAAW,CAAC;wBAAG;0BAAA0B,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACjC,CAAC,eACZ5G,OAAA,CAAC5B,SAAS;0BAAAoI,QAAA,eACRxG,OAAA,CAACzC,GAAG;4BAACsJ,EAAE,EAAE;8BAAE6B,KAAK,EAAE,MAAM;8BAAEC,MAAM,EAAE,EAAE;8BAAEC,OAAO,EAAE,SAAS;8BAAEC,YAAY,EAAE,CAAC;8BAAEC,QAAQ,EAAE;4BAAW,CAAE;4BAAAtC,QAAA,eAChGxG,OAAA,CAACzC,GAAG;8BACFsJ,EAAE,EAAE;gCACF6B,KAAK,EAAE,MAAM;gCACbC,MAAM,EAAE,MAAM;gCACdC,OAAO,EAAE,SAAS;gCAClBC,YAAY,EAAE,CAAC;gCACfE,UAAU,EAAE;8BACd;4BAAE;8BAAAtC,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OACH;0BAAC;4BAAAH,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OACC;wBAAC;0BAAAH,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACG,CAAC;sBAAA,GAxBCxB,OAAO,CAAC9B,YAAY;wBAAAmD,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAyBzB,CAAC,EACX2B,UAAU,IAAIC,eAAe,CAAClE,MAAM,GAAG,CAAC,IAAIkE,eAAe,CAACtF,GAAG,CAAE8F,CAAC,IAAK;wBACrE,MAAMC,WAAW,GAAID,CAAC,CAACrG,KAAK,GAAGyC,OAAO,CAACL,WAAW,GAAI,GAAG;wBACzD,oBACE/E,OAAA,CAACzB,QAAQ;0BAAAiI,QAAA,gBACPxG,OAAA,CAAC5B,SAAS;4BAACyI,EAAE,EAAE;8BAAEqC,EAAE,EAAE;4BAAE,CAAE;4BAAA1C,QAAA,EAAEwC,CAAC,CAACpE;0BAAI;4BAAA6B,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAY,CAAC,eAC9C5G,OAAA,CAAC5B,SAAS;4BAAAoI,QAAA,EACPjF,kBAAkB,GACf,GAAGqB,IAAI,CAACC,KAAK,CAACoG,WAAW,CAAC,GAAG,GAC7B,GAAGvG,WAAW,CAACsG,CAAC,CAACrG,KAAK,CAAC;0BAAG;4BAAA8D,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OACrB,CAAC,eACZ5G,OAAA,CAAC5B,SAAS;4BAAAoI,QAAA,eACRxG,OAAA,CAACzC,GAAG;8BAACsJ,EAAE,EAAE;gCAAE6B,KAAK,EAAE,MAAM;gCAAEC,MAAM,EAAE,EAAE;gCAAEC,OAAO,EAAE,SAAS;gCAAEC,YAAY,EAAE,CAAC;gCAAEC,QAAQ,EAAE;8BAAW,CAAE;8BAAAtC,QAAA,eAChGxG,OAAA,CAACzC,GAAG;gCACFsJ,EAAE,EAAE;kCACF6B,KAAK,EAAE,GAAGO,WAAW,GAAG;kCACxBN,MAAM,EAAE,MAAM;kCACdC,OAAO,EAAE,SAAS;kCAClBC,YAAY,EAAE,CAAC;kCACfE,UAAU,EAAE;gCACd;8BAAE;gCAAAtC,QAAA,EAAAC,YAAA;gCAAAC,UAAA;gCAAAC,YAAA;8BAAA,OACH;4BAAC;8BAAAH,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OACC;0BAAC;4BAAAH,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OACG,CAAC;wBAAA,GAnBCxB,OAAO,CAAC9B,YAAY,GAAG,GAAG,GAAG0F,CAAC,CAACpE,IAAI;0BAAA6B,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAoBxC,CAAC;sBAEf,CAAC,CAAC,EACF2B,UAAU,IAAIC,eAAe,CAAClE,MAAM,KAAK,CAAC,iBACxCtE,OAAA,CAACzB,QAAQ;wBAAAiI,QAAA,eACPxG,OAAA,CAAC5B,SAAS;0BAAC+K,OAAO,EAAE,CAAE;0BAACC,KAAK,EAAC,QAAQ;0BAAA5C,QAAA,eACnCxG,OAAA,CAACrC,UAAU;4BAACoK,KAAK,EAAC,gBAAgB;4BAAAvB,QAAA,EAAC;0BAA6B;4BAAAC,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAY;wBAAC;0BAAAH,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACpE;sBAAC,GAHCxB,OAAO,CAAC9B,YAAY,GAAG,WAAW;wBAAAmD,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAIvC,CACX,CACF;oBACH,CAAC,CAAC;kBACJ,CAAC,EAAE,CAAC,gBAEJ5G,OAAA,CAACzB,QAAQ;oBAAAiI,QAAA,eACPxG,OAAA,CAAC5B,SAAS;sBAAC+K,OAAO,EAAE,CAAE;sBAACC,KAAK,EAAC,QAAQ;sBAAA5C,QAAA,eACnCxG,OAAA,CAACrC,UAAU;wBAACoK,KAAK,EAAC,gBAAgB;wBAAAvB,QAAA,EAAC;sBAAyB;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAY;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAChE;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACJ;gBACX;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACP;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGP5G,OAAA,CAACtC,IAAI;QAAC+J,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAAnB,QAAA,eACvBxG,OAAA,CAACxC,IAAI;UAAAgJ,QAAA,eACHxG,OAAA,CAACvC,WAAW;YAAA+I,QAAA,gBACVxG,OAAA,CAACrC,UAAU;cAACoJ,OAAO,EAAC,IAAI;cAACa,YAAY;cAAApB,QAAA,EAAC;YAEtC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACb5G,OAAA,CAACzC,GAAG;cAACsJ,EAAE,EAAE;gBAAE8B,MAAM,EAAE;cAAI,CAAE;cAAAnC,QAAA,EACtB3F,cAAc,CAACyD,MAAM,GAAG,CAAC,gBACxBtE,OAAA,CAACX,mBAAmB;gBAAAmH,QAAA,eAClBxG,OAAA,CAACnB,QAAQ;kBAAA2H,QAAA,gBACPxG,OAAA,CAAClB,GAAG;oBACF0D,IAAI,EAAE3B,cAAe;oBACrBwI,OAAO,EAAC,aAAa;oBACrBC,OAAO,EAAC,aAAa;oBACrBC,EAAE,EAAC,KAAK;oBACRC,EAAE,EAAC,KAAK;oBACRC,WAAW,EAAE,GAAI;oBACjBrJ,KAAK,EAAEA,CAAC;sBAAEsJ,WAAW;sBAAE3E;oBAAY,CAAC,KAClC,GAAG2E,WAAW,KAAKhH,WAAW,CAACqC,WAAW,CAAC,GAC5C;oBAAAyB,QAAA,EAEA3F,cAAc,CAACqC,GAAG,CAAC,CAACyG,KAAK,EAAEC,KAAK,kBAC/B5J,OAAA,CAACjB,IAAI;sBAAyB8K,IAAI,EAAE5J,MAAM,CAAC2J,KAAK,GAAG3J,MAAM,CAACqE,MAAM;oBAAE,GAAvDqF,KAAK,CAACD,WAAW;sBAAAjD,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAwC,CACrE;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACC,CAAC,eACN5G,OAAA,CAACb,OAAO;oBAAC2K,SAAS,EAAG3J,KAAK,IAAKuC,WAAW,CAACvC,KAAK,CAAC,GAAG;kBAAS;oBAAAsG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,eAChE5G,OAAA,CAACZ,MAAM;oBAAAqH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACF;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACQ,CAAC,gBAEtB5G,OAAA,CAACzC,GAAG;gBAAC6I,OAAO,EAAC,MAAM;gBAACC,cAAc,EAAC,QAAQ;gBAACC,UAAU,EAAC,QAAQ;gBAACqC,MAAM,EAAC,MAAM;gBAAAnC,QAAA,eAC3ExG,OAAA,CAACrC,UAAU;kBAACoK,KAAK,EAAC,gBAAgB;kBAAAvB,QAAA,EAAC;gBAA6B;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1E;YACN;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGP5G,OAAA,CAACtC,IAAI;QAAC+J,IAAI;QAACC,EAAE,EAAE,EAAG;QAAAlB,QAAA,eAChBxG,OAAA,CAACxC,IAAI;UAAAgJ,QAAA,eACHxG,OAAA,CAACvC,WAAW;YAAA+I,QAAA,gBACVxG,OAAA,CAACrC,UAAU;cAACoJ,OAAO,EAAC,IAAI;cAACa,YAAY;cAAApB,QAAA,EAAC;YAEtC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACb5G,OAAA,CAAC/B,gBAAgB;cACf4J,OAAO,eACL7H,OAAA,CAAChC,MAAM;gBACL8J,OAAO,EAAE3G,WAAY;gBACrB8F,QAAQ,EAAEC,CAAC,IAAI9F,cAAc,CAAC8F,CAAC,CAACC,MAAM,CAACW,OAAO,CAAE;gBAChDC,KAAK,EAAC;cAAS;gBAAAtB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChB,CACF;cACDxG,KAAK,EAAEe,WAAW,GAAG,qBAAqB,GAAG,aAAc;cAC3D0F,EAAE,EAAE;gBAAEC,EAAE,EAAE;cAAE;YAAE;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACf,CAAC,eACF5G,OAAA,CAACzC,GAAG;cAACsJ,EAAE,EAAE;gBAAE8B,MAAM,EAAE7C;cAAc,CAAE;cAAAU,QAAA,EAChC7F,QAAQ,CAAC2D,MAAM,GAAG,CAAC,gBAClBtE,OAAA,CAACX,mBAAmB;gBAACqJ,KAAK,EAAC,MAAM;gBAACC,MAAM,EAAE7C,aAAc;gBAAAU,QAAA,eAEtDxG,OAAA;kBAAK0I,KAAK,EAAC,MAAM;kBAACC,MAAM,EAAC,MAAM;kBAACoB,OAAO,EAAE,OAAOjH,KAAK,CAACwB,MAAM,GAAGkB,QAAQ,GAAG,GAAG,IAAIM,aAAa,EAAG;kBAAAU,QAAA,GAE9F1D,KAAK,CAACI,GAAG,CAAC,CAAC0B,IAAI,EAAEM,CAAC,KAAK;oBACtB,MAAM8E,KAAK,GAAGpF,IAAI,CAACqF,KAAK,CAAC,GAAG,CAAC;oBAC7B,MAAMC,UAAU,GAAG,EAAE;oBACrB;oBACA,MAAMC,MAAM,GAAG,EAAE,GAAG,CAACH,KAAK,CAAC1F,MAAM,GAAG,CAAC,IAAI4F,UAAU;oBACnD,oBACElK,OAAA;sBAEEoK,CAAC,EAAElF,CAAC,GAAGM,QAAQ,GAAGG,OAAO,GAAGF,SAAS,GAAG,CAAE;sBAC1C4E,CAAC,EAAEF,MAAO;sBACVG,UAAU,EAAC,QAAQ;sBACnBC,QAAQ,EAAC,IAAI;sBAAA/D,QAAA,EAEZwD,KAAK,CAAC9G,GAAG,CAAC,CAACsH,IAAI,EAAEC,GAAG,kBACnBzK,OAAA;wBAEEoK,CAAC,EAAElF,CAAC,GAAGM,QAAQ,GAAGG,OAAO,GAAGF,SAAS,GAAG,CAAE;wBAC1CiF,EAAE,EAAED,GAAG,KAAK,CAAC,GAAG,CAAC,GAAGP,UAAW;wBAAA1D,QAAA,EAE9BgE;sBAAI,GAJAA,IAAI,GAAGC,GAAG;wBAAAhE,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAKV,CACR;oBAAC,GAdGhC,IAAI;sBAAA6B,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAeL,CAAC;kBAEX,CAAC,CAAC,EAEDrB,uBAAuB,CAACrC,GAAG,CAAC,CAACkC,OAAO,EAAEuF,CAAC,kBACtC3K,OAAA;oBAAoBoK,CAAC,EAAEzE,OAAO,GAAG,EAAG;oBAAC0E,CAAC,EAAEM,CAAC,GAAGjF,UAAU,GAAGE,OAAO,GAAGF,UAAU,GAAG,CAAE;oBAAC4E,UAAU,EAAC,KAAK;oBAACC,QAAQ,EAAC,IAAI;oBAACK,iBAAiB,EAAC,QAAQ;oBAAApE,QAAA,EAAEpB;kBAAO,GAA1IA,OAAO;oBAAAqB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAA0I,CAC7J,CAAC,EAEDzB,WAAW,CAACjC,GAAG,CAAC,CAAC2H,GAAG,EAAEF,CAAC,KACtBE,GAAG,CAAC3H,GAAG,CAAC,CAAC/C,KAAK,EAAE+E,CAAC,KAAK;oBACpB;oBACA,IAAI4F,YAAY,GAAG,EAAE;oBACrB,IAAIC,YAAY,GAAG,CAAC;oBACpB,IAAI5J,WAAW,EAAE;sBACf,IAAIwJ,CAAC,KAAK,CAAC,EAAE;wBACX;wBACAI,YAAY,GAAG,GAAG;sBACpB,CAAC,MAAM;wBACL;wBACAA,YAAY,GAAGrG,YAAY,CAACQ,CAAC,CAAC,GAAG,CAAC,GAAI/E,KAAK,GAAGuE,YAAY,CAACQ,CAAC,CAAC,GAAI,GAAG,GAAG,CAAC;sBAC1E;sBACA4F,YAAY,GAAGC,YAAY,GAAG,CAAC,GAAG,GAAGnI,IAAI,CAACC,KAAK,CAACkI,YAAY,CAAC,GAAG,GAAG,EAAE;oBACvE,CAAC,MAAM;sBACLD,YAAY,GAAG3K,KAAK,GAAG,CAAC,GAAGuC,WAAW,CAACvC,KAAK,CAAC,GAAG,EAAE;oBACpD;oBACA;oBACA,MAAMqE,GAAG,GAAG5B,IAAI,CAAC4B,GAAG,CAAC,GAAGW,WAAW,CAAC6F,IAAI,CAAC,CAAC,CAAC;oBAC3C,MAAMzG,GAAG,GAAG,CAAC;oBACb,MAAM0G,OAAO,GAAGzG,GAAG,KAAKD,GAAG,GAAG,CAAC,GAAG,CAACpE,KAAK,GAAGoE,GAAG,KAAKC,GAAG,GAAGD,GAAG,CAAC;oBAC7D,MAAMwD,KAAK,GAAG,OAAO,GAAG,GAAGkD,OAAO,GAAG,EAAE,KAAK,GAAG,GAAGA,OAAO,GAAG,GAAG,KAAK,GAAG,GAAGA,OAAO,GAAG,GAAG,GAAG;oBAC1F,oBACEjL,OAAA;sBAAAwG,QAAA,gBACExG,OAAA;wBACEoK,CAAC,EAAElF,CAAC,GAAGM,QAAQ,GAAGG,OAAQ;wBAC1B0E,CAAC,EAAEM,CAAC,GAAGjF,UAAU,GAAGE,OAAQ;wBAC5B8C,KAAK,EAAEjD,SAAU;wBACjBkD,MAAM,EAAEjD,UAAW;wBACnBmE,IAAI,EAAE9B,KAAM;wBACZmD,MAAM,EAAC;sBAAM;wBAAAzE,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACd,CAAC,eACF5G,OAAA;wBACEoK,CAAC,EAAElF,CAAC,GAAGM,QAAQ,GAAGG,OAAO,GAAGF,SAAS,GAAG,CAAE;wBAC1C4E,CAAC,EAAEM,CAAC,GAAGjF,UAAU,GAAGE,OAAO,GAAGF,UAAU,GAAG,CAAE;wBAC7C4E,UAAU,EAAC,QAAQ;wBACnBM,iBAAiB,EAAC,QAAQ;wBAC1BL,QAAQ,EAAC,IAAI;wBACbV,IAAI,EAAE1J,KAAK,GAAIqE,GAAG,GAAG,CAAE,GAAG,MAAM,GAAG,MAAO;wBAAAgC,QAAA,EAEzCsE;sBAAY;wBAAArE,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACT,CAAC;oBAAA,GAlBD1B,CAAC,GAAG,GAAG,GAAGyF,CAAC;sBAAAlE,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAmBhB,CAAC;kBAER,CAAC,CACH,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACa,CAAC,gBAEtB5G,OAAA,CAACzC,GAAG;gBAAC6I,OAAO,EAAC,MAAM;gBAACC,cAAc,EAAC,QAAQ;gBAACC,UAAU,EAAC,QAAQ;gBAACqC,MAAM,EAAC,MAAM;gBAAAnC,QAAA,eAC3ExG,OAAA,CAACrC,UAAU;kBAACoK,KAAK,EAAC,gBAAgB;kBAAAvB,QAAA,EAAC;gBAA8B;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3E;YACN;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACtG,EAAA,CA3cQD,SAAS;AAAA8K,EAAA,GAAT9K,SAAS;AA6clB,eAAeA,SAAS;AAAC,IAAA8K,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}