{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\golun\\\\TimeTracker\\\\client\\\\src\\\\components\\\\DayHourBar.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst lineStyle = {\n  height: 4,\n  borderRadius: 2,\n  margin: '1px 0',\n  width: '18px',\n  background: '#ccc',\n  border: '1px solid green',\n  // for debugging\n  transition: 'background 0.2s'\n};\nexport default function DayHourBar({\n  hours = 0,\n  isWeekend = false\n}) {\n  if (isWeekend) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 48,\n        width: 20,\n        background: '#ccc',\n        borderRadius: 4,\n        margin: '0 auto',\n        border: '1px solid red'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n  let color = '#1976d2'; // blue\n  if (hours > 8) color = '#d32f2f'; // red\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 48,\n      width: 20,\n      margin: '0 auto',\n      border: '1px solid red'\n    },\n    children: [...Array(8)].map((_, i, arr) => {\n      const lineIndex = arr.length - 1 - i; // reverse order\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          ...lineStyle,\n          background: lineIndex < Math.min(hours, 8) ? color : '#ccc',\n          opacity: lineIndex < hours ? 1 : 0.5\n        }\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_c = DayHourBar;\nvar _c;\n$RefreshReg$(_c, \"DayHourBar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","lineStyle","height","borderRadius","margin","width","background","border","transition","DayHourBar","hours","isWeekend","style","fileName","_jsxFileName","lineNumber","columnNumber","color","display","flexDirection","alignItems","justifyContent","children","Array","map","_","i","arr","lineIndex","length","Math","min","opacity","_c","$RefreshReg$"],"sources":["C:/Users/golun/TimeTracker/client/src/components/DayHourBar.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst lineStyle = {\r\n  height: 4,\r\n  borderRadius: 2,\r\n  margin: '1px 0',\r\n  width: '18px',\r\n  background: '#ccc',\r\n  border: '1px solid green', // for debugging\r\n  transition: 'background 0.2s',\r\n};\r\n\r\nexport default function DayHourBar({ hours = 0, isWeekend = false }) {\r\n  if (isWeekend) {\r\n    return (\r\n      <div style={{ height: 48, width: 20, background: '#ccc', borderRadius: 4, margin: '0 auto', border: '1px solid red' }} />\r\n    );\r\n  }\r\n  let color = '#1976d2'; // blue\r\n  if (hours > 8) color = '#d32f2f'; // red\r\n  return (\r\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', height: 48, width: 20, margin: '0 auto', border: '1px solid red' }}>\r\n      {[...Array(8)].map((_, i, arr) => {\r\n        const lineIndex = arr.length - 1 - i; // reverse order\r\n        return (\r\n          <div\r\n            key={i}\r\n            style={{\r\n              ...lineStyle,\r\n              background: lineIndex < Math.min(hours, 8) ? color : '#ccc',\r\n              opacity: lineIndex < hours ? 1 : 0.5,\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n} "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAG;EAChBC,MAAM,EAAE,CAAC;EACTC,YAAY,EAAE,CAAC;EACfC,MAAM,EAAE,OAAO;EACfC,KAAK,EAAE,MAAM;EACbC,UAAU,EAAE,MAAM;EAClBC,MAAM,EAAE,iBAAiB;EAAE;EAC3BC,UAAU,EAAE;AACd,CAAC;AAED,eAAe,SAASC,UAAUA,CAAC;EAAEC,KAAK,GAAG,CAAC;EAAEC,SAAS,GAAG;AAAM,CAAC,EAAE;EACnE,IAAIA,SAAS,EAAE;IACb,oBACEX,OAAA;MAAKY,KAAK,EAAE;QAAEV,MAAM,EAAE,EAAE;QAAEG,KAAK,EAAE,EAAE;QAAEC,UAAU,EAAE,MAAM;QAAEH,YAAY,EAAE,CAAC;QAAEC,MAAM,EAAE,QAAQ;QAAEG,MAAM,EAAE;MAAgB;IAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAE7H;EACA,IAAIC,KAAK,GAAG,SAAS,CAAC,CAAC;EACvB,IAAIP,KAAK,GAAG,CAAC,EAAEO,KAAK,GAAG,SAAS,CAAC,CAAC;EAClC,oBACEjB,OAAA;IAAKY,KAAK,EAAE;MAAEM,OAAO,EAAE,MAAM;MAAEC,aAAa,EAAE,QAAQ;MAAEC,UAAU,EAAE,QAAQ;MAAEC,cAAc,EAAE,QAAQ;MAAEnB,MAAM,EAAE,EAAE;MAAEG,KAAK,EAAE,EAAE;MAAED,MAAM,EAAE,QAAQ;MAAEG,MAAM,EAAE;IAAgB,CAAE;IAAAe,QAAA,EACxK,CAAC,GAAGC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,EAAEC,GAAG,KAAK;MAChC,MAAMC,SAAS,GAAGD,GAAG,CAACE,MAAM,GAAG,CAAC,GAAGH,CAAC,CAAC,CAAC;MACtC,oBACE1B,OAAA;QAEEY,KAAK,EAAE;UACL,GAAGX,SAAS;UACZK,UAAU,EAAEsB,SAAS,GAAGE,IAAI,CAACC,GAAG,CAACrB,KAAK,EAAE,CAAC,CAAC,GAAGO,KAAK,GAAG,MAAM;UAC3De,OAAO,EAAEJ,SAAS,GAAGlB,KAAK,GAAG,CAAC,GAAG;QACnC;MAAE,GALGgB,CAAC;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMP,CAAC;IAEN,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACiB,EAAA,GAzBuBxB,UAAU;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}