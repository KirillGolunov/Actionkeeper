name: CI/CD

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_BACKEND: ghcr.io/${{ github.repository_owner }}/actionkeeper-backend
  IMAGE_FRONTEND: ghcr.io/${{ github.repository_owner }}/actionkeeper-frontend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Prepare build metadata
        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Build backend image
        run: |
          docker build \
            -f Dockerfile \
            -t ${{ env.IMAGE_BACKEND }}:${SHORT_SHA} \
            -t ${{ env.IMAGE_BACKEND }}:latest \
            .

      - name: Build frontend image
        run: |
          docker build \
            -f client/Dockerfile \
            -t ${{ env.IMAGE_FRONTEND }}:${SHORT_SHA} \
            -t ${{ env.IMAGE_FRONTEND }}:latest \
            client

      - name: Push images
        run: |
          docker push ${{ env.IMAGE_BACKEND }}:${SHORT_SHA}
          docker push ${{ env.IMAGE_BACKEND }}:latest
          docker push ${{ env.IMAGE_FRONTEND }}:${SHORT_SHA}
          docker push ${{ env.IMAGE_FRONTEND }}:latest

  deploy:
    needs: build-and-push
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.5
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            docker login ${{ env.REGISTRY }} -u ${{ github.repository_owner }} -p ${{ secrets.GHCR_TOKEN }}
            cd /root/TimeTracker
            docker compose pull backend frontend
            docker compose up -d --remove-orphans
            docker image prune -f

