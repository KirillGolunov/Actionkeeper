name: CI/CD

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Prepare build metadata
        run: |
          echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV
          OWNER_LC=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          echo "OWNER_LC=$OWNER_LC" >> $GITHUB_ENV
          echo "IMAGE_BACKEND=ghcr.io/$OWNER_LC/actionkeeper-backend" >> $GITHUB_ENV
          echo "IMAGE_FRONTEND=ghcr.io/$OWNER_LC/actionkeeper-frontend" >> $GITHUB_ENV

      - name: Build backend image
        run: |
          docker build \
            -f Dockerfile \
            -t $IMAGE_BACKEND:${SHORT_SHA} \
            -t $IMAGE_BACKEND:latest \
            .

      - name: Build frontend image
        run: |
          docker build \
            -f client/Dockerfile \
            -t $IMAGE_FRONTEND:${SHORT_SHA} \
            -t $IMAGE_FRONTEND:latest \
            client

      - name: Push images
        run: |
          docker push $IMAGE_BACKEND:${SHORT_SHA}
          docker push $IMAGE_BACKEND:latest
          docker push $IMAGE_FRONTEND:${SHORT_SHA}
          docker push $IMAGE_FRONTEND:latest

  deploy:
    needs: build-and-push
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.6
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            docker login ${{ env.REGISTRY }} -u ${{ github.repository_owner }} -p ${{ secrets.GHCR_TOKEN }}
            cd /root/TimeTracker
            docker compose pull backend frontend
            docker compose up -d --remove-orphans
            docker image prune -f
